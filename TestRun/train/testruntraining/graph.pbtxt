node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond"
  op: "If"
  input: "global_step/VarIsInitializedOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "global_step_cond_false_1643"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "global_step_cond_true_1642"
      }
    }
  }
}
node {
  name: "global_step/cond/Identity"
  op: "Identity"
  input: "global_step/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Identity"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "normalize_element/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 245
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 245
          }
        }
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
        string_val: "/Users/marktakken/Documents/KataGo/MacOS/KataGoTF2MacOS/TestRun/shuffleddata/20210512-163356/train/data0.tfrecord"
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "normalize_element/component_0"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1024
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "TensorSliceDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "FlatMapDataset"
  op: "FlatMapDataset"
  input: "ShuffleDataset"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_flat_map_lambda_1676"
        attr {
          key: "_tf_data_function"
          value {
            b: true
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 100
      }
    }
  }
}
node {
  name: "seed_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleDataset_1"
  op: "ShuffleDataset"
  input: "FlatMapDataset"
  input: "buffer_size_1"
  input: "seed_1"
  input: "seed2_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "MapDataset"
  op: "MapDataset"
  input: "ShuffleDataset_1"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map_parse_input_1719"
        attr {
          key: "_tf_data_function"
          value {
            b: true
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 46
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 362
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: true
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "buffer_size_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "PrefetchDataset"
  op: "PrefetchDataset"
  input: "MapDataset"
  input: "buffer_size_2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MapDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "buffer_size_min"
    value {
      i: 0
    }
  }
  attr {
    key: "legacy_autotune"
    value {
      b: true
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 46
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 362
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
}
node {
  name: "ModelDataset"
  op: "ModelDataset"
  input: "PrefetchDataset"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "algorithm"
    value {
      i: 0
    }
  }
  attr {
    key: "cpu_budget"
    value {
      i: 0
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 46
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 362
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "ram_budget"
    value {
      i: 0
    }
  }
}
node {
  name: "optimizations_enabled"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizations_disabled"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optimizations_default"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: "map_and_batch_fusion"
        string_val: "shuffle_and_repeat_fusion"
        string_val: "noop_elimination"
      }
    }
  }
}
node {
  name: "OptimizeDatasetV2"
  op: "OptimizeDatasetV2"
  input: "ModelDataset"
  input: "optimizations_enabled"
  input: "optimizations_disabled"
  input: "optimizations_default"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "optimization_configs"
    value {
      list {
        s: "autotune_buffer_sizes:autotune:true"
        s: "disable_prefetch_legacy_autotune:autotune:true"
        s: "enable_gradient_descent:autotune:true"
        s: "map_parallelization:autotune:true"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 46
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 362
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "IteratorV2"
  op: "IteratorV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MapDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 46
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 362
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MakeIterator"
  op: "MakeIterator"
  input: "OptimizeDatasetV2"
  input: "IteratorV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MapDataset"
      }
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "IteratorV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MapDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "IteratorV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@MapDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 46
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 362
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 46
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 362
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_UINT8
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 8
          }
        }
        tensor_content: "\200@ \020\010\004\002\001"
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "Const"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 46
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BitwiseAnd"
  op: "BitwiseAnd"
  input: "ExpandDims"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 46
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\026\000\000\000p\001\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "BitwiseAnd"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 368
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000i\001\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Reshape_1"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 361
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "strided_slice"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 361
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "transpose"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 361
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Minimum"
  op: "Minimum"
  input: "Cast"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 361
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "random_uniform"
  op: "RandomUniformInt"
  input: "random_uniform/shape"
  input: "random_uniform/min"
  input: "random_uniform/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Greater"
  op: "Greater"
  input: "random_uniform"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000$\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000)\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2"
  op: "StridedSlice"
  input: "IteratorGetNext:3"
  input: "strided_slice_2/stack"
  input: "strided_slice_2/stack_1"
  input: "strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "strided_slice_2"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "strided_slice_2"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\032\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\033\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_3/stack"
  input: "strided_slice_3/stack_1"
  input: "strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_4"
  op: "StridedSlice"
  input: "IteratorGetNext:3"
  input: "strided_slice_4/stack"
  input: "strided_slice_4/stack_1"
  input: "strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "strided_slice_4"
  input: "Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "strided_slice_4"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\034\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_5"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_5/stack"
  input: "strided_slice_5/stack_1"
  input: "strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_6"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_6/stack"
  input: "strided_slice_6/stack_1"
  input: "strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_7"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_7/stack"
  input: "strided_slice_7/stack_1"
  input: "strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\013\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_8"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_8/stack"
  input: "strided_slice_8/stack_1"
  input: "strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_9/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_9"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_9/stack"
  input: "strided_slice_9/stack_1"
  input: "strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "stack"
  op: "Pack"
  input: "strided_slice_7"
  input: "strided_slice_8"
  input: "strided_slice_9"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_10/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_10"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_10/stack"
  input: "strided_slice_10/stack_1"
  input: "strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_11/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\013\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_11"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_11/stack"
  input: "strided_slice_11/stack_1"
  input: "strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_12/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\017\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_12"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_12/stack"
  input: "strided_slice_12/stack_1"
  input: "strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "stack_1"
  op: "Pack"
  input: "strided_slice_10"
  input: "strided_slice_11"
  input: "strided_slice_12"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_13/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_13/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_13/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_13"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_13/stack"
  input: "strided_slice_13/stack_1"
  input: "strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_14/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\025\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_14/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\026\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_14/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_14"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_14/stack"
  input: "strided_slice_14/stack_1"
  input: "strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_15/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\026\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_15/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\027\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_15/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_15"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_15/stack"
  input: "strided_slice_15/stack_1"
  input: "strided_slice_15/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "truediv_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "IteratorGetNext:4"
  input: "truediv_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_16/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_16/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_16/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_16"
  op: "StridedSlice"
  input: "IteratorGetNext:5"
  input: "strided_slice_16/stack"
  input: "strided_slice_16/stack_1"
  input: "strided_slice_16/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_17/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_17/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_17/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_17"
  op: "StridedSlice"
  input: "IteratorGetNext:5"
  input: "strided_slice_17/stack"
  input: "strided_slice_17/stack_1"
  input: "strided_slice_17/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "truediv_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 120.0
      }
    }
  }
}
node {
  name: "truediv_3"
  op: "RealDiv"
  input: "strided_slice_17"
  input: "truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_18/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_18/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_18/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_18"
  op: "StridedSlice"
  input: "IteratorGetNext:5"
  input: "strided_slice_18/stack"
  input: "strided_slice_18/stack_1"
  input: "strided_slice_18/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_1"
  op: "Transpose"
  input: "strided_slice_18"
  input: "transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_19/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_19/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_19/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_19"
  op: "StridedSlice"
  input: "IteratorGetNext:5"
  input: "strided_slice_19/stack"
  input: "strided_slice_19/stack_1"
  input: "strided_slice_19/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_20/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\031\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_20/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\032\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_20/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_20"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_20/stack"
  input: "strided_slice_20/stack_1"
  input: "strided_slice_20/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_21/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_21/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\036\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_21/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_21"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_21/stack"
  input: "strided_slice_21/stack_1"
  input: "strided_slice_21/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_22/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\033\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_22/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\034\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_22/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_22"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_22/stack"
  input: "strided_slice_22/stack_1"
  input: "strided_slice_22/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_23/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\"\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_23/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000#\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_23/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_23"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_23/stack"
  input: "strided_slice_23/stack_1"
  input: "strided_slice_23/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_24/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000!\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_24/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\"\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_24/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_24"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_24/stack"
  input: "strided_slice_24/stack_1"
  input: "strided_slice_24/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_25/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000/\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_25/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_25/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_25"
  op: "StridedSlice"
  input: "IteratorGetNext:2"
  input: "strided_slice_25/stack"
  input: "strided_slice_25/stack_1"
  input: "strided_slice_25/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000\026\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "Minimum"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_26/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_26/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_26/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_26"
  op: "StridedSlice"
  input: "Reshape_2"
  input: "strided_slice_26/stack"
  input: "strided_slice_26/stack_1"
  input: "strided_slice_26/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_27/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_27/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_27/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_27"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_27/stack"
  input: "strided_slice_27/stack_1"
  input: "strided_slice_27/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_28/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_28/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_28/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_28"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_28/stack"
  input: "strided_slice_28/stack_1"
  input: "strided_slice_28/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_29/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_29/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_29/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_29"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_29/stack"
  input: "strided_slice_29/stack_1"
  input: "strided_slice_29/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cond"
  op: "StatelessIf"
  input: "strided_slice_27"
  input: "Reshape_2"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_false_1894"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_true_1893"
      }
    }
  }
}
node {
  name: "cond/Identity"
  op: "Identity"
  input: "cond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "cond_1"
  op: "StatelessIf"
  input: "strided_slice_28"
  input: "cond/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_1_false_1904"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_1_true_1903"
      }
    }
  }
}
node {
  name: "cond_1/Identity"
  op: "Identity"
  input: "cond_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "cond_2"
  op: "StatelessIf"
  input: "strided_slice_29"
  input: "cond_1/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_2_false_1914"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_2_true_1913"
      }
    }
  }
}
node {
  name: "cond_2/Identity"
  op: "Identity"
  input: "cond_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 22
          }
          dim {
            size: 22
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\026\000\000\000\026\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "Const_4"
  input: "Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 22
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 22
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 22
          }
          dim {
            size: 22
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Tensordot/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\344\001\000\000"
      }
    }
  }
}
node {
  name: "Tensordot/Reshape"
  op: "Reshape"
  input: "Const_5"
  input: "Tensordot/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 484
          }
        }
      }
    }
  }
}
node {
  name: "Tensordot/MatMul"
  op: "MatMul"
  input: "strided_slice_1"
  input: "Tensordot/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 484
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Tensordot/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\026\000\000\000\026\000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot"
  op: "Reshape"
  input: "Tensordot/MatMul"
  input: "Tensordot/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "Reshape_3"
  input: "Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 22
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377i\001\000\000\026\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_4"
  op: "Reshape"
  input: "cond_2/Identity"
  input: "Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 361
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "MatMul"
  op: "BatchMatMulV2"
  input: "Reshape_4"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 361
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "Reshape_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000\026\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_5"
  op: "Reshape"
  input: "MatMul"
  input: "Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "PadV2/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000"
      }
    }
  }
}
node {
  name: "PadV2/constant_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "PadV2"
  op: "PadV2"
  input: "strided_slice_1"
  input: "PadV2/paddings"
  input: "PadV2/constant_values"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "IteratorGetNext:1"
  input: "PadV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_30/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_30/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_30/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_30"
  op: "StridedSlice"
  input: "Reshape_5"
  input: "strided_slice_30/stack"
  input: "strided_slice_30/stack_1"
  input: "strided_slice_30/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_2"
  op: "Sum"
  input: "strided_slice_30"
  input: "Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Sum_3/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_3"
  op: "Sum"
  input: "strided_slice_30"
  input: "Sum_3/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Sqrt"
  op: "Sqrt"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\026\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10050377994775772
      }
    }
  }
}
node {
  name: "truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal/mul"
  op: "Mul"
  input: "truncated_normal/TruncatedNormal"
  input: "truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal"
  op: "Add"
  input: "truncated_normal/mul"
  input: "truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "truncated_normal"
  input: "mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "conv1/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 22
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv1/w"
    }
  }
}
node {
  name: "conv1/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/w/Assign"
  op: "AssignVariableOp"
  input: "conv1/w"
  input: "mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D"
  op: "Conv2D"
  input: "Reshape_5"
  input: "Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\023\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.22941572964191437
      }
    }
  }
}
node {
  name: "truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_1/mul"
  op: "Mul"
  input: "truncated_normal_1/TruncatedNormal"
  input: "truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_1"
  op: "Add"
  input: "truncated_normal_1/mul"
  input: "truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "truncated_normal_1"
  input: "mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "ginputw"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ginputw"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "ginputw"
    }
  }
}
node {
  name: "ginputw/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "ginputw"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ginputw/Assign"
  op: "AssignVariableOp"
  input: "ginputw"
  input: "mul_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ginputw/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "ginputw"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "ginputw"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_1/MatMul"
  op: "MatMul"
  input: "mul"
  input: "Tensordot_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reshape_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_6"
  op: "Reshape"
  input: "Tensordot_1/MatMul"
  input: "Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "Conv2D"
  input: "Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/norm1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv1/norm1/beta"
    }
  }
}
node {
  name: "rconv1/norm1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv1/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv1/norm1/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv1/norm1/beta"
  input: "zeros_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/norm1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_2"
  op: "AddV2"
  input: "add_1"
  input: "add_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "add_2"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_2/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_2/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_2/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_2/mul"
  op: "Mul"
  input: "truncated_normal_2/TruncatedNormal"
  input: "truncated_normal_2/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_2"
  op: "Add"
  input: "truncated_normal_2/mul"
  input: "truncated_normal_2/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40824830532073975
      }
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "truncated_normal_2"
  input: "mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv1/w1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv1/w1"
    }
  }
}
node {
  name: "rconv1/w1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv1/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv1/w1/Assign"
  op: "AssignVariableOp"
  input: "rconv1/w1"
  input: "mul_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/w1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_1"
  op: "Conv2D"
  input: "Relu"
  input: "Conv2D_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_3"
  op: "AddV2"
  input: "zeros_2"
  input: "add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv1/norm2/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv1/norm2/gamma"
    }
  }
}
node {
  name: "rconv1/norm2/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv1/norm2/gamma/Assign"
  op: "AssignVariableOp"
  input: "rconv1/norm2/gamma"
  input: "add_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/norm2/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/norm2/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv1/norm2/beta"
    }
  }
}
node {
  name: "rconv1/norm2/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv1/norm2/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv1/norm2/beta"
  input: "zeros_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/norm2/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_5"
  op: "Mul"
  input: "Conv2D_1"
  input: "mul_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "add_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_4"
  op: "AddV2"
  input: "mul_5"
  input: "add_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_6"
  op: "Mul"
  input: "add_4"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu_1"
  op: "Relu"
  input: "mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_3/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_3/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_3/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_3/mul"
  op: "Mul"
  input: "truncated_normal_3/TruncatedNormal"
  input: "truncated_normal_3/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_3"
  op: "Add"
  input: "truncated_normal_3/mul"
  input: "truncated_normal_3/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mul_7"
  op: "Mul"
  input: "truncated_normal_3"
  input: "mul_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv1/w2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv1/w2"
    }
  }
}
node {
  name: "rconv1/w2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv1/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv1/w2/Assign"
  op: "AssignVariableOp"
  input: "rconv1/w2"
  input: "mul_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/w2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_2"
  op: "Conv2D"
  input: "Relu_1"
  input: "Conv2D_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_5"
  op: "AddV2"
  input: "add_1"
  input: "Conv2D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/norm1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv2/norm1/beta"
    }
  }
}
node {
  name: "rconv2/norm1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv2/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv2/norm1/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv2/norm1/beta"
  input: "zeros_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/norm1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_6"
  op: "AddV2"
  input: "add_5"
  input: "add_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_8"
  op: "Mul"
  input: "add_6"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu_2"
  op: "Relu"
  input: "mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_4/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_4/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_4/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_4/mul"
  op: "Mul"
  input: "truncated_normal_4/TruncatedNormal"
  input: "truncated_normal_4/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_4"
  op: "Add"
  input: "truncated_normal_4/mul"
  input: "truncated_normal_4/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_9/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40824830532073975
      }
    }
  }
}
node {
  name: "mul_9"
  op: "Mul"
  input: "truncated_normal_4"
  input: "mul_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv2/w1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv2/w1"
    }
  }
}
node {
  name: "rconv2/w1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv2/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv2/w1/Assign"
  op: "AssignVariableOp"
  input: "rconv2/w1"
  input: "mul_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/w1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_3"
  op: "Conv2D"
  input: "Relu_2"
  input: "Conv2D_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_7"
  op: "AddV2"
  input: "zeros_5"
  input: "add_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv2/norm2/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv2/norm2/gamma"
    }
  }
}
node {
  name: "rconv2/norm2/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv2/norm2/gamma/Assign"
  op: "AssignVariableOp"
  input: "rconv2/norm2/gamma"
  input: "add_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/norm2/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/norm2/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv2/norm2/beta"
    }
  }
}
node {
  name: "rconv2/norm2/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv2/norm2/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv2/norm2/beta"
  input: "zeros_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/norm2/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_10"
  op: "Mul"
  input: "Conv2D_3"
  input: "mul_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "add_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_8"
  op: "AddV2"
  input: "mul_10"
  input: "add_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_11"
  op: "Mul"
  input: "add_8"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu_3"
  op: "Relu"
  input: "mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_5/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_5/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_5/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_5/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_5/mul"
  op: "Mul"
  input: "truncated_normal_5/TruncatedNormal"
  input: "truncated_normal_5/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_5"
  op: "Add"
  input: "truncated_normal_5/mul"
  input: "truncated_normal_5/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_12/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mul_12"
  op: "Mul"
  input: "truncated_normal_5"
  input: "mul_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv2/w2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv2/w2"
    }
  }
}
node {
  name: "rconv2/w2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv2/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv2/w2/Assign"
  op: "AssignVariableOp"
  input: "rconv2/w2"
  input: "mul_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/w2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_4"
  op: "Conv2D"
  input: "Relu_3"
  input: "Conv2D_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_9"
  op: "AddV2"
  input: "add_5"
  input: "Conv2D_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/norm1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/norm1/beta"
    }
  }
}
node {
  name: "rconv3/norm1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/norm1/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv3/norm1/beta"
  input: "zeros_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_10"
  op: "AddV2"
  input: "add_9"
  input: "add_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_13"
  op: "Mul"
  input: "add_10"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu_4"
  op: "Relu"
  input: "mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_6/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_6/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_6/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_6/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_6/mul"
  op: "Mul"
  input: "truncated_normal_6/TruncatedNormal"
  input: "truncated_normal_6/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_6"
  op: "Add"
  input: "truncated_normal_6/mul"
  input: "truncated_normal_6/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "mul_14/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40824830532073975
      }
    }
  }
}
node {
  name: "mul_14"
  op: "Mul"
  input: "truncated_normal_6"
  input: "mul_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "rconv3/w1a"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/w1a"
    }
  }
}
node {
  name: "rconv3/w1a/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/w1a/Assign"
  op: "AssignVariableOp"
  input: "rconv3/w1a"
  input: "mul_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w1a/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_7/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_7/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_7/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_7/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_7/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_7/mul"
  op: "Mul"
  input: "truncated_normal_7/TruncatedNormal"
  input: "truncated_normal_7/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_7"
  op: "Add"
  input: "truncated_normal_7/mul"
  input: "truncated_normal_7/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_15/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.638943076133728
      }
    }
  }
}
node {
  name: "mul_15"
  op: "Mul"
  input: "truncated_normal_7"
  input: "mul_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rconv3/w1b"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/w1b"
    }
  }
}
node {
  name: "rconv3/w1b/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/w1b/Assign"
  op: "AssignVariableOp"
  input: "rconv3/w1b"
  input: "mul_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w1b/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_5"
  op: "Conv2D"
  input: "Relu_4"
  input: "Conv2D_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv2D_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_6"
  op: "Conv2D"
  input: "Relu_4"
  input: "Conv2D_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/norm1b/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1b/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/norm1b/beta"
    }
  }
}
node {
  name: "rconv3/norm1b/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/norm1b/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv3/norm1b/beta"
  input: "zeros_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm1b/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_11"
  op: "AddV2"
  input: "Conv2D_6"
  input: "add_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_16"
  op: "Mul"
  input: "add_11"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Relu_5"
  op: "Relu"
  input: "mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_7/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_7"
  op: "Reshape"
  input: "Sum_3"
  input: "Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_8/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_8"
  op: "Reshape"
  input: "Sqrt"
  input: "Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sum_4/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_4"
  op: "Sum"
  input: "Relu_5"
  input: "Sum_4/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "truediv_4"
  op: "RealDiv"
  input: "Sum_4"
  input: "Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Max/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Max"
  op: "Max"
  input: "Relu_5"
  input: "Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 14.0
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "Reshape_8"
  input: "sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truediv_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "truediv_5"
  op: "RealDiv"
  input: "sub"
  input: "truediv_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_17"
  op: "Mul"
  input: "truediv_4"
  input: "truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "truediv_4"
  input: "mul_17"
  input: "Max"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_8/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_8/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_8/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "truncated_normal_8/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_8/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_8/mul"
  op: "Mul"
  input: "truncated_normal_8/TruncatedNormal"
  input: "truncated_normal_8/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_8"
  op: "Add"
  input: "truncated_normal_8/mul"
  input: "truncated_normal_8/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "mul_18/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.319471538066864
      }
    }
  }
}
node {
  name: "mul_18"
  op: "Mul"
  input: "truncated_normal_8"
  input: "mul_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "rconv3/w1r"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/w1r"
    }
  }
}
node {
  name: "rconv3/w1r/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/w1r/Assign"
  op: "AssignVariableOp"
  input: "rconv3/w1r"
  input: "mul_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w1r/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_2/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot_2/Reshape"
  op: "Reshape"
  input: "concat"
  input: "Tensordot_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Tensordot_2/MatMul"
  op: "MatMul"
  input: "Tensordot_2/Reshape"
  input: "Tensordot_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Tensordot_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot_2"
  op: "Reshape"
  input: "Tensordot_2/MatMul"
  input: "Tensordot_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "add_12"
  op: "AddV2"
  input: "Conv2D_5"
  input: "Tensordot_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_13/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_13"
  op: "AddV2"
  input: "zeros_9"
  input: "add_13/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "rconv3/norm2/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/norm2/gamma"
    }
  }
}
node {
  name: "rconv3/norm2/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/norm2/gamma/Assign"
  op: "AssignVariableOp"
  input: "rconv3/norm2/gamma"
  input: "add_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm2/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/norm2/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/norm2/beta"
    }
  }
}
node {
  name: "rconv3/norm2/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/norm2/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv3/norm2/beta"
  input: "zeros_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm2/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_19"
  op: "Mul"
  input: "add_12"
  input: "mul_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "add_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_14"
  op: "AddV2"
  input: "mul_19"
  input: "add_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "mul_20"
  op: "Mul"
  input: "add_14"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Relu_6"
  op: "Relu"
  input: "mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_9/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_9/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_9/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_9/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_9/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_9/mul"
  op: "Mul"
  input: "truncated_normal_9/TruncatedNormal"
  input: "truncated_normal_9/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_9"
  op: "Add"
  input: "truncated_normal_9/mul"
  input: "truncated_normal_9/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_21/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mul_21"
  op: "Mul"
  input: "truncated_normal_9"
  input: "mul_21/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv3/w2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/w2"
    }
  }
}
node {
  name: "rconv3/w2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/w2/Assign"
  op: "AssignVariableOp"
  input: "rconv3/w2"
  input: "mul_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_7"
  op: "Conv2D"
  input: "Relu_6"
  input: "Conv2D_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_15"
  op: "AddV2"
  input: "add_9"
  input: "Conv2D_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv4/norm1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv4/norm1/beta"
    }
  }
}
node {
  name: "rconv4/norm1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv4/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv4/norm1/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv4/norm1/beta"
  input: "zeros_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/norm1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_16"
  op: "AddV2"
  input: "add_15"
  input: "add_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_22"
  op: "Mul"
  input: "add_16"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu_7"
  op: "Relu"
  input: "mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_10/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_10/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_10/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_10/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_10/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_10/mul"
  op: "Mul"
  input: "truncated_normal_10/TruncatedNormal"
  input: "truncated_normal_10/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_10"
  op: "Add"
  input: "truncated_normal_10/mul"
  input: "truncated_normal_10/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_23/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40824830532073975
      }
    }
  }
}
node {
  name: "mul_23"
  op: "Mul"
  input: "truncated_normal_10"
  input: "mul_23/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv4/w1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv4/w1"
    }
  }
}
node {
  name: "rconv4/w1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv4/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv4/w1/Assign"
  op: "AssignVariableOp"
  input: "rconv4/w1"
  input: "mul_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/w1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_8"
  op: "Conv2D"
  input: "Relu_7"
  input: "Conv2D_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "zeros_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_17/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_17"
  op: "AddV2"
  input: "zeros_12"
  input: "add_17/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv4/norm2/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv4/norm2/gamma"
    }
  }
}
node {
  name: "rconv4/norm2/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv4/norm2/gamma/Assign"
  op: "AssignVariableOp"
  input: "rconv4/norm2/gamma"
  input: "add_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/norm2/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv4/norm2/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv4/norm2/beta"
    }
  }
}
node {
  name: "rconv4/norm2/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv4/norm2/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv4/norm2/beta"
  input: "zeros_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/norm2/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_24"
  op: "Mul"
  input: "Conv2D_8"
  input: "mul_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "add_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_18"
  op: "AddV2"
  input: "mul_24"
  input: "add_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_25"
  op: "Mul"
  input: "add_18"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu_8"
  op: "Relu"
  input: "mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_11/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_11/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_11/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_11/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_11/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_11/mul"
  op: "Mul"
  input: "truncated_normal_11/TruncatedNormal"
  input: "truncated_normal_11/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_11"
  op: "Add"
  input: "truncated_normal_11/mul"
  input: "truncated_normal_11/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_26/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mul_26"
  op: "Mul"
  input: "truncated_normal_11"
  input: "mul_26/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv4/w2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv4/w2"
    }
  }
}
node {
  name: "rconv4/w2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv4/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv4/w2/Assign"
  op: "AssignVariableOp"
  input: "rconv4/w2"
  input: "mul_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/w2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_9"
  op: "Conv2D"
  input: "Relu_8"
  input: "Conv2D_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_19"
  op: "AddV2"
  input: "add_15"
  input: "Conv2D_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "zeros_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/norm1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/norm1/beta"
    }
  }
}
node {
  name: "rconv5/norm1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/norm1/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv5/norm1/beta"
  input: "zeros_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_20"
  op: "AddV2"
  input: "add_19"
  input: "add_20/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_27"
  op: "Mul"
  input: "add_20"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu_9"
  op: "Relu"
  input: "mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_12/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_12/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_12/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_12/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_12/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_12/mul"
  op: "Mul"
  input: "truncated_normal_12/TruncatedNormal"
  input: "truncated_normal_12/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_12"
  op: "Add"
  input: "truncated_normal_12/mul"
  input: "truncated_normal_12/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "mul_28/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40824830532073975
      }
    }
  }
}
node {
  name: "mul_28"
  op: "Mul"
  input: "truncated_normal_12"
  input: "mul_28/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "rconv5/w1a"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/w1a"
    }
  }
}
node {
  name: "rconv5/w1a/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/w1a/Assign"
  op: "AssignVariableOp"
  input: "rconv5/w1a"
  input: "mul_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w1a/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_13/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_13/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_13/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_13/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_13/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_13/mul"
  op: "Mul"
  input: "truncated_normal_13/TruncatedNormal"
  input: "truncated_normal_13/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_13"
  op: "Add"
  input: "truncated_normal_13/mul"
  input: "truncated_normal_13/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_29/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.638943076133728
      }
    }
  }
}
node {
  name: "mul_29"
  op: "Mul"
  input: "truncated_normal_13"
  input: "mul_29/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "rconv5/w1b"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/w1b"
    }
  }
}
node {
  name: "rconv5/w1b/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/w1b/Assign"
  op: "AssignVariableOp"
  input: "rconv5/w1b"
  input: "mul_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w1b/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_10"
  op: "Conv2D"
  input: "Relu_9"
  input: "Conv2D_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv2D_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_11"
  op: "Conv2D"
  input: "Relu_9"
  input: "Conv2D_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "zeros_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/norm1b/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1b/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/norm1b/beta"
    }
  }
}
node {
  name: "rconv5/norm1b/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/norm1b/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv5/norm1b/beta"
  input: "zeros_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm1b/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_21"
  op: "AddV2"
  input: "Conv2D_11"
  input: "add_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_30"
  op: "Mul"
  input: "add_21"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Relu_10"
  op: "Relu"
  input: "mul_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_9/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_9"
  op: "Reshape"
  input: "Sum_3"
  input: "Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_10/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_10"
  op: "Reshape"
  input: "Sqrt"
  input: "Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sum_5/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_5"
  op: "Sum"
  input: "Relu_10"
  input: "Sum_5/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "truediv_6"
  op: "RealDiv"
  input: "Sum_5"
  input: "Reshape_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Max_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Max_1"
  op: "Max"
  input: "Relu_10"
  input: "Max_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 14.0
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "Reshape_10"
  input: "sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truediv_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "truediv_7"
  op: "RealDiv"
  input: "sub_1"
  input: "truediv_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_31"
  op: "Mul"
  input: "truediv_6"
  input: "truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "truediv_6"
  input: "mul_31"
  input: "Max_1"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_14/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_14/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_14/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "truncated_normal_14/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_14/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_14/mul"
  op: "Mul"
  input: "truncated_normal_14/TruncatedNormal"
  input: "truncated_normal_14/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_14"
  op: "Add"
  input: "truncated_normal_14/mul"
  input: "truncated_normal_14/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "mul_32/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.319471538066864
      }
    }
  }
}
node {
  name: "mul_32"
  op: "Mul"
  input: "truncated_normal_14"
  input: "mul_32/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "rconv5/w1r"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/w1r"
    }
  }
}
node {
  name: "rconv5/w1r/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/w1r/Assign"
  op: "AssignVariableOp"
  input: "rconv5/w1r"
  input: "mul_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w1r/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_3/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot_3/Reshape"
  op: "Reshape"
  input: "concat_1"
  input: "Tensordot_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Tensordot_3/MatMul"
  op: "MatMul"
  input: "Tensordot_3/Reshape"
  input: "Tensordot_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Tensordot_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot_3"
  op: "Reshape"
  input: "Tensordot_3/MatMul"
  input: "Tensordot_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "add_22"
  op: "AddV2"
  input: "Conv2D_10"
  input: "Tensordot_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "zeros_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_23/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_23"
  op: "AddV2"
  input: "zeros_16"
  input: "add_23/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "rconv5/norm2/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/norm2/gamma"
    }
  }
}
node {
  name: "rconv5/norm2/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/norm2/gamma/Assign"
  op: "AssignVariableOp"
  input: "rconv5/norm2/gamma"
  input: "add_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm2/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/norm2/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/norm2/beta"
    }
  }
}
node {
  name: "rconv5/norm2/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/norm2/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv5/norm2/beta"
  input: "zeros_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm2/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_33"
  op: "Mul"
  input: "add_22"
  input: "mul_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "add_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_24"
  op: "AddV2"
  input: "mul_33"
  input: "add_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "mul_34"
  op: "Mul"
  input: "add_24"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Relu_11"
  op: "Relu"
  input: "mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_15/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_15/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_15/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "truncated_normal_15/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_15/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_15/mul"
  op: "Mul"
  input: "truncated_normal_15/TruncatedNormal"
  input: "truncated_normal_15/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_15"
  op: "Add"
  input: "truncated_normal_15/mul"
  input: "truncated_normal_15/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_35/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mul_35"
  op: "Mul"
  input: "truncated_normal_15"
  input: "mul_35/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv5/w2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/w2"
    }
  }
}
node {
  name: "rconv5/w2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/w2/Assign"
  op: "AssignVariableOp"
  input: "rconv5/w2"
  input: "mul_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_12"
  op: "Conv2D"
  input: "Relu_11"
  input: "Conv2D_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_25"
  op: "AddV2"
  input: "add_19"
  input: "Conv2D_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "zeros_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv6/norm1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv6/norm1/beta"
    }
  }
}
node {
  name: "rconv6/norm1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv6/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv6/norm1/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv6/norm1/beta"
  input: "zeros_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/norm1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_26"
  op: "AddV2"
  input: "add_25"
  input: "add_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_36"
  op: "Mul"
  input: "add_26"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu_12"
  op: "Relu"
  input: "mul_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_16/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_16/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_16/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_16/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_16/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_16/mul"
  op: "Mul"
  input: "truncated_normal_16/TruncatedNormal"
  input: "truncated_normal_16/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_16"
  op: "Add"
  input: "truncated_normal_16/mul"
  input: "truncated_normal_16/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_37/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40824830532073975
      }
    }
  }
}
node {
  name: "mul_37"
  op: "Mul"
  input: "truncated_normal_16"
  input: "mul_37/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv6/w1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv6/w1"
    }
  }
}
node {
  name: "rconv6/w1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv6/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv6/w1/Assign"
  op: "AssignVariableOp"
  input: "rconv6/w1"
  input: "mul_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/w1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_13"
  op: "Conv2D"
  input: "Relu_12"
  input: "Conv2D_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "zeros_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_27/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_27"
  op: "AddV2"
  input: "zeros_19"
  input: "add_27/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv6/norm2/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv6/norm2/gamma"
    }
  }
}
node {
  name: "rconv6/norm2/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv6/norm2/gamma/Assign"
  op: "AssignVariableOp"
  input: "rconv6/norm2/gamma"
  input: "add_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/norm2/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv6/norm2/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv6/norm2/beta"
    }
  }
}
node {
  name: "rconv6/norm2/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv6/norm2/beta/Assign"
  op: "AssignVariableOp"
  input: "rconv6/norm2/beta"
  input: "zeros_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/norm2/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_38"
  op: "Mul"
  input: "Conv2D_13"
  input: "mul_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "add_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_28"
  op: "AddV2"
  input: "mul_38"
  input: "add_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_39"
  op: "Mul"
  input: "add_28"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu_13"
  op: "Relu"
  input: "mul_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_17/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_17/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_17/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.048112522810697556
      }
    }
  }
}
node {
  name: "truncated_normal_17/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_17/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_17/mul"
  op: "Mul"
  input: "truncated_normal_17/TruncatedNormal"
  input: "truncated_normal_17/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_17"
  op: "Add"
  input: "truncated_normal_17/mul"
  input: "truncated_normal_17/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_40/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mul_40"
  op: "Mul"
  input: "truncated_normal_17"
  input: "mul_40/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "rconv6/w2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv6/w2"
    }
  }
}
node {
  name: "rconv6/w2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv6/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv6/w2/Assign"
  op: "AssignVariableOp"
  input: "rconv6/w2"
  input: "mul_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/w2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_14"
  op: "Conv2D"
  input: "Relu_13"
  input: "Conv2D_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_29"
  op: "AddV2"
  input: "add_25"
  input: "Conv2D_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "zeros_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "trunk/norm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@trunk/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "trunk/norm/beta"
    }
  }
}
node {
  name: "trunk/norm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "trunk/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "trunk/norm/beta/Assign"
  op: "AssignVariableOp"
  input: "trunk/norm/beta"
  input: "zeros_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "trunk/norm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "trunk/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "trunk/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_30"
  op: "AddV2"
  input: "add_29"
  input: "add_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "mul_41"
  op: "Mul"
  input: "add_30"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Relu_14"
  op: "Relu"
  input: "mul_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_18/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_18/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_18/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "truncated_normal_18/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_18/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_18/mul"
  op: "Mul"
  input: "truncated_normal_18/TruncatedNormal"
  input: "truncated_normal_18/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_18"
  op: "Add"
  input: "truncated_normal_18/mul"
  input: "truncated_normal_18/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_42/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_42"
  op: "Mul"
  input: "truncated_normal_18"
  input: "mul_42/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "p1/intermediate_conv/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/intermediate_conv/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "p1/intermediate_conv/w"
    }
  }
}
node {
  name: "p1/intermediate_conv/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "p1/intermediate_conv/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p1/intermediate_conv/w/Assign"
  op: "AssignVariableOp"
  input: "p1/intermediate_conv/w"
  input: "mul_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1/intermediate_conv/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1/intermediate_conv/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1/intermediate_conv/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_15"
  op: "Conv2D"
  input: "Relu_14"
  input: "Conv2D_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "truncated_normal_19/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_19/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_19/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "truncated_normal_19/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_19/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_19/mul"
  op: "Mul"
  input: "truncated_normal_19/TruncatedNormal"
  input: "truncated_normal_19/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_19"
  op: "Add"
  input: "truncated_normal_19/mul"
  input: "truncated_normal_19/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_43/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_43"
  op: "Mul"
  input: "truncated_normal_19"
  input: "mul_43/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "g1/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "g1/w"
    }
  }
}
node {
  name: "g1/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "g1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "g1/w/Assign"
  op: "AssignVariableOp"
  input: "g1/w"
  input: "mul_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g1/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "g1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "g1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_16"
  op: "Conv2D"
  input: "Relu_14"
  input: "Conv2D_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "zeros_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "g1/norm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "g1/norm/beta"
    }
  }
}
node {
  name: "g1/norm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "g1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "g1/norm/beta/Assign"
  op: "AssignVariableOp"
  input: "g1/norm/beta"
  input: "zeros_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g1/norm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "g1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "g1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_31"
  op: "AddV2"
  input: "Conv2D_16"
  input: "add_31/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_44"
  op: "Mul"
  input: "add_31"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Relu_15"
  op: "Relu"
  input: "mul_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_11/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_11"
  op: "Reshape"
  input: "Sum_3"
  input: "Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_12/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_12"
  op: "Reshape"
  input: "Sqrt"
  input: "Reshape_12/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sum_6/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_6"
  op: "Sum"
  input: "Relu_15"
  input: "Sum_6/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "truediv_8"
  op: "RealDiv"
  input: "Sum_6"
  input: "Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Max_2/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Max_2"
  op: "Max"
  input: "Relu_15"
  input: "Max_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 14.0
      }
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "Reshape_12"
  input: "sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truediv_9/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "truediv_9"
  op: "RealDiv"
  input: "sub_2"
  input: "truediv_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_45"
  op: "Mul"
  input: "truediv_8"
  input: "truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concat_2"
  op: "ConcatV2"
  input: "truediv_8"
  input: "mul_45"
  input: "Max_2"
  input: "concat_2/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_20/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_20/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_20/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "truncated_normal_20/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_20/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_20/mul"
  op: "Mul"
  input: "truncated_normal_20/TruncatedNormal"
  input: "truncated_normal_20/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_20"
  op: "Add"
  input: "truncated_normal_20/mul"
  input: "truncated_normal_20/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_46/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_46"
  op: "Mul"
  input: "truncated_normal_20"
  input: "mul_46/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "matmulg2w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulg2w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "matmulg2w"
    }
  }
}
node {
  name: "matmulg2w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "matmulg2w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "matmulg2w/Assign"
  op: "AssignVariableOp"
  input: "matmulg2w"
  input: "mul_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "matmulg2w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "matmulg2w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "matmulg2w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_4/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot_4/Reshape"
  op: "Reshape"
  input: "concat_2"
  input: "Tensordot_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Tensordot_4/MatMul"
  op: "MatMul"
  input: "Tensordot_4/Reshape"
  input: "Tensordot_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Tensordot_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot_4"
  op: "Reshape"
  input: "Tensordot_4/MatMul"
  input: "Tensordot_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "add_32"
  op: "AddV2"
  input: "Conv2D_15"
  input: "Tensordot_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "zeros_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "p1/norm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "p1/norm/beta"
    }
  }
}
node {
  name: "p1/norm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "p1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p1/norm/beta/Assign"
  op: "AssignVariableOp"
  input: "p1/norm/beta"
  input: "zeros_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1/norm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_33"
  op: "AddV2"
  input: "add_32"
  input: "add_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_47"
  op: "Mul"
  input: "add_33"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Relu_16"
  op: "Relu"
  input: "mul_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_21/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_21/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_21/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "truncated_normal_21/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_21/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_21/mul"
  op: "Mul"
  input: "truncated_normal_21/TruncatedNormal"
  input: "truncated_normal_21/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_21"
  op: "Add"
  input: "truncated_normal_21/mul"
  input: "truncated_normal_21/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "mul_48/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.30000001192092896
      }
    }
  }
}
node {
  name: "mul_48"
  op: "Mul"
  input: "truncated_normal_21"
  input: "mul_48/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "p2/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "p2/w"
    }
  }
}
node {
  name: "p2/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "p2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p2/w/Assign"
  op: "AssignVariableOp"
  input: "p2/w"
  input: "mul_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p2/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_17"
  op: "Conv2D"
  input: "Relu_16"
  input: "Conv2D_17/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "sub_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_3"
  op: "Sub"
  input: "sub_3/x"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_49/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5000.0
      }
    }
  }
}
node {
  name: "mul_49"
  op: "Mul"
  input: "sub_3"
  input: "mul_49/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub_4"
  op: "Sub"
  input: "Conv2D_17"
  input: "mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_31/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_31/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_31/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_31"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_31/stack"
  input: "strided_slice_31/stack_1"
  input: "strided_slice_31/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_32/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_32/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_32/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_32"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_32/stack"
  input: "strided_slice_32/stack_1"
  input: "strided_slice_32/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_33/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_33/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_33/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_33"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_33/stack"
  input: "strided_slice_33/stack_1"
  input: "strided_slice_33/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cond_3"
  op: "StatelessIf"
  input: "strided_slice_33"
  input: "sub_4"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_3_false_2511"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_3_true_2510"
      }
    }
  }
}
node {
  name: "cond_3/Identity"
  op: "Identity"
  input: "cond_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_4"
  op: "StatelessIf"
  input: "strided_slice_31"
  input: "cond_3/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_4_false_2521"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_4_true_2520"
      }
    }
  }
}
node {
  name: "cond_4/Identity"
  op: "Identity"
  input: "cond_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_5"
  op: "StatelessIf"
  input: "strided_slice_32"
  input: "cond_4/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_5_false_2531"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_5_true_2530"
      }
    }
  }
}
node {
  name: "cond_5/Identity"
  op: "Identity"
  input: "cond_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_13/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377i\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_13"
  op: "Reshape"
  input: "cond_5/Identity"
  input: "Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 361
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_22/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_22/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_22/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "truncated_normal_22/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_22/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_22/mul"
  op: "Mul"
  input: "truncated_normal_22/TruncatedNormal"
  input: "truncated_normal_22/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_22"
  op: "Add"
  input: "truncated_normal_22/mul"
  input: "truncated_normal_22/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "mul_50/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.30000001192092896
      }
    }
  }
}
node {
  name: "mul_50"
  op: "Mul"
  input: "truncated_normal_22"
  input: "mul_50/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "matmulpass"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulpass"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "matmulpass"
    }
  }
}
node {
  name: "matmulpass/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "matmulpass"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "matmulpass/Assign"
  op: "AssignVariableOp"
  input: "matmulpass"
  input: "mul_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "matmulpass/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "matmulpass"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "matmulpass"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_5/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot_5/Reshape"
  op: "Reshape"
  input: "concat_2"
  input: "Tensordot_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Tensordot_5/MatMul"
  op: "MatMul"
  input: "Tensordot_5/Reshape"
  input: "Tensordot_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Tensordot_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot_5"
  op: "Reshape"
  input: "Tensordot_5/MatMul"
  input: "Tensordot_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_14/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_14"
  op: "Reshape"
  input: "Tensordot_5"
  input: "Reshape_14/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "policy_output/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "policy_output"
  op: "ConcatV2"
  input: "Reshape_13"
  input: "Reshape_14"
  input: "policy_output/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_23/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_23/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_23/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "truncated_normal_23/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_23/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_23/mul"
  op: "Mul"
  input: "truncated_normal_23/TruncatedNormal"
  input: "truncated_normal_23/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_23"
  op: "Add"
  input: "truncated_normal_23/mul"
  input: "truncated_normal_23/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_51/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_51"
  op: "Mul"
  input: "truncated_normal_23"
  input: "mul_51/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "v1/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v1/w"
    }
  }
}
node {
  name: "v1/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v1/w/Assign"
  op: "AssignVariableOp"
  input: "v1/w"
  input: "mul_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v1/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_18"
  op: "Conv2D"
  input: "Relu_14"
  input: "Conv2D_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "zeros_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v1/norm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v1/norm/beta"
    }
  }
}
node {
  name: "v1/norm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v1/norm/beta/Assign"
  op: "AssignVariableOp"
  input: "v1/norm/beta"
  input: "zeros_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v1/norm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_34"
  op: "AddV2"
  input: "Conv2D_18"
  input: "add_34/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "mul_52"
  op: "Mul"
  input: "add_34"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Relu_17"
  op: "Relu"
  input: "mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_15/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_15"
  op: "Reshape"
  input: "Sum_3"
  input: "Reshape_15/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_16/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_16"
  op: "Reshape"
  input: "Sqrt"
  input: "Reshape_16/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sum_7/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_7"
  op: "Sum"
  input: "Relu_17"
  input: "Sum_7/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_10"
  op: "RealDiv"
  input: "Sum_7"
  input: "Reshape_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "sub_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 14.0
      }
    }
  }
}
node {
  name: "sub_5"
  op: "Sub"
  input: "Reshape_16"
  input: "sub_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truediv_11/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "truediv_11"
  op: "RealDiv"
  input: "sub_5"
  input: "truediv_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_53"
  op: "Mul"
  input: "truediv_10"
  input: "truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "sub_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 14.0
      }
    }
  }
}
node {
  name: "sub_6"
  op: "Sub"
  input: "Reshape_16"
  input: "sub_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truediv_12/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "truediv_12"
  op: "RealDiv"
  input: "Square"
  input: "truediv_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "sub_7"
  op: "Sub"
  input: "truediv_12"
  input: "sub_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_54"
  op: "Mul"
  input: "truediv_10"
  input: "sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_3"
  op: "ConcatV2"
  input: "truediv_10"
  input: "mul_53"
  input: "mul_54"
  input: "concat_3/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_24/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_24/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_24/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "truncated_normal_24/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_24/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_24/mul"
  op: "Mul"
  input: "truncated_normal_24/TruncatedNormal"
  input: "truncated_normal_24/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_24"
  op: "Add"
  input: "truncated_normal_24/mul"
  input: "truncated_normal_24/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "mul_55/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_55"
  op: "Mul"
  input: "truncated_normal_24"
  input: "mul_55/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "v2/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v2/w"
    }
  }
}
node {
  name: "v2/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v2/w/Assign"
  op: "AssignVariableOp"
  input: "v2/w"
  input: "mul_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v2/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_25/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "truncated_normal_25/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_25/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "truncated_normal_25/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_25/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_25/mul"
  op: "Mul"
  input: "truncated_normal_25/TruncatedNormal"
  input: "truncated_normal_25/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_25"
  op: "Add"
  input: "truncated_normal_25/mul"
  input: "truncated_normal_25/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "mul_56/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "mul_56"
  op: "Mul"
  input: "truncated_normal_25"
  input: "mul_56/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "v2/b"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v2/b"
    }
  }
}
node {
  name: "v2/b/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v2/b/Assign"
  op: "AssignVariableOp"
  input: "v2/b"
  input: "mul_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v2/b/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_1"
  op: "MatMul"
  input: "concat_3"
  input: "MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_35/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_35"
  op: "AddV2"
  input: "MatMul_1"
  input: "add_35/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Relu_18"
  op: "Relu"
  input: "add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_26/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_26/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_26/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "truncated_normal_26/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_26/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_26/mul"
  op: "Mul"
  input: "truncated_normal_26/TruncatedNormal"
  input: "truncated_normal_26/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_26"
  op: "Add"
  input: "truncated_normal_26/mul"
  input: "truncated_normal_26/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "mul_57/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_57"
  op: "Mul"
  input: "truncated_normal_26"
  input: "mul_57/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "v3/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v3/w"
    }
  }
}
node {
  name: "v3/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v3/w/Assign"
  op: "AssignVariableOp"
  input: "v3/w"
  input: "mul_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v3/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_27/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "truncated_normal_27/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_27/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "truncated_normal_27/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_27/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_27/mul"
  op: "Mul"
  input: "truncated_normal_27/TruncatedNormal"
  input: "truncated_normal_27/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_27"
  op: "Add"
  input: "truncated_normal_27/mul"
  input: "truncated_normal_27/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "mul_58/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "mul_58"
  op: "Mul"
  input: "truncated_normal_27"
  input: "mul_58/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "v3/b"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v3/b"
    }
  }
}
node {
  name: "v3/b/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v3/b/Assign"
  op: "AssignVariableOp"
  input: "v3/b"
  input: "mul_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v3/b/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_2"
  op: "MatMul"
  input: "Relu_18"
  input: "MatMul_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_36"
  op: "AddV2"
  input: "MatMul_2"
  input: "add_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_28/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_28/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_28/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "truncated_normal_28/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_28/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_28/mul"
  op: "Mul"
  input: "truncated_normal_28/TruncatedNormal"
  input: "truncated_normal_28/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_28"
  op: "Add"
  input: "truncated_normal_28/mul"
  input: "truncated_normal_28/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "mul_59/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_59"
  op: "Mul"
  input: "truncated_normal_28"
  input: "mul_59/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "mv3/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mv3/w"
    }
  }
}
node {
  name: "mv3/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mv3/w/Assign"
  op: "AssignVariableOp"
  input: "mv3/w"
  input: "mul_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mv3/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_29/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "truncated_normal_29/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_29/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "truncated_normal_29/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_29/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_29/mul"
  op: "Mul"
  input: "truncated_normal_29/TruncatedNormal"
  input: "truncated_normal_29/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_29"
  op: "Add"
  input: "truncated_normal_29/mul"
  input: "truncated_normal_29/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "mul_60/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "mul_60"
  op: "Mul"
  input: "truncated_normal_29"
  input: "mul_60/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "mv3/b"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mv3/b"
    }
  }
}
node {
  name: "mv3/b/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mv3/b/Assign"
  op: "AssignVariableOp"
  input: "mv3/b"
  input: "mul_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mv3/b/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_3"
  op: "MatMul"
  input: "Relu_18"
  input: "MatMul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_37"
  op: "AddV2"
  input: "MatMul_3"
  input: "add_37/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_30/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_30/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_30/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "truncated_normal_30/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_30/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_30/mul"
  op: "Mul"
  input: "truncated_normal_30/TruncatedNormal"
  input: "truncated_normal_30/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_30"
  op: "Add"
  input: "truncated_normal_30/mul"
  input: "truncated_normal_30/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "mul_61/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_61"
  op: "Mul"
  input: "truncated_normal_30"
  input: "mul_61/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "mmv3/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mmv3/w"
    }
  }
}
node {
  name: "mmv3/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mmv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mmv3/w/Assign"
  op: "AssignVariableOp"
  input: "mmv3/w"
  input: "mul_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mmv3/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mmv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_31/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "truncated_normal_31/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_31/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "truncated_normal_31/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_31/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_31/mul"
  op: "Mul"
  input: "truncated_normal_31/TruncatedNormal"
  input: "truncated_normal_31/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_31"
  op: "Add"
  input: "truncated_normal_31/mul"
  input: "truncated_normal_31/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "mul_62/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "mul_62"
  op: "Mul"
  input: "truncated_normal_31"
  input: "mul_62/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "mmv3/b"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mmv3/b"
    }
  }
}
node {
  name: "mmv3/b/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mmv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mmv3/b/Assign"
  op: "AssignVariableOp"
  input: "mmv3/b"
  input: "mul_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mmv3/b/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mmv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mmvmul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mmv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mmvmul"
  op: "MatMul"
  input: "Relu_18"
  input: "mmvmul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mmv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_38"
  op: "AddV2"
  input: "mmvmul"
  input: "add_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "value_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\003\000\000\000"
      }
    }
  }
}
node {
  name: "value_output"
  op: "Reshape"
  input: "add_36"
  input: "value_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "miscvalues_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "miscvalues_output"
  op: "Reshape"
  input: "add_37"
  input: "miscvalues_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "moremiscvalues_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\010\000\000\000"
      }
    }
  }
}
node {
  name: "moremiscvalues_output"
  op: "Reshape"
  input: "add_38"
  input: "moremiscvalues_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_32/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_32/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_32/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14359162747859955
      }
    }
  }
}
node {
  name: "truncated_normal_32/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_32/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_32/mul"
  op: "Mul"
  input: "truncated_normal_32/TruncatedNormal"
  input: "truncated_normal_32/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_32"
  op: "Add"
  input: "truncated_normal_32/mul"
  input: "truncated_normal_32/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "mul_63/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_63"
  op: "Mul"
  input: "truncated_normal_32"
  input: "mul_63/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "sb2/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sb2/w"
    }
  }
}
node {
  name: "sb2/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sb2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sb2/w/Assign"
  op: "AssignVariableOp"
  input: "sb2/w"
  input: "mul_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_33/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "truncated_normal_33/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_33/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14359162747859955
      }
    }
  }
}
node {
  name: "truncated_normal_33/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_33/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_33/mul"
  op: "Mul"
  input: "truncated_normal_33/TruncatedNormal"
  input: "truncated_normal_33/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_33"
  op: "Add"
  input: "truncated_normal_33/mul"
  input: "truncated_normal_33/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "mul_64/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "mul_64"
  op: "Mul"
  input: "truncated_normal_33"
  input: "mul_64/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "sb2/b"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sb2/b"
    }
  }
}
node {
  name: "sb2/b/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sb2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sb2/b/Assign"
  op: "AssignVariableOp"
  input: "sb2/b"
  input: "mul_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2/b/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_4"
  op: "MatMul"
  input: "concat_3"
  input: "MatMul_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_39"
  op: "AddV2"
  input: "MatMul_4"
  input: "add_39/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 842
          }
        }
        tensor_content: "33\250\301\315\314\247\301gf\247\301\000\000\247\301\232\231\246\30133\246\301\315\314\245\301gf\245\301\000\000\245\301\232\231\244\30133\244\301\315\314\243\301gf\243\301\000\000\243\301\232\231\242\30133\242\301\315\314\241\301gf\241\301\000\000\241\301\232\231\240\30133\240\301\315\314\237\301gf\237\301\000\000\237\301\232\231\236\30133\236\301\315\314\235\301gf\235\301\000\000\235\301\232\231\234\30133\234\301\315\314\233\301gf\233\301\000\000\233\301\232\231\232\30133\232\301\315\314\231\301gf\231\301\000\000\231\301\232\231\230\30133\230\301\315\314\227\301gf\227\301\000\000\227\301\232\231\226\30133\226\301\315\314\225\301gf\225\301\000\000\225\301\232\231\224\30133\224\301\315\314\223\301gf\223\301\000\000\223\301\232\231\222\30133\222\301\315\314\221\301gf\221\301\000\000\221\301\232\231\220\30133\220\301\315\314\217\301gf\217\301\000\000\217\301\232\231\216\30133\216\301\315\314\215\301gf\215\301\000\000\215\301\232\231\214\30133\214\301\315\314\213\301gf\213\301\000\000\213\301\232\231\212\30133\212\301\315\314\211\301gf\211\301\000\000\211\301\232\231\210\30133\210\301\315\314\207\301gf\207\301\000\000\207\301\232\231\206\30133\206\301\315\314\205\301gf\205\301\000\000\205\301\232\231\204\30133\204\301\315\314\203\301gf\203\301\000\000\203\301\232\231\202\30133\202\301\315\314\201\301gf\201\301\000\000\201\301\232\231\200\30133\200\301\232\231\177\301\315\314~\301\000\000~\30133}\301gf|\301\232\231{\301\315\314z\301\000\000z\30133y\301gfx\301\232\231w\301\315\314v\301\000\000v\30133u\301gft\301\232\231s\301\315\314r\301\000\000r\30133q\301gfp\301\232\231o\301\315\314n\301\000\000n\30133m\301gfl\301\232\231k\301\315\314j\301\000\000j\30133i\301gfh\301\232\231g\301\315\314f\301\000\000f\30133e\301gfd\301\232\231c\301\315\314b\301\000\000b\30133a\301gf`\301\232\231_\301\315\314^\301\000\000^\30133]\301gf\\\301\232\231[\301\315\314Z\301\000\000Z\30133Y\301gfX\301\232\231W\301\315\314V\301\000\000V\30133U\301gfT\301\232\231S\301\315\314R\301\000\000R\30133Q\301gfP\301\232\231O\301\315\314N\301\000\000N\30133M\301gfL\301\232\231K\301\315\314J\301\000\000J\30133I\301gfH\301\232\231G\301\315\314F\301\000\000F\30133E\301gfD\301\232\231C\301\315\314B\301\000\000B\30133A\301gf@\301\232\231?\301\315\314>\301\000\000>\30133=\301gf<\301\232\231;\301\315\314:\301\000\000:\301339\301gf8\301\232\2317\301\315\3146\301\000\0006\301335\301gf4\301\232\2313\301\315\3142\301\000\0002\301331\301gf0\301\232\231/\301\315\314.\301\000\000.\30133-\301gf,\301\232\231+\301\315\314*\301\000\000*\30133)\301gf(\301\232\231\'\301\315\314&\301\000\000&\30133%\301gf$\301\232\231#\301\315\314\"\301\000\000\"\30133!\301gf \301\232\231\037\301\315\314\036\301\000\000\036\30133\035\301gf\034\301\232\231\033\301\315\314\032\301\000\000\032\30133\031\301gf\030\301\232\231\027\301\315\314\026\301\000\000\026\30133\025\301gf\024\301\232\231\023\301\315\314\022\301\000\000\022\30133\021\301gf\020\301\232\231\017\301\315\314\016\301\000\000\016\30133\r\301gf\014\301\232\231\013\301\315\314\n\301\000\000\n\30133\t\301gf\010\301\232\231\007\301\315\314\006\301\000\000\006\30133\005\301gf\004\301\232\231\003\301\315\314\002\301\000\000\002\30133\001\301gf\000\30133\377\300\232\231\375\300\000\000\374\300gf\372\300\315\314\370\30033\367\300\232\231\365\300\000\000\364\300gf\362\300\315\314\360\30033\357\300\232\231\355\300\000\000\354\300gf\352\300\315\314\350\30033\347\300\232\231\345\300\000\000\344\300gf\342\300\315\314\340\30033\337\300\232\231\335\300\000\000\334\300gf\332\300\315\314\330\30033\327\300\232\231\325\300\000\000\324\300gf\322\300\315\314\320\30033\317\300\232\231\315\300\000\000\314\300gf\312\300\315\314\310\30033\307\300\232\231\305\300\000\000\304\300gf\302\300\315\314\300\30033\277\300\232\231\275\300\000\000\274\300gf\272\300\315\314\270\30033\267\300\232\231\265\300\000\000\264\300gf\262\300\315\314\260\30033\257\300\232\231\255\300\000\000\254\300gf\252\300\315\314\250\30033\247\300\232\231\245\300\000\000\244\300gf\242\300\315\314\240\30033\237\300\232\231\235\300\000\000\234\300gf\232\300\315\314\230\30033\227\300\232\231\225\300\000\000\224\300gf\222\300\315\314\220\30033\217\300\232\231\215\300\000\000\214\300gf\212\300\315\314\210\30033\207\300\232\231\205\300\000\000\204\300gf\202\300\315\314\200\300gf~\30033{\300\000\000x\300\315\314t\300\232\231q\300gfn\30033k\300\000\000h\300\315\314d\300\232\231a\300gf^\30033[\300\000\000X\300\315\314T\300\232\231Q\300gfN\30033K\300\000\000H\300\315\314D\300\232\231A\300gf>\30033;\300\000\0008\300\315\3144\300\232\2311\300gf.\30033+\300\000\000(\300\315\314$\300\232\231!\300gf\036\30033\033\300\000\000\030\300\315\314\024\300\232\231\021\300gf\016\30033\013\300\000\000\010\300\315\314\004\300\232\231\001\300\315\314\374\277gf\366\277\000\000\360\277\232\231\351\27733\343\277\315\314\334\277gf\326\277\000\000\320\277\232\231\311\27733\303\277\315\314\274\277gf\266\277\000\000\260\277\232\231\251\27733\243\277\315\314\234\277gf\226\277\000\000\220\277\232\231\211\27733\203\277\232\231y\277\315\314l\277\000\000`\27733S\277gfF\277\232\2319\277\315\314,\277\000\000 \27733\023\277gf\006\27733\363\276\232\231\331\276\000\000\300\276gf\246\276\315\314\214\276gff\276333\276\000\000\000\276\232\231\231\275\315\314\314\274\315\314\314<\232\231\231=\000\000\000>333>gff>\315\314\214>gf\246>\000\000\300>\232\231\331>33\363>gf\006?33\023?\000\000 ?\315\314,?\232\2319?gfF?33S?\000\000`?\315\314l?\232\231y?33\203?\232\231\211?\000\000\220?gf\226?\315\314\234?33\243?\232\231\251?\000\000\260?gf\266?\315\314\274?33\303?\232\231\311?\000\000\320?gf\326?\315\314\334?33\343?\232\231\351?\000\000\360?gf\366?\315\314\374?\232\231\001@\315\314\004@\000\000\010@33\013@gf\016@\232\231\021@\315\314\024@\000\000\030@33\033@gf\036@\232\231!@\315\314$@\000\000(@33+@gf.@\232\2311@\315\3144@\000\0008@33;@gf>@\232\231A@\315\314D@\000\000H@33K@gfN@\232\231Q@\315\314T@\000\000X@33[@gf^@\232\231a@\315\314d@\000\000h@33k@gfn@\232\231q@\315\314t@\000\000x@33{@gf~@\315\314\200@gf\202@\000\000\204@\232\231\205@33\207@\315\314\210@gf\212@\000\000\214@\232\231\215@33\217@\315\314\220@gf\222@\000\000\224@\232\231\225@33\227@\315\314\230@gf\232@\000\000\234@\232\231\235@33\237@\315\314\240@gf\242@\000\000\244@\232\231\245@33\247@\315\314\250@gf\252@\000\000\254@\232\231\255@33\257@\315\314\260@gf\262@\000\000\264@\232\231\265@33\267@\315\314\270@gf\272@\000\000\274@\232\231\275@33\277@\315\314\300@gf\302@\000\000\304@\232\231\305@33\307@\315\314\310@gf\312@\000\000\314@\232\231\315@33\317@\315\314\320@gf\322@\000\000\324@\232\231\325@33\327@\315\314\330@gf\332@\000\000\334@\232\231\335@33\337@\315\314\340@gf\342@\000\000\344@\232\231\345@33\347@\315\314\350@gf\352@\000\000\354@\232\231\355@33\357@\315\314\360@gf\362@\000\000\364@\232\231\365@33\367@\315\314\370@gf\372@\000\000\374@\232\231\375@33\377@gf\000A33\001A\000\000\002A\315\314\002A\232\231\003Agf\004A33\005A\000\000\006A\315\314\006A\232\231\007Agf\010A33\tA\000\000\nA\315\314\nA\232\231\013Agf\014A33\rA\000\000\016A\315\314\016A\232\231\017Agf\020A33\021A\000\000\022A\315\314\022A\232\231\023Agf\024A33\025A\000\000\026A\315\314\026A\232\231\027Agf\030A33\031A\000\000\032A\315\314\032A\232\231\033Agf\034A33\035A\000\000\036A\315\314\036A\232\231\037Agf A33!A\000\000\"A\315\314\"A\232\231#Agf$A33%A\000\000&A\315\314&A\232\231\'Agf(A33)A\000\000*A\315\314*A\232\231+Agf,A33-A\000\000.A\315\314.A\232\231/Agf0A331A\000\0002A\315\3142A\232\2313Agf4A335A\000\0006A\315\3146A\232\2317Agf8A339A\000\000:A\315\314:A\232\231;Agf<A33=A\000\000>A\315\314>A\232\231?Agf@A33AA\000\000BA\315\314BA\232\231CAgfDA33EA\000\000FA\315\314FA\232\231GAgfHA33IA\000\000JA\315\314JA\232\231KAgfLA33MA\000\000NA\315\314NA\232\231OAgfPA33QA\000\000RA\315\314RA\232\231SAgfTA33UA\000\000VA\315\314VA\232\231WAgfXA33YA\000\000ZA\315\314ZA\232\231[Agf\\A33]A\000\000^A\315\314^A\232\231_Agf`A33aA\000\000bA\315\314bA\232\231cAgfdA33eA\000\000fA\315\314fA\232\231gAgfhA33iA\000\000jA\315\314jA\232\231kAgflA33mA\000\000nA\315\314nA\232\231oAgfpA33qA\000\000rA\315\314rA\232\231sAgftA33uA\000\000vA\315\314vA\232\231wAgfxA33yA\000\000zA\315\314zA\232\231{Agf|A33}A\000\000~A\315\314~A\232\231\177A33\200A\232\231\200A\000\000\201Agf\201A\315\314\201A33\202A\232\231\202A\000\000\203Agf\203A\315\314\203A33\204A\232\231\204A\000\000\205Agf\205A\315\314\205A33\206A\232\231\206A\000\000\207Agf\207A\315\314\207A33\210A\232\231\210A\000\000\211Agf\211A\315\314\211A33\212A\232\231\212A\000\000\213Agf\213A\315\314\213A33\214A\232\231\214A\000\000\215Agf\215A\315\314\215A33\216A\232\231\216A\000\000\217Agf\217A\315\314\217A33\220A\232\231\220A\000\000\221Agf\221A\315\314\221A33\222A\232\231\222A\000\000\223Agf\223A\315\314\223A33\224A\232\231\224A\000\000\225Agf\225A\315\314\225A33\226A\232\231\226A\000\000\227Agf\227A\315\314\227A33\230A\232\231\230A\000\000\231Agf\231A\315\314\231A33\232A\232\231\232A\000\000\233Agf\233A\315\314\233A33\234A\232\231\234A\000\000\235Agf\235A\315\314\235A33\236A\232\231\236A\000\000\237Agf\237A\315\314\237A33\240A\232\231\240A\000\000\241Agf\241A\315\314\241A33\242A\232\231\242A\000\000\243Agf\243A\315\314\243A33\244A\232\231\244A\000\000\245Agf\245A\315\314\245A33\246A\232\231\246A\000\000\247Agf\247A\315\314\247A33\250A"
      }
    }
  }
}
node {
  name: "Reshape_17/tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 842
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Reshape_17/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_17"
  op: "Reshape"
  input: "Reshape_17/tensor"
  input: "Reshape_17/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_34/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\022\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_34/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_34/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_34"
  op: "StridedSlice"
  input: "mul"
  input: "strided_slice_34/stack"
  input: "strided_slice_34/stack_1"
  input: "strided_slice_34/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "mul_65"
  op: "Mul"
  input: "Reshape_17"
  input: "strided_slice_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_34/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_34/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_34/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14359162747859955
      }
    }
  }
}
node {
  name: "truncated_normal_34/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_34/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_34/mul"
  op: "Mul"
  input: "truncated_normal_34/TruncatedNormal"
  input: "truncated_normal_34/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_34"
  op: "Add"
  input: "truncated_normal_34/mul"
  input: "truncated_normal_34/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "mul_66/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_66"
  op: "Mul"
  input: "truncated_normal_34"
  input: "mul_66/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "sb2_offset/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_offset/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sb2_offset/w"
    }
  }
}
node {
  name: "sb2_offset/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sb2_offset/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sb2_offset/w/Assign"
  op: "AssignVariableOp"
  input: "sb2_offset/w"
  input: "mul_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2_offset/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2_offset/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape_18/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_18"
  op: "Reshape"
  input: "Const_7"
  input: "Reshape_18/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2_offset/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_5"
  op: "MatMul"
  input: "Reshape_18"
  input: "MatMul_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "truncated_normal_35/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_35/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_35/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14359162747859955
      }
    }
  }
}
node {
  name: "truncated_normal_35/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_35/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_35/mul"
  op: "Mul"
  input: "truncated_normal_35/TruncatedNormal"
  input: "truncated_normal_35/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_35"
  op: "Add"
  input: "truncated_normal_35/mul"
  input: "truncated_normal_35/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "mul_67/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_67"
  op: "Mul"
  input: "truncated_normal_35"
  input: "mul_67/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "sb2_parity/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_parity/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sb2_parity/w"
    }
  }
}
node {
  name: "sb2_parity/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sb2_parity/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sb2_parity/w/Assign"
  op: "AssignVariableOp"
  input: "sb2_parity/w"
  input: "mul_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2_parity/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2_parity/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape_19/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_19"
  op: "Reshape"
  input: "mul_65"
  input: "Reshape_19/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 107776
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2_parity/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_6"
  op: "MatMul"
  input: "Reshape_19"
  input: "MatMul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 107776
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reshape_20/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_20"
  op: "Reshape"
  input: "add_39"
  input: "Reshape_20/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_21/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000J\003\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_21"
  op: "Reshape"
  input: "MatMul_5"
  input: "Reshape_21/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "add_40"
  op: "AddV2"
  input: "Reshape_20"
  input: "Reshape_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_22/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377J\003\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_22"
  op: "Reshape"
  input: "MatMul_6"
  input: "Reshape_22/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "add_41"
  op: "AddV2"
  input: "add_40"
  input: "Reshape_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "Relu_19"
  op: "Relu"
  input: "add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_36/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_36/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_36/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14359162747859955
      }
    }
  }
}
node {
  name: "truncated_normal_36/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_36/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_36/mul"
  op: "Mul"
  input: "truncated_normal_36/TruncatedNormal"
  input: "truncated_normal_36/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_36"
  op: "Add"
  input: "truncated_normal_36/mul"
  input: "truncated_normal_36/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "mul_68/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_68"
  op: "Mul"
  input: "truncated_normal_36"
  input: "mul_68/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "sbscale2/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sbscale2/w"
    }
  }
}
node {
  name: "sbscale2/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sbscale2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbscale2/w/Assign"
  op: "AssignVariableOp"
  input: "sbscale2/w"
  input: "mul_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbscale2/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal_37/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "truncated_normal_37/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_37/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14359162747859955
      }
    }
  }
}
node {
  name: "truncated_normal_37/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_37/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_37/mul"
  op: "Mul"
  input: "truncated_normal_37/TruncatedNormal"
  input: "truncated_normal_37/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_37"
  op: "Add"
  input: "truncated_normal_37/mul"
  input: "truncated_normal_37/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "mul_69/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "mul_69"
  op: "Mul"
  input: "truncated_normal_37"
  input: "mul_69/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "sbscale2/b"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sbscale2/b"
    }
  }
}
node {
  name: "sbscale2/b/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sbscale2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbscale2/b/Assign"
  op: "AssignVariableOp"
  input: "sbscale2/b"
  input: "mul_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbscale2/b/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_7"
  op: "MatMul"
  input: "concat_3"
  input: "MatMul_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_42/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_42"
  op: "AddV2"
  input: "MatMul_7"
  input: "add_42/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "Relu_20"
  op: "Relu"
  input: "add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_38/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_38/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_38/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20412415266036987
      }
    }
  }
}
node {
  name: "truncated_normal_38/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_38/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_38/mul"
  op: "Mul"
  input: "truncated_normal_38/TruncatedNormal"
  input: "truncated_normal_38/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_38"
  op: "Add"
  input: "truncated_normal_38/mul"
  input: "truncated_normal_38/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_70/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_70"
  op: "Mul"
  input: "truncated_normal_38"
  input: "mul_70/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sb3/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sb3/w"
    }
  }
}
node {
  name: "sb3/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sb3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sb3/w/Assign"
  op: "AssignVariableOp"
  input: "sb3/w"
  input: "mul_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb3/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Tensordot_6/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\245\001\0000\000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot_6/Reshape"
  op: "Reshape"
  input: "Relu_19"
  input: "Tensordot_6/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 107776
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "Tensordot_6/MatMul"
  op: "MatMul"
  input: "Tensordot_6/Reshape"
  input: "Tensordot_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 107776
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Tensordot_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000J\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Tensordot_6"
  op: "Reshape"
  input: "Tensordot_6/MatMul"
  input: "Tensordot_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_39/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "0\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_39/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_39/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20412415266036987
      }
    }
  }
}
node {
  name: "truncated_normal_39/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_39/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_39/mul"
  op: "Mul"
  input: "truncated_normal_39/TruncatedNormal"
  input: "truncated_normal_39/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_39"
  op: "Add"
  input: "truncated_normal_39/mul"
  input: "truncated_normal_39/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_71/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_71"
  op: "Mul"
  input: "truncated_normal_39"
  input: "mul_71/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sbscale3/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sbscale3/w"
    }
  }
}
node {
  name: "sbscale3/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sbscale3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbscale3/w/Assign"
  op: "AssignVariableOp"
  input: "sbscale3/w"
  input: "mul_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbscale3/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_8"
  op: "MatMul"
  input: "Relu_20"
  input: "MatMul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Abs"
  op: "Abs"
  input: "MatMul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Greater_1"
  op: "Greater"
  input: "MatMul_8"
  input: "Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_43/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_43"
  op: "AddV2"
  input: "Abs"
  input: "add_43/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Log"
  op: "Log"
  input: "add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_44/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_44"
  op: "AddV2"
  input: "add_44/x"
  input: "Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_45/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_45"
  op: "AddV2"
  input: "Abs"
  input: "add_45/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Log_1"
  op: "Log"
  input: "add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add_46/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_46"
  op: "AddV2"
  input: "add_46/x"
  input: "Log_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truediv_13/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "truediv_13"
  op: "RealDiv"
  input: "truediv_13/x"
  input: "add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Select"
  op: "Select"
  input: "Greater_1"
  input: "add_44"
  input: "truediv_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_23/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_23"
  op: "Reshape"
  input: "Select"
  input: "Reshape_23/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_72"
  op: "Mul"
  input: "Tensordot_6"
  input: "Reshape_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "scorebelief_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377J\003\000\000"
      }
    }
  }
}
node {
  name: "scorebelief_output"
  op: "Reshape"
  input: "mul_72"
  input: "scorebelief_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_40/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_40/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_40/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "truncated_normal_40/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_40/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_40/mul"
  op: "Mul"
  input: "truncated_normal_40/TruncatedNormal"
  input: "truncated_normal_40/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_40"
  op: "Add"
  input: "truncated_normal_40/mul"
  input: "truncated_normal_40/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_73/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "mul_73"
  op: "Mul"
  input: "truncated_normal_40"
  input: "mul_73/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "vownership/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vownership/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vownership/w"
    }
  }
}
node {
  name: "vownership/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vownership/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vownership/w/Assign"
  op: "AssignVariableOp"
  input: "vownership/w"
  input: "mul_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vownership/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vownership/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vownership/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_19"
  op: "Conv2D"
  input: "Relu_17"
  input: "Conv2D_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "mul_74"
  op: "Mul"
  input: "Conv2D_19"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_35/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_35/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_35/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_35"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_35/stack"
  input: "strided_slice_35/stack_1"
  input: "strided_slice_35/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_36/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_36/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_36/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_36"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_36/stack"
  input: "strided_slice_36/stack_1"
  input: "strided_slice_36/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_37/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_37/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_37/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_37"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_37/stack"
  input: "strided_slice_37/stack_1"
  input: "strided_slice_37/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cond_6"
  op: "StatelessIf"
  input: "strided_slice_37"
  input: "mul_74"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_6_false_2896"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_6_true_2895"
      }
    }
  }
}
node {
  name: "cond_6/Identity"
  op: "Identity"
  input: "cond_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cond_7"
  op: "StatelessIf"
  input: "strided_slice_35"
  input: "cond_6/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_7_false_2906"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_7_true_2905"
      }
    }
  }
}
node {
  name: "cond_7/Identity"
  op: "Identity"
  input: "cond_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cond_8"
  op: "StatelessIf"
  input: "strided_slice_36"
  input: "cond_7/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_8_false_2916"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_8_true_2915"
      }
    }
  }
}
node {
  name: "cond_8/Identity"
  op: "Identity"
  input: "cond_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ownership_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "ownership_output"
  op: "Reshape"
  input: "cond_8/Identity"
  input: "ownership_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_41/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_41/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_41/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "truncated_normal_41/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_41/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_41/mul"
  op: "Mul"
  input: "truncated_normal_41/TruncatedNormal"
  input: "truncated_normal_41/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_41"
  op: "Add"
  input: "truncated_normal_41/mul"
  input: "truncated_normal_41/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_75/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "mul_75"
  op: "Mul"
  input: "truncated_normal_41"
  input: "mul_75/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "vscoring/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vscoring/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vscoring/w"
    }
  }
}
node {
  name: "vscoring/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vscoring/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vscoring/w/Assign"
  op: "AssignVariableOp"
  input: "vscoring/w"
  input: "mul_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vscoring/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vscoring/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vscoring/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_20"
  op: "Conv2D"
  input: "Relu_17"
  input: "Conv2D_20/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "mul_76"
  op: "Mul"
  input: "Conv2D_20"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_38/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_38/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_38/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_38"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_38/stack"
  input: "strided_slice_38/stack_1"
  input: "strided_slice_38/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_39/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_39/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_39/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_39"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_39/stack"
  input: "strided_slice_39/stack_1"
  input: "strided_slice_39/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_40/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_40/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_40/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_40"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_40/stack"
  input: "strided_slice_40/stack_1"
  input: "strided_slice_40/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cond_9"
  op: "StatelessIf"
  input: "strided_slice_40"
  input: "mul_76"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_9_false_2954"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_9_true_2953"
      }
    }
  }
}
node {
  name: "cond_9/Identity"
  op: "Identity"
  input: "cond_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cond_10"
  op: "StatelessIf"
  input: "strided_slice_38"
  input: "cond_9/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_10_false_2964"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_10_true_2963"
      }
    }
  }
}
node {
  name: "cond_10/Identity"
  op: "Identity"
  input: "cond_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cond_11"
  op: "StatelessIf"
  input: "strided_slice_39"
  input: "cond_10/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_11_false_2974"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_11_true_2973"
      }
    }
  }
}
node {
  name: "cond_11/Identity"
  op: "Identity"
  input: "cond_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "scoring_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "scoring_output"
  op: "Reshape"
  input: "cond_11/Identity"
  input: "scoring_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_42/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_42/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_42/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "truncated_normal_42/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_42/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_42/mul"
  op: "Mul"
  input: "truncated_normal_42/TruncatedNormal"
  input: "truncated_normal_42/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_42"
  op: "Add"
  input: "truncated_normal_42/mul"
  input: "truncated_normal_42/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "mul_77/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "mul_77"
  op: "Mul"
  input: "truncated_normal_42"
  input: "mul_77/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "futurepos/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@futurepos/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "futurepos/w"
    }
  }
}
node {
  name: "futurepos/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "futurepos/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "futurepos/w/Assign"
  op: "AssignVariableOp"
  input: "futurepos/w"
  input: "mul_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "futurepos/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "futurepos/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "futurepos/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_21"
  op: "Conv2D"
  input: "Relu_14"
  input: "Conv2D_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "mul_78"
  op: "Mul"
  input: "Conv2D_21"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_41/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_41/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_41/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_41"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_41/stack"
  input: "strided_slice_41/stack_1"
  input: "strided_slice_41/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_42/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_42/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_42/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_42"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_42/stack"
  input: "strided_slice_42/stack_1"
  input: "strided_slice_42/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_43/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_43/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_43/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_43"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_43/stack"
  input: "strided_slice_43/stack_1"
  input: "strided_slice_43/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cond_12"
  op: "StatelessIf"
  input: "strided_slice_43"
  input: "mul_78"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_12_false_3012"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_12_true_3011"
      }
    }
  }
}
node {
  name: "cond_12/Identity"
  op: "Identity"
  input: "cond_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_13"
  op: "StatelessIf"
  input: "strided_slice_41"
  input: "cond_12/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_13_false_3022"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_13_true_3021"
      }
    }
  }
}
node {
  name: "cond_13/Identity"
  op: "Identity"
  input: "cond_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "cond_14"
  op: "StatelessIf"
  input: "strided_slice_42"
  input: "cond_13/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_14_false_3032"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_14_true_3031"
      }
    }
  }
}
node {
  name: "cond_14/Identity"
  op: "Identity"
  input: "cond_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "futurepos_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "futurepos_output"
  op: "Reshape"
  input: "cond_14/Identity"
  input: "futurepos_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_43/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_43/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_43/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "truncated_normal_43/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_43/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_43/mul"
  op: "Mul"
  input: "truncated_normal_43/TruncatedNormal"
  input: "truncated_normal_43/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_43"
  op: "Add"
  input: "truncated_normal_43/mul"
  input: "truncated_normal_43/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "mul_79/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "mul_79"
  op: "Mul"
  input: "truncated_normal_43"
  input: "mul_79/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "seki/w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seki/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "seki/w"
    }
  }
}
node {
  name: "seki/w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "seki/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seki/w/Assign"
  op: "AssignVariableOp"
  input: "seki/w"
  input: "mul_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "seki/w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "seki/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "seki/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_22"
  op: "Conv2D"
  input: "Relu_14"
  input: "Conv2D_22/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "mul_80"
  op: "Mul"
  input: "Conv2D_22"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_44/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_44/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_44/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_44"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_44/stack"
  input: "strided_slice_44/stack_1"
  input: "strided_slice_44/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_45/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_45/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_45/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_45"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_45/stack"
  input: "strided_slice_45/stack_1"
  input: "strided_slice_45/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_46/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_46/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_46/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_46"
  op: "StridedSlice"
  input: "Greater"
  input: "strided_slice_46/stack"
  input: "strided_slice_46/stack_1"
  input: "strided_slice_46/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cond_15"
  op: "StatelessIf"
  input: "strided_slice_46"
  input: "mul_80"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_15_false_3070"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_15_true_3069"
      }
    }
  }
}
node {
  name: "cond_15/Identity"
  op: "Identity"
  input: "cond_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "cond_16"
  op: "StatelessIf"
  input: "strided_slice_44"
  input: "cond_15/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_16_false_3080"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_16_true_3079"
      }
    }
  }
}
node {
  name: "cond_16/Identity"
  op: "Identity"
  input: "cond_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "cond_17"
  op: "StatelessIf"
  input: "strided_slice_45"
  input: "cond_16/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_17_false_3090"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_17_true_3089"
      }
    }
  }
}
node {
  name: "cond_17/Identity"
  op: "Identity"
  input: "cond_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "seki_output/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "seki_output"
  op: "Reshape"
  input: "cond_17/Identity"
  input: "seki_output/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Softmax"
  op: "Softmax"
  input: "value_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Softmax_1"
  op: "Softmax"
  input: "scorebelief_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_47/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_47/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_47/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_47"
  op: "StridedSlice"
  input: "miscvalues_output"
  input: "strided_slice_47/stack"
  input: "strided_slice_47/stack_1"
  input: "strided_slice_47/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_48/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_48/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_48/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_48"
  op: "StridedSlice"
  input: "miscvalues_output"
  input: "strided_slice_48/stack"
  input: "strided_slice_48/stack_1"
  input: "strided_slice_48/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_49/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_49/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_49/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_49"
  op: "StridedSlice"
  input: "moremiscvalues_output"
  input: "strided_slice_49/stack"
  input: "strided_slice_49/stack_1"
  input: "strided_slice_49/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "stack_2"
  op: "Pack"
  input: "strided_slice_47"
  input: "strided_slice_48"
  input: "strided_slice_49"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_50/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_50/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_50/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_50"
  op: "StridedSlice"
  input: "moremiscvalues_output"
  input: "strided_slice_50/stack"
  input: "strided_slice_50/stack_1"
  input: "strided_slice_50/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "mul_81/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20.0
      }
    }
  }
}
node {
  name: "mul_81"
  op: "Mul"
  input: "strided_slice_50"
  input: "mul_81/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_51/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_51/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_51/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_51"
  op: "StridedSlice"
  input: "miscvalues_output"
  input: "strided_slice_51/stack"
  input: "strided_slice_51/stack_1"
  input: "strided_slice_51/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "mul_82/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20.0
      }
    }
  }
}
node {
  name: "mul_82"
  op: "Mul"
  input: "strided_slice_51"
  input: "mul_82/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_52/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_52/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_52/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_52"
  op: "StridedSlice"
  input: "miscvalues_output"
  input: "strided_slice_52/stack"
  input: "strided_slice_52/stack_1"
  input: "strided_slice_52/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Softplus"
  op: "Softplus"
  input: "strided_slice_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_83/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20.0
      }
    }
  }
}
node {
  name: "mul_83"
  op: "Mul"
  input: "Softplus"
  input: "mul_83/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_53/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_53/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_53/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_53"
  op: "StridedSlice"
  input: "miscvalues_output"
  input: "strided_slice_53/stack"
  input: "strided_slice_53/stack_1"
  input: "strided_slice_53/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "mul_84/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20.0
      }
    }
  }
}
node {
  name: "mul_84"
  op: "Mul"
  input: "strided_slice_53"
  input: "mul_84/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_54/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_54/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_54/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_54"
  op: "StridedSlice"
  input: "miscvalues_output"
  input: "strided_slice_54/stack"
  input: "strided_slice_54/stack_1"
  input: "strided_slice_54/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Softplus_1"
  op: "Softplus"
  input: "strided_slice_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_85/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 40.0
      }
    }
  }
}
node {
  name: "mul_85"
  op: "Mul"
  input: "Softplus_1"
  input: "mul_85/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_55/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_55/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_55/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_55"
  op: "StridedSlice"
  input: "moremiscvalues_output"
  input: "strided_slice_55/stack"
  input: "strided_slice_55/stack_1"
  input: "strided_slice_55/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Softplus_2"
  op: "Softplus"
  input: "strided_slice_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_86/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "mul_86"
  op: "Mul"
  input: "Softplus_2"
  input: "mul_86/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_56/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_56/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_56/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_56"
  op: "StridedSlice"
  input: "moremiscvalues_output"
  input: "strided_slice_56/stack"
  input: "strided_slice_56/stack_1"
  input: "strided_slice_56/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Softplus_3"
  op: "Softplus"
  input: "strided_slice_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_87/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 30.0
      }
    }
  }
}
node {
  name: "mul_87"
  op: "Mul"
  input: "Softplus_3"
  input: "mul_87/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_57/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_57/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_57/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_57"
  op: "StridedSlice"
  input: "policy_output"
  input: "strided_slice_57/stack"
  input: "strided_slice_57/stack_1"
  input: "strided_slice_57/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits/Rank_1"
  input: "softmax_cross_entropy_with_logits/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits/Shape_1"
  input: "softmax_cross_entropy_with_logits/Slice/begin"
  input: "softmax_cross_entropy_with_logits/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits/concat/values_0"
  input: "softmax_cross_entropy_with_logits/Slice"
  input: "softmax_cross_entropy_with_logits/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Reshape"
  op: "Reshape"
  input: "strided_slice_57"
  input: "softmax_cross_entropy_with_logits/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits/Rank_2"
  input: "softmax_cross_entropy_with_logits/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits/Shape_2"
  input: "softmax_cross_entropy_with_logits/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits/Slice_1"
  input: "softmax_cross_entropy_with_logits/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Reshape_1"
  op: "Reshape"
  input: "truediv"
  input: "softmax_cross_entropy_with_logits/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits/Reshape"
  input: "softmax_cross_entropy_with_logits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits/Rank"
  input: "softmax_cross_entropy_with_logits/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits/Shape"
  input: "softmax_cross_entropy_with_logits/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits"
  input: "softmax_cross_entropy_with_logits/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_88"
  op: "Mul"
  input: "strided_slice_3"
  input: "softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_89/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.15000000596046448
      }
    }
  }
}
node {
  name: "mul_89"
  op: "Mul"
  input: "strided_slice_5"
  input: "mul_89/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_58/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_58/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_58/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_58"
  op: "StridedSlice"
  input: "policy_output"
  input: "strided_slice_58/stack"
  input: "strided_slice_58/stack_1"
  input: "strided_slice_58/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_1/Rank_1"
  input: "softmax_cross_entropy_with_logits_1/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_1/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_1/Shape_1"
  input: "softmax_cross_entropy_with_logits_1/Slice/begin"
  input: "softmax_cross_entropy_with_logits_1/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_1/concat/values_0"
  input: "softmax_cross_entropy_with_logits_1/Slice"
  input: "softmax_cross_entropy_with_logits_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Reshape"
  op: "Reshape"
  input: "strided_slice_58"
  input: "softmax_cross_entropy_with_logits_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_1/Rank_2"
  input: "softmax_cross_entropy_with_logits_1/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_1/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_1/Shape_2"
  input: "softmax_cross_entropy_with_logits_1/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits_1/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_1/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits_1/Slice_1"
  input: "softmax_cross_entropy_with_logits_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Reshape_1"
  op: "Reshape"
  input: "truediv_1"
  input: "softmax_cross_entropy_with_logits_1/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits_1/Reshape"
  input: "softmax_cross_entropy_with_logits_1/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_1/Rank"
  input: "softmax_cross_entropy_with_logits_1/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_1/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_1/Shape"
  input: "softmax_cross_entropy_with_logits_1/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits_1/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_1/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits_1"
  input: "softmax_cross_entropy_with_logits_1/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_90"
  op: "Mul"
  input: "mul_89"
  input: "softmax_cross_entropy_with_logits_1/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_2/Rank_1"
  input: "softmax_cross_entropy_with_logits_2/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_2/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_2/Shape_1"
  input: "softmax_cross_entropy_with_logits_2/Slice/begin"
  input: "softmax_cross_entropy_with_logits_2/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_2/concat/values_0"
  input: "softmax_cross_entropy_with_logits_2/Slice"
  input: "softmax_cross_entropy_with_logits_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Reshape"
  op: "Reshape"
  input: "value_output"
  input: "softmax_cross_entropy_with_logits_2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_2/Rank_2"
  input: "softmax_cross_entropy_with_logits_2/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_2/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_2/Shape_2"
  input: "softmax_cross_entropy_with_logits_2/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits_2/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_2/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits_2/Slice_1"
  input: "softmax_cross_entropy_with_logits_2/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Reshape_1"
  op: "Reshape"
  input: "strided_slice_6"
  input: "softmax_cross_entropy_with_logits_2/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits_2/Reshape"
  input: "softmax_cross_entropy_with_logits_2/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_2/Rank"
  input: "softmax_cross_entropy_with_logits_2/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_2/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_2/Shape"
  input: "softmax_cross_entropy_with_logits_2/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits_2/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_2/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits_2"
  input: "softmax_cross_entropy_with_logits_2/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_91/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.2000000476837158
      }
    }
  }
}
node {
  name: "mul_91"
  op: "Mul"
  input: "mul_91/x"
  input: "softmax_cross_entropy_with_logits_2/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\315\314\014?\315\314\014?\232\231\031>"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_3/Rank_1"
  input: "softmax_cross_entropy_with_logits_3/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_3/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_3/Shape_1"
  input: "softmax_cross_entropy_with_logits_3/Slice/begin"
  input: "softmax_cross_entropy_with_logits_3/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_3/concat/values_0"
  input: "softmax_cross_entropy_with_logits_3/Slice"
  input: "softmax_cross_entropy_with_logits_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Reshape"
  op: "Reshape"
  input: "stack_2"
  input: "softmax_cross_entropy_with_logits_3/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_3/Rank_2"
  input: "softmax_cross_entropy_with_logits_3/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_3/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_3/Shape_2"
  input: "softmax_cross_entropy_with_logits_3/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits_3/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_3/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits_3/Slice_1"
  input: "softmax_cross_entropy_with_logits_3/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Reshape_1"
  op: "Reshape"
  input: "stack"
  input: "softmax_cross_entropy_with_logits_3/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits_3/Reshape"
  input: "softmax_cross_entropy_with_logits_3/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_3/Rank"
  input: "softmax_cross_entropy_with_logits_3/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_3/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_3/Shape"
  input: "softmax_cross_entropy_with_logits_3/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits_3/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_3/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits_3"
  input: "softmax_cross_entropy_with_logits_3/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "add_47/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000031710769e-30
      }
    }
  }
}
node {
  name: "add_47"
  op: "AddV2"
  input: "stack"
  input: "add_47/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Log_2"
  op: "Log"
  input: "add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_4/Rank_1"
  input: "softmax_cross_entropy_with_logits_4/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_4/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_4/Shape_1"
  input: "softmax_cross_entropy_with_logits_4/Slice/begin"
  input: "softmax_cross_entropy_with_logits_4/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_4/concat/values_0"
  input: "softmax_cross_entropy_with_logits_4/Slice"
  input: "softmax_cross_entropy_with_logits_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Reshape"
  op: "Reshape"
  input: "Log_2"
  input: "softmax_cross_entropy_with_logits_4/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_4/Rank_2"
  input: "softmax_cross_entropy_with_logits_4/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_4/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_4/Shape_2"
  input: "softmax_cross_entropy_with_logits_4/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits_4/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_4/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits_4/Slice_1"
  input: "softmax_cross_entropy_with_logits_4/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Reshape_1"
  op: "Reshape"
  input: "stack"
  input: "softmax_cross_entropy_with_logits_4/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits_4/Reshape"
  input: "softmax_cross_entropy_with_logits_4/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_4/Rank"
  input: "softmax_cross_entropy_with_logits_4/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_4/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_4/Shape"
  input: "softmax_cross_entropy_with_logits_4/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits_4/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_4/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits_4"
  input: "softmax_cross_entropy_with_logits_4/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "sub_8"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_3/Reshape_2"
  input: "softmax_cross_entropy_with_logits_4/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "mul_92"
  op: "Mul"
  input: "Const_8"
  input: "sub_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Sum_8/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_8"
  op: "Sum"
  input: "mul_92"
  input: "Sum_8/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_93/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00039999998989515007
      }
    }
  }
}
node {
  name: "mul_93"
  op: "Mul"
  input: "mul_93/x"
  input: "strided_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_9"
  op: "Sub"
  input: "stack_1"
  input: "mul_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Abs_1"
  op: "Abs"
  input: "sub_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Greater_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 12.0
      }
    }
  }
}
node {
  name: "Greater_2"
  op: "Greater"
  input: "Abs_1"
  input: "Greater_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "sub_10/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 12.0
      }
    }
  }
}
node {
  name: "sub_10"
  op: "Sub"
  input: "Abs_1"
  input: "sub_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "mul_94/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 12.0
      }
    }
  }
}
node {
  name: "mul_94"
  op: "Mul"
  input: "mul_94/x"
  input: "sub_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "add_48/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 72.0
      }
    }
  }
}
node {
  name: "add_48"
  op: "AddV2"
  input: "add_48/x"
  input: "mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "mul_95/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_95"
  op: "Mul"
  input: "mul_95/x"
  input: "Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "mul_96"
  op: "Mul"
  input: "mul_95"
  input: "Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Select_1"
  op: "Select"
  input: "Greater_2"
  input: "add_48"
  input: "mul_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Sum_9/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_9"
  op: "Sum"
  input: "Select_1"
  input: "Sum_9/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_97"
  op: "Mul"
  input: "mul_93"
  input: "Sum_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_98/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "mul_98"
  op: "Mul"
  input: "mul_98/x"
  input: "strided_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Cumsum/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Cumsum"
  op: "Cumsum"
  input: "truediv_2"
  input: "Cumsum/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: false
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "Softmax_2"
  op: "Softmax"
  input: "scorebelief_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "Cumsum_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Cumsum_1"
  op: "Cumsum"
  input: "Softmax_2"
  input: "Cumsum_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: false
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "sub_11"
  op: "Sub"
  input: "Cumsum"
  input: "Cumsum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "sub_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "Sum_10/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_10"
  op: "Sum"
  input: "Square_1"
  input: "Sum_10/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_99"
  op: "Mul"
  input: "mul_98"
  input: "Sum_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_100/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "mul_100"
  op: "Mul"
  input: "mul_100/x"
  input: "strided_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_5/Rank_1"
  input: "softmax_cross_entropy_with_logits_5/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_5/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_5/Shape_1"
  input: "softmax_cross_entropy_with_logits_5/Slice/begin"
  input: "softmax_cross_entropy_with_logits_5/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_5/concat/values_0"
  input: "softmax_cross_entropy_with_logits_5/Slice"
  input: "softmax_cross_entropy_with_logits_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Reshape"
  op: "Reshape"
  input: "scorebelief_output"
  input: "softmax_cross_entropy_with_logits_5/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_5/Rank_2"
  input: "softmax_cross_entropy_with_logits_5/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_5/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_5/Shape_2"
  input: "softmax_cross_entropy_with_logits_5/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits_5/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_5/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits_5/Slice_1"
  input: "softmax_cross_entropy_with_logits_5/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Reshape_1"
  op: "Reshape"
  input: "truediv_2"
  input: "softmax_cross_entropy_with_logits_5/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits_5/Reshape"
  input: "softmax_cross_entropy_with_logits_5/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_5/Rank"
  input: "softmax_cross_entropy_with_logits_5/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_5/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_5/Shape"
  input: "softmax_cross_entropy_with_logits_5/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits_5/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_5/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits_5"
  input: "softmax_cross_entropy_with_logits_5/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_101"
  op: "Mul"
  input: "mul_100"
  input: "softmax_cross_entropy_with_logits_5/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_102/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.5
      }
    }
  }
}
node {
  name: "mul_102"
  op: "Mul"
  input: "mul_102/x"
  input: "strided_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_49/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_49"
  op: "AddV2"
  input: "add_49/x"
  input: "strided_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "truediv_14/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "truediv_14"
  op: "RealDiv"
  input: "add_49"
  input: "truediv_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "sub_12/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_12"
  op: "Sub"
  input: "sub_12/x"
  input: "strided_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "truediv_15/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "truediv_15"
  op: "RealDiv"
  input: "sub_12"
  input: "truediv_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "stack_3"
  op: "Pack"
  input: "truediv_14"
  input: "truediv_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "Neg"
  op: "Neg"
  input: "ownership_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "stack_4"
  op: "Pack"
  input: "ownership_output"
  input: "Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_6/Rank_1"
  input: "softmax_cross_entropy_with_logits_6/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_6/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_6/Shape_1"
  input: "softmax_cross_entropy_with_logits_6/Slice/begin"
  input: "softmax_cross_entropy_with_logits_6/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_6/concat/values_0"
  input: "softmax_cross_entropy_with_logits_6/Slice"
  input: "softmax_cross_entropy_with_logits_6/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Reshape"
  op: "Reshape"
  input: "stack_4"
  input: "softmax_cross_entropy_with_logits_6/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_6/Rank_2"
  input: "softmax_cross_entropy_with_logits_6/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_6/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_6/Shape_2"
  input: "softmax_cross_entropy_with_logits_6/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits_6/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_6/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits_6/Slice_1"
  input: "softmax_cross_entropy_with_logits_6/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Reshape_1"
  op: "Reshape"
  input: "stack_3"
  input: "softmax_cross_entropy_with_logits_6/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits_6/Reshape"
  input: "softmax_cross_entropy_with_logits_6/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
        }
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_6/Rank"
  input: "softmax_cross_entropy_with_logits_6/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_6/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_6/Shape"
  input: "softmax_cross_entropy_with_logits_6/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits_6/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_6/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits_6"
  input: "softmax_cross_entropy_with_logits_6/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_24/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_24"
  op: "Reshape"
  input: "strided_slice_26"
  input: "Reshape_24/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "mul_103"
  op: "Mul"
  input: "softmax_cross_entropy_with_logits_6/Reshape_2"
  input: "Reshape_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Sum_11/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_11"
  op: "Sum"
  input: "mul_103"
  input: "Sum_11/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_16"
  op: "RealDiv"
  input: "Sum_11"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_104"
  op: "Mul"
  input: "mul_102"
  input: "truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_105/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_105"
  op: "Mul"
  input: "mul_105/x"
  input: "strided_slice_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_13"
  op: "Sub"
  input: "truediv_3"
  input: "scoring_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Square_2"
  op: "Square"
  input: "sub_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_25/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_25"
  op: "Reshape"
  input: "strided_slice_26"
  input: "Reshape_25/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "mul_106"
  op: "Mul"
  input: "Square_2"
  input: "Reshape_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Sum_12/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_12"
  op: "Sum"
  input: "mul_106"
  input: "Sum_12/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_17"
  op: "RealDiv"
  input: "Sum_12"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_107"
  op: "Mul"
  input: "mul_105"
  input: "truediv_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_108/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_108"
  op: "Mul"
  input: "mul_107"
  input: "mul_108/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_50/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_50"
  op: "AddV2"
  input: "mul_108"
  input: "add_50/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_1"
  op: "Sqrt"
  input: "add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_14/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_14"
  op: "Sub"
  input: "Sqrt_1"
  input: "sub_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_109/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.0
      }
    }
  }
}
node {
  name: "mul_109"
  op: "Mul"
  input: "mul_109/x"
  input: "sub_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_110/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "mul_110"
  op: "Mul"
  input: "mul_110/x"
  input: "strided_slice_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Tanh"
  op: "Tanh"
  input: "futurepos_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "sub_15"
  op: "Sub"
  input: "Tanh"
  input: "transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Square_3"
  op: "Square"
  input: "sub_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_26/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_26"
  op: "Reshape"
  input: "strided_slice_26"
  input: "Reshape_26/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_111"
  op: "Mul"
  input: "Square_3"
  input: "Reshape_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\200?\000\000\200>"
      }
    }
  }
}
node {
  name: "Reshape_27/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_27"
  op: "Reshape"
  input: "Const_9"
  input: "Reshape_27/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "mul_112"
  op: "Mul"
  input: "mul_111"
  input: "Reshape_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Sum_13/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_13"
  op: "Sum"
  input: "mul_112"
  input: "Sum_13/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Sqrt_2"
  op: "Sqrt"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "truediv_18"
  op: "RealDiv"
  input: "Sum_13"
  input: "Sqrt_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_113"
  op: "Mul"
  input: "mul_110"
  input: "truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square_4"
  op: "Square"
  input: "strided_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "sub_16/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_16"
  op: "Sub"
  input: "sub_16/x"
  input: "Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_28/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_28"
  op: "Reshape"
  input: "strided_slice_26"
  input: "Reshape_28/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "mul_114"
  op: "Mul"
  input: "sub_16"
  input: "Reshape_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Sum_14/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_14"
  op: "Sum"
  input: "mul_114"
  input: "Sum_14/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Reshape_29/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_29"
  op: "Reshape"
  input: "strided_slice_26"
  input: "Reshape_29/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Sum_15/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_15"
  op: "Sum"
  input: "Reshape_29"
  input: "Sum_15/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "add_51/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "add_51"
  op: "AddV2"
  input: "add_51/x"
  input: "Sum_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "truediv_19"
  op: "RealDiv"
  input: "Sum_14"
  input: "add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_115"
  op: "Mul"
  input: "truediv_19"
  input: "strided_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "mul_115"
  input: "Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "moving_unowned_proportion/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@moving_unowned_proportion"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "moving_unowned_proportion"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@moving_unowned_proportion"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "moving_unowned_proportion"
    }
  }
}
node {
  name: "moving_unowned_proportion/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "moving_unowned_proportion"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "moving_unowned_proportion/Assign"
  op: "AssignVariableOp"
  input: "moving_unowned_proportion"
  input: "moving_unowned_proportion/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "moving_unowned_proportion/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "moving_unowned_proportion"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0020000000949949026
      }
    }
  }
}
node {
  name: "AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "moving_unowned_proportion"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignMovingAvg/sub"
  op: "Sub"
  input: "AssignMovingAvg/ReadVariableOp"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "AssignMovingAvg/mul"
  op: "Mul"
  input: "AssignMovingAvg/sub"
  input: "AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "moving_unowned_proportion"
  input: "AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "moving_unowned_proportion"
  input: "^AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "moving_unowned_proportion"
  input: "^AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_52/x"
  op: "Const"
  input: "^AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.004999999888241291
      }
    }
  }
}
node {
  name: "add_52"
  op: "AddV2"
  input: "add_52/x"
  input: "ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_20/x"
  op: "Const"
  input: "^AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "truediv_20"
  op: "RealDiv"
  input: "truediv_20/x"
  input: "add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Square_5"
  op: "Square"
  input: "strided_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "sub_17/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_17"
  op: "Sub"
  input: "sub_17/x"
  input: "Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Relu_21"
  op: "Relu"
  input: "strided_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Neg_1"
  op: "Neg"
  input: "strided_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Relu_22"
  op: "Relu"
  input: "Neg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "stack_5"
  op: "Pack"
  input: "sub_17"
  input: "Relu_21"
  input: "Relu_22"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "strided_slice_59/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_59/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_59/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_59"
  op: "StridedSlice"
  input: "seki_output"
  input: "strided_slice_59/stack"
  input: "strided_slice_59/stack_1"
  input: "strided_slice_59/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_7/Rank_1"
  input: "softmax_cross_entropy_with_logits_7/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_7/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_7/Shape_1"
  input: "softmax_cross_entropy_with_logits_7/Slice/begin"
  input: "softmax_cross_entropy_with_logits_7/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_7/concat/values_0"
  input: "softmax_cross_entropy_with_logits_7/Slice"
  input: "softmax_cross_entropy_with_logits_7/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Reshape"
  op: "Reshape"
  input: "strided_slice_59"
  input: "softmax_cross_entropy_with_logits_7/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_7/Rank_2"
  input: "softmax_cross_entropy_with_logits_7/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_7/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_7/Shape_2"
  input: "softmax_cross_entropy_with_logits_7/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits_7/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_7/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits_7/Slice_1"
  input: "softmax_cross_entropy_with_logits_7/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Reshape_1"
  op: "Reshape"
  input: "stack_5"
  input: "softmax_cross_entropy_with_logits_7/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits_7/Reshape"
  input: "softmax_cross_entropy_with_logits_7/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
        }
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_7/Rank"
  input: "softmax_cross_entropy_with_logits_7/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_7/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_7/Shape"
  input: "softmax_cross_entropy_with_logits_7/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits_7/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_7/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits_7"
  input: "softmax_cross_entropy_with_logits_7/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_30/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_30"
  op: "Reshape"
  input: "strided_slice_26"
  input: "Reshape_30/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "mul_116"
  op: "Mul"
  input: "softmax_cross_entropy_with_logits_7/Reshape_2"
  input: "Reshape_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Sum_16/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_16"
  op: "Sum"
  input: "mul_116"
  input: "Sum_16/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_21"
  op: "RealDiv"
  input: "Sum_16"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "stack_6"
  op: "Pack"
  input: "sub_16"
  input: "Square_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "strided_slice_60/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_60/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_60/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_60"
  op: "StridedSlice"
  input: "seki_output"
  input: "strided_slice_60/stack"
  input: "strided_slice_60/stack_1"
  input: "strided_slice_60/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 8
    }
  }
}
node {
  name: "zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zeros_like"
  op: "Fill"
  input: "zeros_like/shape_as_tensor"
  input: "zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stack_7"
  op: "Pack"
  input: "strided_slice_60"
  input: "zeros_like"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_8/Rank_1"
  input: "softmax_cross_entropy_with_logits_8/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_8/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_8/Shape_1"
  input: "softmax_cross_entropy_with_logits_8/Slice/begin"
  input: "softmax_cross_entropy_with_logits_8/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_8/concat/values_0"
  input: "softmax_cross_entropy_with_logits_8/Slice"
  input: "softmax_cross_entropy_with_logits_8/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Reshape"
  op: "Reshape"
  input: "stack_7"
  input: "softmax_cross_entropy_with_logits_8/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_8/Rank_2"
  input: "softmax_cross_entropy_with_logits_8/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_8/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_8/Shape_2"
  input: "softmax_cross_entropy_with_logits_8/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits_8/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_8/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits_8/Slice_1"
  input: "softmax_cross_entropy_with_logits_8/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Reshape_1"
  op: "Reshape"
  input: "stack_6"
  input: "softmax_cross_entropy_with_logits_8/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits_8/Reshape"
  input: "softmax_cross_entropy_with_logits_8/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
        }
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_8/Rank"
  input: "softmax_cross_entropy_with_logits_8/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_8/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_8/Shape"
  input: "softmax_cross_entropy_with_logits_8/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits_8/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_8/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits_8"
  input: "softmax_cross_entropy_with_logits_8/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_31/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_31"
  op: "Reshape"
  input: "strided_slice_26"
  input: "Reshape_31/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "mul_117"
  op: "Mul"
  input: "softmax_cross_entropy_with_logits_8/Reshape_2"
  input: "Reshape_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "Sum_17/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_17"
  op: "Sum"
  input: "mul_117"
  input: "Sum_17/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_22"
  op: "RealDiv"
  input: "Sum_17"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_118/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_118"
  op: "Mul"
  input: "mul_118/x"
  input: "truediv_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_53"
  op: "AddV2"
  input: "truediv_21"
  input: "mul_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_119"
  op: "Mul"
  input: "truediv_20"
  input: "strided_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_120"
  op: "Mul"
  input: "mul_119"
  input: "add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_121/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 842
          }
        }
        tensor_content~\303\000\200}\303\000\200|\303\000\200{\303\000\200z\303\000\200y\303\000\200x\303\000\200w\303\000\200v\303\000\200u\303\000\200t\303\000\200s\303\000\200r\303\000\200q\303\000\200p\303\000\200o\303\000\200n\303\000\200m\303\000\200l\303\000\200k\303\000\200j\303\000\200i\303\000\200h\303\000\200g\303\000\200f\303\000\200e\303\000\200d\303\000\200c\303\000\200b\303\000\200a\303\000\200`\303\000\200_\303\000\200^\303\000\200]\303\000\200\\\303\000\200[\303\000\200Z\303\000\200Y\303\000\200X\303\000\200W\303\000\200V\303\000\200U\303\000\200T\303\000\200S\303\000\200R\303\000\200Q\303\000\200P\303\000\200O\303\000\200N\303\000\200M\303\000\200L\303\000\200K\303\000\200J\303\000\200I\303\000\200H\303\000\200G\303\000\200F\303\000\200E\303\000\200D\303\000\200C\303\000\200B\303\000\200A\303\000\200@\303\000\200?\303\000\200>\303\000\200=\303\000\200<\303\000\200;\303\000\200:\303\000\2009\303\000\2008\303\000\2007\303\000\2006\303\000\2005\303\000\2004\303\000\2003\303\000\2002\303\000\2001\303\000\2000\303\000\200/\303\000\200.\303\000\200-\303\000\200,\303\000\200+\303\000\200*\303\000\200)\303\000\200(\303\000\200\'\303\000\200&\303\000\200%\303\000\200$\303\000\200#\303\000\200\"\303\000\200!\303\000\200 \303\000\200\037\303\000\200\036\303\000\200\035\303\000\200\034\303\000\200\033\303\000\200\032\303\000\200\031\303\000\200\030\303\000\200\027\303\000\200\026\303\000\200\025\303\000\200\024\303\000\200\023\303\000\200\022\303\000\200\021\303\000\200\020\303\000\200\017\303\000\200\016\303\000\200\r\303\000\200\014\303\000\200\013\303\000\200\n\303\000\200\t~\302\000\000z\302\000\000v\302\000\000r\302\000\000n\302\000\000j\302\000\000f\302\000\000b\302\000\000^\302\000\000Z\302\000\000V\302\000\000R\302\000\000N\302\000\000J\302\000\000F\302\000\000B\302\000\000>\302\000\000:\302\000\0006\302\000\0002\302\000\000.\302\000\000*\302\000\000&\302\000\000\"\302\000\000\036\302\000\000\032\302\000\000\026\302\000\000\022\302\000\000\016\302\000\000\n\302\000\000\006\302\000\000\002\302\000\000\374\301\000\000\364\301\000\000\354\301\000\000\344\301\000\000\334\301\000\000\324\301\000\000\314\301\000\000\304\301\000\000\274\301\000\000\264\301\000\000\254\301\000\000\244\301\000\000\234\301\000\000\224\301\000\000\214\301\000\000\204\301\000\000x\301\000\000h\301\000\000X\301\000\000H\301\000\0008\301\000\000(\301\000\000\030\301\000\000\010\301\000\000\360\300\000\000\320\300\000\000\260\300\000\000\220\300\000\000`\300\000\000 \300\000\000\300\277\000\000\000\277\000\000\000?\000\000\300?\000\000 @\000\000`@\000\000\220@\000\000\260@\000\000\320@\000\000\360@\000\000\010A\000\000\030A\000\000(A\000\0008A\000\000HA\000\000XA\000\000hA\000\000xA\000\000\204A\000\000\214A\000\000\224A\000\000\234A\000\000\244A\000\000\254A\000\000\264A\000\000\274A\000\000\304A\000\000\314A\000\000\324A\000\000\334A\000\000\344A\000\000\354A\000\000\364A\000\000\374A\000\000\002B\000\000\006B\000\000\nB\000\000\016B\000\000\022B\000\000\026B\000\000\032B\000\000\036B\000\000\"B\000\000&B\000\000*B\000\000.B\000\0002B\000\0006B\000\000:B\000\000>B\000\000BB\000\000FB\000\000JB\000\000NB\000\000RB\000\000VB\000\000ZB\000\000^B\000\000bB\000\000fB\000\000jB\000\000nB\000\000rB\000\000vB\000\000zB\000\000~tC\000\200\nC\000\200\013C\000\200\014C\000\200\r`C\000\200aC\000\200bC\000\200cC\000\200dC\000\200eC\000\200fC\000\200gC\000\200hC\000\200iC\000\200jC\000\200kC\000\200lC\000\200mC\000\200nC\000\200oC\000\200pC\000\200qC\000\200rC\000\200sC\000\200tC\000\200uC\000\200vC\000\200wC\000\200xC\000\200yC\000\200zC\000\200{C\000\200|C\000\200}C\000\200~
      }
    }
  }
}
node {
  name: "mul_121"
  op: "Mul"
  input: "Softmax_1"
  input: "mul_121/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "Sum_18/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_18"
  op: "Sum"
  input: "mul_121"
  input: "Sum_18/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_122/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001500000013038516
      }
    }
  }
}
node {
  name: "mul_122"
  op: "Mul"
  input: "mul_122/x"
  input: "strided_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_18"
  op: "Sub"
  input: "strided_slice_13"
  input: "mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Abs_2"
  op: "Abs"
  input: "sub_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Greater_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 12.0
      }
    }
  }
}
node {
  name: "Greater_3"
  op: "Greater"
  input: "Abs_2"
  input: "Greater_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_19/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 12.0
      }
    }
  }
}
node {
  name: "sub_19"
  op: "Sub"
  input: "Abs_2"
  input: "sub_19/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_123/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 12.0
      }
    }
  }
}
node {
  name: "mul_123"
  op: "Mul"
  input: "mul_123/x"
  input: "sub_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_54/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 72.0
      }
    }
  }
}
node {
  name: "add_54"
  op: "AddV2"
  input: "add_54/x"
  input: "mul_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_124/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_124"
  op: "Mul"
  input: "mul_124/x"
  input: "Abs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_125"
  op: "Mul"
  input: "mul_124"
  input: "Abs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Select_2"
  op: "Select"
  input: "Greater_3"
  input: "add_54"
  input: "mul_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_126"
  op: "Mul"
  input: "mul_122"
  input: "Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_127/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.006000000052154064
      }
    }
  }
}
node {
  name: "mul_127"
  op: "Mul"
  input: "mul_127/x"
  input: "strided_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_20"
  op: "Sub"
  input: "strided_slice_14"
  input: "mul_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Abs_3"
  op: "Abs"
  input: "sub_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Greater_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "Greater_4"
  op: "Greater"
  input: "Abs_3"
  input: "Greater_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_21/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "sub_21"
  op: "Sub"
  input: "Abs_3"
  input: "sub_21/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_128/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "mul_128"
  op: "Mul"
  input: "mul_128/x"
  input: "sub_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_55/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32.0
      }
    }
  }
}
node {
  name: "add_55"
  op: "AddV2"
  input: "add_55/x"
  input: "mul_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_129/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_129"
  op: "Mul"
  input: "mul_129/x"
  input: "Abs_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_130"
  op: "Mul"
  input: "mul_129"
  input: "Abs_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Select_3"
  op: "Select"
  input: "Greater_4"
  input: "add_55"
  input: "mul_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_131"
  op: "Mul"
  input: "mul_127"
  input: "Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_132/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "mul_132"
  op: "Mul"
  input: "mul_132/x"
  input: "strided_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_22"
  op: "Sub"
  input: "strided_slice_15"
  input: "mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Abs_4"
  op: "Abs"
  input: "sub_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Greater_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 50.0
      }
    }
  }
}
node {
  name: "Greater_5"
  op: "Greater"
  input: "Abs_4"
  input: "Greater_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_23/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 50.0
      }
    }
  }
}
node {
  name: "sub_23"
  op: "Sub"
  input: "Abs_4"
  input: "sub_23/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_133/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 50.0
      }
    }
  }
}
node {
  name: "mul_133"
  op: "Mul"
  input: "mul_133/x"
  input: "sub_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_56/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1250.0
      }
    }
  }
}
node {
  name: "add_56"
  op: "AddV2"
  input: "add_56/x"
  input: "mul_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_134/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_134"
  op: "Mul"
  input: "mul_134/x"
  input: "Abs_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_135"
  op: "Mul"
  input: "mul_134"
  input: "Abs_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Select_4"
  op: "Select"
  input: "Greater_5"
  input: "add_56"
  input: "mul_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_136"
  op: "Mul"
  input: "mul_132"
  input: "Select_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_32/tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 842
          }
        }
        tensor_content~\303\000\200}\303\000\200|\303\000\200{\303\000\200z\303\000\200y\303\000\200x\303\000\200w\303\000\200v\303\000\200u\303\000\200t\303\000\200s\303\000\200r\303\000\200q\303\000\200p\303\000\200o\303\000\200n\303\000\200m\303\000\200l\303\000\200k\303\000\200j\303\000\200i\303\000\200h\303\000\200g\303\000\200f\303\000\200e\303\000\200d\303\000\200c\303\000\200b\303\000\200a\303\000\200`\303\000\200_\303\000\200^\303\000\200]\303\000\200\\\303\000\200[\303\000\200Z\303\000\200Y\303\000\200X\303\000\200W\303\000\200V\303\000\200U\303\000\200T\303\000\200S\303\000\200R\303\000\200Q\303\000\200P\303\000\200O\303\000\200N\303\000\200M\303\000\200L\303\000\200K\303\000\200J\303\000\200I\303\000\200H\303\000\200G\303\000\200F\303\000\200E\303\000\200D\303\000\200C\303\000\200B\303\000\200A\303\000\200@\303\000\200?\303\000\200>\303\000\200=\303\000\200<\303\000\200;\303\000\200:\303\000\2009\303\000\2008\303\000\2007\303\000\2006\303\000\2005\303\000\2004\303\000\2003\303\000\2002\303\000\2001\303\000\2000\303\000\200/\303\000\200.\303\000\200-\303\000\200,\303\000\200+\303\000\200*\303\000\200)\303\000\200(\303\000\200\'\303\000\200&\303\000\200%\303\000\200$\303\000\200#\303\000\200\"\303\000\200!\303\000\200 \303\000\200\037\303\000\200\036\303\000\200\035\303\000\200\034\303\000\200\033\303\000\200\032\303\000\200\031\303\000\200\030\303\000\200\027\303\000\200\026\303\000\200\025\303\000\200\024\303\000\200\023\303\000\200\022\303\000\200\021\303\000\200\020\303\000\200\017\303\000\200\016\303\000\200\r\303\000\200\014\303\000\200\013\303\000\200\n\303\000\200\t~\302\000\000z\302\000\000v\302\000\000r\302\000\000n\302\000\000j\302\000\000f\302\000\000b\302\000\000^\302\000\000Z\302\000\000V\302\000\000R\302\000\000N\302\000\000J\302\000\000F\302\000\000B\302\000\000>\302\000\000:\302\000\0006\302\000\0002\302\000\000.\302\000\000*\302\000\000&\302\000\000\"\302\000\000\036\302\000\000\032\302\000\000\026\302\000\000\022\302\000\000\016\302\000\000\n\302\000\000\006\302\000\000\002\302\000\000\374\301\000\000\364\301\000\000\354\301\000\000\344\301\000\000\334\301\000\000\324\301\000\000\314\301\000\000\304\301\000\000\274\301\000\000\264\301\000\000\254\301\000\000\244\301\000\000\234\301\000\000\224\301\000\000\214\301\000\000\204\301\000\000x\301\000\000h\301\000\000X\301\000\000H\301\000\0008\301\000\000(\301\000\000\030\301\000\000\010\301\000\000\360\300\000\000\320\300\000\000\260\300\000\000\220\300\000\000`\300\000\000 \300\000\000\300\277\000\000\000\277\000\000\000?\000\000\300?\000\000 @\000\000`@\000\000\220@\000\000\260@\000\000\320@\000\000\360@\000\000\010A\000\000\030A\000\000(A\000\0008A\000\000HA\000\000XA\000\000hA\000\000xA\000\000\204A\000\000\214A\000\000\224A\000\000\234A\000\000\244A\000\000\254A\000\000\264A\000\000\274A\000\000\304A\000\000\314A\000\000\324A\000\000\334A\000\000\344A\000\000\354A\000\000\364A\000\000\374A\000\000\002B\000\000\006B\000\000\nB\000\000\016B\000\000\022B\000\000\026B\000\000\032B\000\000\036B\000\000\"B\000\000&B\000\000*B\000\000.B\000\0002B\000\0006B\000\000:B\000\000>B\000\000BB\000\000FB\000\000JB\000\000NB\000\000RB\000\000VB\000\000ZB\000\000^B\000\000bB\000\000fB\000\000jB\000\000nB\000\000rB\000\000vB\000\000zB\000\000~tC\000\200\nC\000\200\013C\000\200\014C\000\200\r`C\000\200aC\000\200bC\000\200cC\000\200dC\000\200eC\000\200fC\000\200gC\000\200hC\000\200iC\000\200jC\000\200kC\000\200lC\000\200mC\000\200nC\000\200oC\000\200pC\000\200qC\000\200rC\000\200sC\000\200tC\000\200uC\000\200vC\000\200wC\000\200xC\000\200yC\000\200zC\000\200{C\000\200|C\000\200}C\000\200~
      }
    }
  }
}
node {
  name: "Reshape_32/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_32"
  op: "Reshape"
  input: "Reshape_32/tensor"
  input: "Reshape_32/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_33/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_33"
  op: "Reshape"
  input: "Sum_18"
  input: "Reshape_33/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub_24"
  op: "Sub"
  input: "Reshape_32"
  input: "Reshape_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "Square_6"
  op: "Square"
  input: "sub_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "mul_137"
  op: "Mul"
  input: "Softmax_1"
  input: "Square_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "Sum_19/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_19"
  op: "Sum"
  input: "mul_137"
  input: "Sum_19/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "add_57/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "add_57"
  op: "AddV2"
  input: "add_57/x"
  input: "Sum_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Sqrt_3"
  op: "Sqrt"
  input: "add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_25"
  op: "Sub"
  input: "Sqrt_3"
  input: "mul_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_26"
  op: "Sub"
  input: "Sqrt_3"
  input: "mul_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Abs_5"
  op: "Abs"
  input: "sub_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Greater_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "Greater_6"
  op: "Greater"
  input: "Abs_5"
  input: "Greater_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_27/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "sub_27"
  op: "Sub"
  input: "Abs_5"
  input: "sub_27/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_138/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_138"
  op: "Mul"
  input: "mul_138/x"
  input: "sub_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_58/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 50.0
      }
    }
  }
}
node {
  name: "add_58"
  op: "AddV2"
  input: "add_58/x"
  input: "mul_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_139/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_139"
  op: "Mul"
  input: "mul_139/x"
  input: "Abs_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_140"
  op: "Mul"
  input: "mul_139"
  input: "Abs_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Select_5"
  op: "Select"
  input: "Greater_6"
  input: "add_58"
  input: "mul_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_141/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.004000000189989805
      }
    }
  }
}
node {
  name: "mul_141"
  op: "Mul"
  input: "mul_141/x"
  input: "Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_61/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_61/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_61/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_61"
  op: "StridedSlice"
  input: "stack_2"
  input: "strided_slice_61/stack"
  input: "strided_slice_61/stack_1"
  input: "strided_slice_61/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Softmax_3"
  op: "Softmax"
  input: "strided_slice_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_62/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_62/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_62/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_62"
  op: "StridedSlice"
  input: "Softmax_3"
  input: "strided_slice_62/stack"
  input: "strided_slice_62/stack_1"
  input: "strided_slice_62/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_63/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_63/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_63/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_63"
  op: "StridedSlice"
  input: "Softmax_3"
  input: "strided_slice_63/stack"
  input: "strided_slice_63/stack_1"
  input: "strided_slice_63/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "sub_28"
  op: "Sub"
  input: "strided_slice_62"
  input: "strided_slice_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "StopGradient"
  op: "StopGradient"
  input: "sub_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_64/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_64/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_64/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_64"
  op: "StridedSlice"
  input: "stack"
  input: "strided_slice_64/stack"
  input: "strided_slice_64/stack_1"
  input: "strided_slice_64/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 6
    }
  }
}
node {
  name: "strided_slice_65/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_65/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_65/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_65"
  op: "StridedSlice"
  input: "stack"
  input: "strided_slice_65/stack"
  input: "strided_slice_65/stack_1"
  input: "strided_slice_65/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 6
    }
  }
}
node {
  name: "sub_29"
  op: "Sub"
  input: "strided_slice_64"
  input: "strided_slice_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_66/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_66/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_66/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_66"
  op: "StridedSlice"
  input: "mul_81"
  input: "strided_slice_66/stack"
  input: "strided_slice_66/stack_1"
  input: "strided_slice_66/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "StopGradient_1"
  op: "StopGradient"
  input: "strided_slice_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_67/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_67/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_67/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_67"
  op: "StridedSlice"
  input: "stack_1"
  input: "strided_slice_67/stack"
  input: "strided_slice_67/stack_1"
  input: "strided_slice_67/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "sub_30"
  op: "Sub"
  input: "StopGradient"
  input: "sub_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square_7"
  op: "Square"
  input: "sub_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_31"
  op: "Sub"
  input: "StopGradient_1"
  input: "strided_slice_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square_8"
  op: "Square"
  input: "sub_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_142/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "mul_142"
  op: "Mul"
  input: "mul_142/x"
  input: "strided_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_32"
  op: "Sub"
  input: "Square_7"
  input: "mul_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Abs_6"
  op: "Abs"
  input: "sub_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Greater_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4000000059604645
      }
    }
  }
}
node {
  name: "Greater_7"
  op: "Greater"
  input: "Abs_6"
  input: "Greater_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_33/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4000000059604645
      }
    }
  }
}
node {
  name: "sub_33"
  op: "Sub"
  input: "Abs_6"
  input: "sub_33/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_143/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4000000059604645
      }
    }
  }
}
node {
  name: "mul_143"
  op: "Mul"
  input: "mul_143/x"
  input: "sub_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_59/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07999999821186066
      }
    }
  }
}
node {
  name: "add_59"
  op: "AddV2"
  input: "add_59/x"
  input: "mul_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_144/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_144"
  op: "Mul"
  input: "mul_144/x"
  input: "Abs_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_145"
  op: "Mul"
  input: "mul_144"
  input: "Abs_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Select_6"
  op: "Select"
  input: "Greater_7"
  input: "add_59"
  input: "mul_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_146"
  op: "Mul"
  input: "mul_142"
  input: "Select_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_147/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.9999999494757503e-05
      }
    }
  }
}
node {
  name: "mul_147"
  op: "Mul"
  input: "mul_147/x"
  input: "strided_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_34"
  op: "Sub"
  input: "Square_8"
  input: "mul_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Abs_7"
  op: "Abs"
  input: "sub_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Greater_8/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "Greater_8"
  op: "Greater"
  input: "Abs_7"
  input: "Greater_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_35/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "sub_35"
  op: "Sub"
  input: "Abs_7"
  input: "sub_35/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_148/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "mul_148"
  op: "Mul"
  input: "mul_148/x"
  input: "sub_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_60/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5000.0
      }
    }
  }
}
node {
  name: "add_60"
  op: "AddV2"
  input: "add_60/x"
  input: "mul_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_149/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_149"
  op: "Mul"
  input: "mul_149/x"
  input: "Abs_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_150"
  op: "Mul"
  input: "mul_149"
  input: "Abs_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Select_7"
  op: "Select"
  input: "Greater_8"
  input: "add_60"
  input: "mul_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_151"
  op: "Mul"
  input: "mul_147"
  input: "Select_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square_9"
  op: "Square"
  input: "MatMul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul_152/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00019999999494757503
      }
    }
  }
}
node {
  name: "mul_152"
  op: "Mul"
  input: "mul_152/x"
  input: "Square_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_34/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_34"
  op: "Reshape"
  input: "mul_152"
  input: "Reshape_34/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_153"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/policy_loss"
  op: "Sum"
  input: "mul_153"
  input: "Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_154"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/policy1_loss"
  op: "Sum"
  input: "mul_154"
  input: "Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_155"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/value_loss"
  op: "Sum"
  input: "mul_155"
  input: "Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_156"
  op: "Mul"
  input: "strided_slice_20"
  input: "Sum_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/td_value_loss"
  op: "Sum"
  input: "mul_156"
  input: "Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_157"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/td_score_loss"
  op: "Sum"
  input: "mul_157"
  input: "Const_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_158"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/scoremean_loss"
  op: "Sum"
  input: "mul_158"
  input: "Const_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_159"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/lead_loss"
  op: "Sum"
  input: "mul_159"
  input: "Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_160"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/variance_time_loss"
  op: "Sum"
  input: "mul_160"
  input: "Const_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_161"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/scorebelief_pdf_loss"
  op: "Sum"
  input: "mul_161"
  input: "Const_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_162"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/scorebelief_cdf_loss"
  op: "Sum"
  input: "mul_162"
  input: "Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_163"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/ownership_loss"
  op: "Sum"
  input: "mul_163"
  input: "Const_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_164"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/scoring_loss"
  op: "Sum"
  input: "mul_164"
  input: "Const_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_165"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/futurepos_loss"
  op: "Sum"
  input: "mul_165"
  input: "Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_166"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/seki_loss"
  op: "Sum"
  input: "mul_166"
  input: "Const_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_167"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/scorestdev_reg_loss"
  op: "Sum"
  input: "mul_167"
  input: "Const_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_168"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/sloss"
  op: "Sum"
  input: "mul_168"
  input: "Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_169"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/shortterm_score_error_loss"
  op: "Sum"
  input: "mul_169"
  input: "Const_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_170"
  op: "Mul"
  input: "strided_slice_20"
  input: "Reshape_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/scale_reg_loss"
  op: "Sum"
  input: "mul_170"
  input: "Const_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "losses/weight_sum"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss"
  op: "L2Loss"
  input: "L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "ginputw"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_1"
  op: "L2Loss"
  input: "L2Loss_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_2"
  op: "L2Loss"
  input: "L2Loss_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_3"
  op: "L2Loss"
  input: "L2Loss_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_4"
  op: "L2Loss"
  input: "L2Loss_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_5"
  op: "L2Loss"
  input: "L2Loss_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_6"
  op: "L2Loss"
  input: "L2Loss_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_7"
  op: "L2Loss"
  input: "L2Loss_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_8"
  op: "L2Loss"
  input: "L2Loss_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_9"
  op: "L2Loss"
  input: "L2Loss_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_10/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_10"
  op: "L2Loss"
  input: "L2Loss_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_11"
  op: "L2Loss"
  input: "L2Loss_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_12/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_12"
  op: "L2Loss"
  input: "L2Loss_12/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_13"
  op: "L2Loss"
  input: "L2Loss_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_14/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_14"
  op: "L2Loss"
  input: "L2Loss_14/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_15/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_15"
  op: "L2Loss"
  input: "L2Loss_15/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_16"
  op: "L2Loss"
  input: "L2Loss_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_17/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_17"
  op: "L2Loss"
  input: "L2Loss_17/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_18"
  op: "L2Loss"
  input: "L2Loss_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_19/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_19"
  op: "L2Loss"
  input: "L2Loss_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_20/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_20"
  op: "L2Loss"
  input: "L2Loss_20/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_21"
  op: "L2Loss"
  input: "L2Loss_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_22/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_22"
  op: "L2Loss"
  input: "L2Loss_22/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_23"
  op: "L2Loss"
  input: "L2Loss_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_24/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1/intermediate_conv/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_24"
  op: "L2Loss"
  input: "L2Loss_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_25/ReadVariableOp"
  op: "ReadVariableOp"
  input: "g1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_25"
  op: "L2Loss"
  input: "L2Loss_25/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "matmulg2w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_26"
  op: "L2Loss"
  input: "L2Loss_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_27/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_27"
  op: "L2Loss"
  input: "L2Loss_27/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "matmulpass"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_28"
  op: "L2Loss"
  input: "L2Loss_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_29/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_29"
  op: "L2Loss"
  input: "L2Loss_29/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_30/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_30"
  op: "L2Loss"
  input: "L2Loss_30/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_31"
  op: "L2Loss"
  input: "L2Loss_31/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_32/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_32"
  op: "L2Loss"
  input: "L2Loss_32/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mmv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_33"
  op: "L2Loss"
  input: "L2Loss_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_34/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_34"
  op: "L2Loss"
  input: "L2Loss_34/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_35/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2_offset/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_35"
  op: "L2Loss"
  input: "L2Loss_35/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2_parity/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_36"
  op: "L2Loss"
  input: "L2Loss_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_37/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_37"
  op: "L2Loss"
  input: "L2Loss_37/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_38"
  op: "L2Loss"
  input: "L2Loss_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_39/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_39"
  op: "L2Loss"
  input: "L2Loss_39/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_40/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vownership/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_40"
  op: "L2Loss"
  input: "L2Loss_40/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vscoring/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_41"
  op: "L2Loss"
  input: "L2Loss_41/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_42/ReadVariableOp"
  op: "ReadVariableOp"
  input: "futurepos/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_42"
  op: "L2Loss"
  input: "L2Loss_42/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_43/ReadVariableOp"
  op: "ReadVariableOp"
  input: "seki/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_43"
  op: "L2Loss"
  input: "L2Loss_43/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "AddN"
  op: "AddN"
  input: "L2Loss"
  input: "L2Loss_1"
  input: "L2Loss_2"
  input: "L2Loss_3"
  input: "L2Loss_4"
  input: "L2Loss_5"
  input: "L2Loss_6"
  input: "L2Loss_7"
  input: "L2Loss_8"
  input: "L2Loss_9"
  input: "L2Loss_10"
  input: "L2Loss_11"
  input: "L2Loss_12"
  input: "L2Loss_13"
  input: "L2Loss_14"
  input: "L2Loss_15"
  input: "L2Loss_16"
  input: "L2Loss_17"
  input: "L2Loss_18"
  input: "L2Loss_19"
  input: "L2Loss_20"
  input: "L2Loss_21"
  input: "L2Loss_22"
  input: "L2Loss_23"
  input: "L2Loss_24"
  input: "L2Loss_25"
  input: "L2Loss_26"
  input: "L2Loss_27"
  input: "L2Loss_28"
  input: "L2Loss_29"
  input: "L2Loss_30"
  input: "L2Loss_31"
  input: "L2Loss_32"
  input: "L2Loss_33"
  input: "L2Loss_34"
  input: "L2Loss_35"
  input: "L2Loss_36"
  input: "L2Loss_37"
  input: "L2Loss_38"
  input: "L2Loss_39"
  input: "L2Loss_40"
  input: "L2Loss_41"
  input: "L2Loss_42"
  input: "L2Loss_43"
  attr {
    key: "N"
    value {
      i: 44
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_44/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_44"
  op: "L2Loss"
  input: "L2Loss_44/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_45/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_45"
  op: "L2Loss"
  input: "L2Loss_45/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_46/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_46"
  op: "L2Loss"
  input: "L2Loss_46/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_47/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_47"
  op: "L2Loss"
  input: "L2Loss_47/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_48/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_48"
  op: "L2Loss"
  input: "L2Loss_48/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_49/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_49"
  op: "L2Loss"
  input: "L2Loss_49/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_50/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_50"
  op: "L2Loss"
  input: "L2Loss_50/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_51/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_51"
  op: "L2Loss"
  input: "L2Loss_51/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_52/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_52"
  op: "L2Loss"
  input: "L2Loss_52/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_53/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_53"
  op: "L2Loss"
  input: "L2Loss_53/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_54/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_54"
  op: "L2Loss"
  input: "L2Loss_54/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_55/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_55"
  op: "L2Loss"
  input: "L2Loss_55/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_56/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_56"
  op: "L2Loss"
  input: "L2Loss_56/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_57/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_57"
  op: "L2Loss"
  input: "L2Loss_57/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_58/ReadVariableOp"
  op: "ReadVariableOp"
  input: "trunk/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_58"
  op: "L2Loss"
  input: "L2Loss_58/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_59/ReadVariableOp"
  op: "ReadVariableOp"
  input: "g1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_59"
  op: "L2Loss"
  input: "L2Loss_59/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_60/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_60"
  op: "L2Loss"
  input: "L2Loss_60/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_61/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_61"
  op: "L2Loss"
  input: "L2Loss_61/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_62/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_62"
  op: "L2Loss"
  input: "L2Loss_62/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_63/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_63"
  op: "L2Loss"
  input: "L2Loss_63/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_64/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_64"
  op: "L2Loss"
  input: "L2Loss_64/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_65/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mmv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_65"
  op: "L2Loss"
  input: "L2Loss_65/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_66/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_66"
  op: "L2Loss"
  input: "L2Loss_66/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_67/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "L2Loss_67"
  op: "L2Loss"
  input: "L2Loss_67/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "AddN_1"
  op: "AddN"
  input: "L2Loss_44"
  input: "L2Loss_45"
  input: "L2Loss_46"
  input: "L2Loss_47"
  input: "L2Loss_48"
  input: "L2Loss_49"
  input: "L2Loss_50"
  input: "L2Loss_51"
  input: "L2Loss_52"
  input: "L2Loss_53"
  input: "L2Loss_54"
  input: "L2Loss_55"
  input: "L2Loss_56"
  input: "L2Loss_57"
  input: "L2Loss_58"
  input: "L2Loss_59"
  input: "L2Loss_60"
  input: "L2Loss_61"
  input: "L2Loss_62"
  input: "L2Loss_63"
  input: "L2Loss_64"
  input: "L2Loss_65"
  input: "L2Loss_66"
  input: "L2Loss_67"
  attr {
    key: "N"
    value {
      i: 24
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_171/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "mul_171"
  op: "Mul"
  input: "mul_171/x"
  input: "AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_61"
  op: "AddV2"
  input: "AddN"
  input: "mul_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_172"
  op: "Mul"
  input: "Const_2"
  input: "add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_173"
  op: "Mul"
  input: "mul_172"
  input: "losses/weight_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_62"
  op: "AddV2"
  input: "losses/policy_loss"
  input: "losses/policy1_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_63"
  op: "AddV2"
  input: "add_62"
  input: "losses/value_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_64"
  op: "AddV2"
  input: "add_63"
  input: "losses/td_value_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_65"
  op: "AddV2"
  input: "add_64"
  input: "losses/td_score_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_66"
  op: "AddV2"
  input: "add_65"
  input: "losses/scoremean_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_67"
  op: "AddV2"
  input: "add_66"
  input: "losses/lead_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_68"
  op: "AddV2"
  input: "add_67"
  input: "losses/variance_time_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_69"
  op: "AddV2"
  input: "add_68"
  input: "losses/scorebelief_pdf_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_70"
  op: "AddV2"
  input: "add_69"
  input: "losses/scorebelief_cdf_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_71"
  op: "AddV2"
  input: "add_70"
  input: "losses/ownership_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_72"
  op: "AddV2"
  input: "add_71"
  input: "losses/scoring_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_73"
  op: "AddV2"
  input: "add_72"
  input: "losses/futurepos_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_74"
  op: "AddV2"
  input: "add_73"
  input: "losses/seki_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_75"
  op: "AddV2"
  input: "add_74"
  input: "losses/scorestdev_reg_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_76"
  op: "AddV2"
  input: "add_75"
  input: "losses/sloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_77"
  op: "AddV2"
  input: "add_76"
  input: "losses/shortterm_score_error_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_78"
  op: "AddV2"
  input: "add_77"
  input: "mul_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_79"
  op: "AddV2"
  input: "add_78"
  input: "losses/scale_reg_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "truediv"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "strided_slice_68/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_68/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_68/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_68"
  op: "StridedSlice"
  input: "policy_output"
  input: "strided_slice_68/stack"
  input: "strided_slice_68/stack_1"
  input: "strided_slice_68/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "strided_slice_68"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax_1"
  input: "ArgMax"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "strided_slice_69/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_69/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_69/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_69"
  op: "StridedSlice"
  input: "policy_output"
  input: "strided_slice_69/stack"
  input: "strided_slice_69/stack_1"
  input: "strided_slice_69/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "in_top_k/InTopKV2/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 4
      }
    }
  }
}
node {
  name: "in_top_k/InTopKV2"
  op: "InTopKV2"
  input: "strided_slice_69"
  input: "ArgMax"
  input: "in_top_k/InTopKV2/k"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Cast_2"
  op: "Cast"
  input: "in_top_k/InTopKV2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Softmax_4"
  op: "Softmax"
  input: "value_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_9/Rank_1"
  input: "softmax_cross_entropy_with_logits_9/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_9/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_9/Shape_1"
  input: "softmax_cross_entropy_with_logits_9/Slice/begin"
  input: "softmax_cross_entropy_with_logits_9/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_9/concat/values_0"
  input: "softmax_cross_entropy_with_logits_9/Slice"
  input: "softmax_cross_entropy_with_logits_9/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Reshape"
  op: "Reshape"
  input: "value_output"
  input: "softmax_cross_entropy_with_logits_9/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_9/Rank_2"
  input: "softmax_cross_entropy_with_logits_9/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_9/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_9/Shape_2"
  input: "softmax_cross_entropy_with_logits_9/Slice_1/begin"
  input: "softmax_cross_entropy_with_logits_9/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_with_logits_9/concat_1/values_0"
  input: "softmax_cross_entropy_with_logits_9/Slice_1"
  input: "softmax_cross_entropy_with_logits_9/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Reshape_1"
  op: "Reshape"
  input: "Softmax_4"
  input: "softmax_cross_entropy_with_logits_9/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_with_logits_9/Reshape"
  input: "softmax_cross_entropy_with_logits_9/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_with_logits_9/Rank"
  input: "softmax_cross_entropy_with_logits_9/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_with_logits_9/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_with_logits_9/Shape"
  input: "softmax_cross_entropy_with_logits_9/Slice_2/begin"
  input: "softmax_cross_entropy_with_logits_9/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_with_logits_9/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_with_logits_9"
  input: "softmax_cross_entropy_with_logits_9/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_70/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_70/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_70/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_70"
  op: "StridedSlice"
  input: "value_output"
  input: "strided_slice_70/stack"
  input: "strided_slice_70/stack_1"
  input: "strided_slice_70/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "strided_slice_71/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_71/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_71/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_71"
  op: "StridedSlice"
  input: "value_output"
  input: "strided_slice_71/stack"
  input: "strided_slice_71/stack_1"
  input: "strided_slice_71/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "sub_36"
  op: "Sub"
  input: "strided_slice_70"
  input: "strided_slice_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Sigmoid"
  op: "Sigmoid"
  input: "sub_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_37/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sub_37"
  op: "Sub"
  input: "Sigmoid"
  input: "sub_37/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Square_10"
  op: "Square"
  input: "sub_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_174/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.0
      }
    }
  }
}
node {
  name: "mul_174"
  op: "Mul"
  input: "mul_174/x"
  input: "Square_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "add_80/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999682655225e-21
      }
    }
  }
}
node {
  name: "add_80"
  op: "AddV2"
  input: "truediv"
  input: "add_80/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "Log_3"
  op: "Log"
  input: "add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "mul_175"
  op: "Mul"
  input: "truediv"
  input: "Log_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "Sum_20/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_20"
  op: "Sum"
  input: "mul_175"
  input: "Sum_20/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Neg_2"
  op: "Neg"
  input: "Sum_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_176"
  op: "Mul"
  input: "strided_slice_3"
  input: "Neg_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "mul_177"
  op: "Mul"
  input: "strided_slice_20"
  input: "Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/accuracy1"
  op: "Sum"
  input: "mul_177"
  input: "Const_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_178"
  op: "Mul"
  input: "strided_slice_20"
  input: "Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/accuracy4"
  op: "Sum"
  input: "mul_178"
  input: "Const_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_179"
  op: "Mul"
  input: "strided_slice_20"
  input: "softmax_cross_entropy_with_logits_9/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/value_entropy"
  op: "Sum"
  input: "mul_179"
  input: "Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_180"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/value_conf"
  op: "Sum"
  input: "mul_180"
  input: "Const_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_181"
  op: "Mul"
  input: "strided_slice_20"
  input: "mul_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/policy_target_entropy"
  op: "Sum"
  input: "mul_181"
  input: "Const_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Cast_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast_3"
  op: "Cast"
  input: "Cast_3/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "mul_182"
  op: "Mul"
  input: "Cast_3"
  input: "Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.9999999242136255e-05
      }
    }
  }
}
node {
  name: "Const_37"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5000000.0
      }
    }
  }
}
node {
  name: "Const_38"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3333333432674408
      }
    }
  }
}
node {
  name: "Const_39"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "PiecewiseConstant/LessEqual"
  op: "LessEqual"
  input: "mul_182"
  input: "Const_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Greater"
  op: "Greater"
  input: "mul_182"
  input: "Const_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/preds_c"
  op: "Pack"
  input: "PiecewiseConstant/LessEqual"
  input: "PiecewiseConstant/Greater"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "PiecewiseConstant/case/Cast"
  op: "Cast"
  input: "PiecewiseConstant/case/preds_c"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/num_true_conds"
  op: "Sum"
  input: "PiecewiseConstant/case/Cast"
  input: "PiecewiseConstant/case/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "PiecewiseConstant/case/n_true_conds"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/LessEqual"
  op: "LessEqual"
  input: "PiecewiseConstant/case/num_true_conds"
  input: "PiecewiseConstant/case/n_true_conds"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (PiecewiseConstant/LessEqual:0, PiecewiseConstant/Greater:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard"
  op: "If"
  input: "PiecewiseConstant/case/LessEqual"
  input: "PiecewiseConstant/case/LessEqual"
  input: "PiecewiseConstant/case/preds_c"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_BOOL
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "PiecewiseConstant_case_Assert_AssertGuard_false_4116"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "PiecewiseConstant_case_Assert_AssertGuard_true_4115"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Identity"
  op: "Identity"
  input: "PiecewiseConstant/case/Assert/AssertGuard"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond"
  op: "StatelessIf"
  input: "PiecewiseConstant/LessEqual"
  input: "Const_38"
  input: "PiecewiseConstant/Greater"
  input: "Const_39"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_BOOL
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "PiecewiseConstant_case_cond_false_4129"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "PiecewiseConstant_case_cond_true_4128"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/Identity"
  op: "Identity"
  input: "PiecewiseConstant/case/cond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_183"
  op: "Mul"
  input: "Const_36"
  input: "PiecewiseConstant/case/cond/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_79_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Fill"
}
node {
  name: "gradients/add_79_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_79_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_79_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_79_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_78_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_79_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_78_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_79_grad/tuple/control_dependency"
  input: "^gradients/add_78_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_78_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_79_grad/tuple/control_dependency"
  input: "^gradients/add_78_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scale_reg_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/scale_reg_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_79_grad/tuple/control_dependency_1"
  input: "gradients/losses/scale_reg_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scale_reg_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/scale_reg_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/scale_reg_loss_grad/Reshape"
  input: "gradients/losses/scale_reg_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_77_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_78_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_77_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_78_grad/tuple/control_dependency"
  input: "^gradients/add_77_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_77_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_78_grad/tuple/control_dependency"
  input: "^gradients/add_77_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_173_grad/Mul"
  op: "Mul"
  input: "gradients/add_78_grad/tuple/control_dependency_1"
  input: "losses/weight_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_173_grad/Mul_1"
  op: "Mul"
  input: "gradients/add_78_grad/tuple/control_dependency_1"
  input: "mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_173_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_173_grad/Mul"
  input: "^gradients/mul_173_grad/Mul_1"
}
node {
  name: "gradients/mul_173_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_173_grad/Mul"
  input: "^gradients/mul_173_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_173_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_173_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_173_grad/Mul_1"
  input: "^gradients/mul_173_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_173_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_170_grad/Mul"
  op: "Mul"
  input: "gradients/losses/scale_reg_loss_grad/Tile"
  input: "Reshape_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_170_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/scale_reg_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_170_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_170_grad/Mul"
  input: "^gradients/mul_170_grad/Mul_1"
}
node {
  name: "gradients/mul_170_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_170_grad/Mul"
  input: "^gradients/mul_170_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_170_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_170_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_170_grad/Mul_1"
  input: "^gradients/mul_170_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_170_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_76_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_77_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_76_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_77_grad/tuple/control_dependency"
  input: "^gradients/add_76_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_76_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_77_grad/tuple/control_dependency"
  input: "^gradients/add_76_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/shortterm_score_error_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/shortterm_score_error_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_77_grad/tuple/control_dependency_1"
  input: "gradients/losses/shortterm_score_error_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/shortterm_score_error_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/shortterm_score_error_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/shortterm_score_error_loss_grad/Reshape"
  input: "gradients/losses/shortterm_score_error_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_172_grad/Mul"
  op: "Mul"
  input: "gradients/mul_173_grad/tuple/control_dependency"
  input: "add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_172_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_173_grad/tuple/control_dependency"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_172_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_172_grad/Mul"
  input: "^gradients/mul_172_grad/Mul_1"
}
node {
  name: "gradients/mul_172_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_172_grad/Mul"
  input: "^gradients/mul_172_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_172_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_172_grad/Mul_1"
  input: "^gradients/mul_172_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_34_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_34_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_170_grad/tuple/control_dependency_1"
  input: "gradients/Reshape_34_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_75_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_76_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_75_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_76_grad/tuple/control_dependency"
  input: "^gradients/add_75_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_75_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_76_grad/tuple/control_dependency"
  input: "^gradients/add_75_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/sloss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/sloss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_76_grad/tuple/control_dependency_1"
  input: "gradients/losses/sloss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/sloss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/sloss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/sloss_grad/Reshape"
  input: "gradients/losses/sloss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_169_grad/Mul"
  op: "Mul"
  input: "gradients/losses/shortterm_score_error_loss_grad/Tile"
  input: "mul_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_169_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/shortterm_score_error_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_169_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_169_grad/Mul"
  input: "^gradients/mul_169_grad/Mul_1"
}
node {
  name: "gradients/mul_169_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_169_grad/Mul"
  input: "^gradients/mul_169_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_169_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_169_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_169_grad/Mul_1"
  input: "^gradients/mul_169_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_169_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_61_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_172_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/add_61_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_172_grad/tuple/control_dependency_1"
  input: "^gradients/add_61_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_61_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_172_grad/tuple/control_dependency_1"
  input: "^gradients/add_61_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_152_grad/BroadcastGradientArgs/s0_1"
  input: "gradients/mul_152_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/Mul"
  op: "Mul"
  input: "gradients/Reshape_34_grad/Reshape"
  input: "Square_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/Sum"
  op: "Sum"
  input: "gradients/mul_152_grad/Mul"
  input: "gradients/mul_152_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_152_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_152_grad/Sum"
  input: "gradients/mul_152_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/Mul_1"
  op: "Mul"
  input: "mul_152/x"
  input: "gradients/Reshape_34_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_152_grad/Mul_1"
  input: "^gradients/mul_152_grad/Reshape"
}
node {
  name: "gradients/mul_152_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_152_grad/Reshape"
  input: "^gradients/mul_152_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_152_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_152_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_152_grad/Mul_1"
  input: "^gradients/mul_152_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_152_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_74_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_75_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_74_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_75_grad/tuple/control_dependency"
  input: "^gradients/add_74_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_74_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_75_grad/tuple/control_dependency"
  input: "^gradients/add_74_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scorestdev_reg_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/scorestdev_reg_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_75_grad/tuple/control_dependency_1"
  input: "gradients/losses/scorestdev_reg_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scorestdev_reg_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/scorestdev_reg_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/scorestdev_reg_loss_grad/Reshape"
  input: "gradients/losses/scorestdev_reg_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_168_grad/Mul"
  op: "Mul"
  input: "gradients/losses/sloss_grad/Tile"
  input: "mul_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_168_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/sloss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_168_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_168_grad/Mul"
  input: "^gradients/mul_168_grad/Mul_1"
}
node {
  name: "gradients/mul_168_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_168_grad/Mul"
  input: "^gradients/mul_168_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_168_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_168_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_168_grad/Mul_1"
  input: "^gradients/mul_168_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_168_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_151_grad/Mul"
  op: "Mul"
  input: "gradients/mul_169_grad/tuple/control_dependency_1"
  input: "Select_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_151_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_169_grad/tuple/control_dependency_1"
  input: "mul_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_151_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_151_grad/Mul"
  input: "^gradients/mul_151_grad/Mul_1"
}
node {
  name: "gradients/mul_151_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_151_grad/Mul"
  input: "^gradients/mul_151_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_151_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_151_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_151_grad/Mul_1"
  input: "^gradients/mul_151_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_151_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_61_grad/tuple/control_dependency"
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_7"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_8"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_9"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_10"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_11"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_12"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_13"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_14"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_15"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_16"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_17"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_18"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_19"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_20"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_21"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_22"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_23"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_24"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_25"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_26"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_27"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_28"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_29"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_30"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_31"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_32"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_33"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_34"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_35"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_36"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_37"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_38"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_39"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_40"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_41"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_42"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_43"
  op: "Identity"
  input: "gradients/add_61_grad/tuple/control_dependency"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_172_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_171_grad/Mul"
  op: "Mul"
  input: "gradients/add_61_grad/tuple/control_dependency_1"
  input: "AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_171_grad/Mul_1"
  op: "Mul"
  input: "gradients/add_61_grad/tuple/control_dependency_1"
  input: "mul_171/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_171_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_171_grad/Mul"
  input: "^gradients/mul_171_grad/Mul_1"
}
node {
  name: "gradients/mul_171_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_171_grad/Mul"
  input: "^gradients/mul_171_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_171_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_171_grad/Mul_1"
  input: "^gradients/mul_171_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Square_9_grad/Const"
  op: "Const"
  input: "^gradients/mul_152_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_9_grad/Mul"
  op: "Mul"
  input: "MatMul_8"
  input: "gradients/Square_9_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_9_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_152_grad/tuple/control_dependency_1"
  input: "gradients/Square_9_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_73_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_74_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_73_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_74_grad/tuple/control_dependency"
  input: "^gradients/add_73_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_73_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_74_grad/tuple/control_dependency"
  input: "^gradients/add_73_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/seki_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/seki_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_74_grad/tuple/control_dependency_1"
  input: "gradients/losses/seki_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/seki_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/seki_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/seki_loss_grad/Reshape"
  input: "gradients/losses/seki_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_167_grad/Mul"
  op: "Mul"
  input: "gradients/losses/scorestdev_reg_loss_grad/Tile"
  input: "mul_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_167_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/scorestdev_reg_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_167_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_167_grad/Mul"
  input: "^gradients/mul_167_grad/Mul_1"
}
node {
  name: "gradients/mul_167_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_167_grad/Mul"
  input: "^gradients/mul_167_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_167_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_167_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_167_grad/Mul_1"
  input: "^gradients/mul_167_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_167_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_146_grad/Mul"
  op: "Mul"
  input: "gradients/mul_168_grad/tuple/control_dependency_1"
  input: "Select_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_146_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_168_grad/tuple/control_dependency_1"
  input: "mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_146_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_146_grad/Mul"
  input: "^gradients/mul_146_grad/Mul_1"
}
node {
  name: "gradients/mul_146_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_146_grad/Mul"
  input: "^gradients/mul_146_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_146_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_146_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_146_grad/Mul_1"
  input: "^gradients/mul_146_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_146_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_7_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/Select_7_grad/Select"
  op: "Select"
  input: "Greater_8"
  input: "gradients/mul_151_grad/tuple/control_dependency_1"
  input: "gradients/Select_7_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_7_grad/Select_1"
  op: "Select"
  input: "Greater_8"
  input: "gradients/Select_7_grad/zeros_like"
  input: "gradients/mul_151_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_7_grad/Select"
  input: "^gradients/Select_7_grad/Select_1"
}
node {
  name: "gradients/Select_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Select_7_grad/Select"
  input: "^gradients/Select_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_7_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_7_grad/Select_1"
  input: "^gradients/Select_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_7_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_grad/mul"
  op: "Mul"
  input: "L2Loss/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_1_grad/mul"
  op: "Mul"
  input: "L2Loss_1/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_2_grad/mul"
  op: "Mul"
  input: "L2Loss_2/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_3_grad/mul"
  op: "Mul"
  input: "L2Loss_3/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_4_grad/mul"
  op: "Mul"
  input: "L2Loss_4/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_5_grad/mul"
  op: "Mul"
  input: "L2Loss_5/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_6_grad/mul"
  op: "Mul"
  input: "L2Loss_6/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_7_grad/mul"
  op: "Mul"
  input: "L2Loss_7/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_8_grad/mul"
  op: "Mul"
  input: "L2Loss_8/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_9_grad/mul"
  op: "Mul"
  input: "L2Loss_9/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_10_grad/mul"
  op: "Mul"
  input: "L2Loss_10/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_11_grad/mul"
  op: "Mul"
  input: "L2Loss_11/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_12_grad/mul"
  op: "Mul"
  input: "L2Loss_12/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_13_grad/mul"
  op: "Mul"
  input: "L2Loss_13/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_14_grad/mul"
  op: "Mul"
  input: "L2Loss_14/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_15_grad/mul"
  op: "Mul"
  input: "L2Loss_15/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_16_grad/mul"
  op: "Mul"
  input: "L2Loss_16/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_17_grad/mul"
  op: "Mul"
  input: "L2Loss_17/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_18_grad/mul"
  op: "Mul"
  input: "L2Loss_18/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_19_grad/mul"
  op: "Mul"
  input: "L2Loss_19/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_20_grad/mul"
  op: "Mul"
  input: "L2Loss_20/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_21_grad/mul"
  op: "Mul"
  input: "L2Loss_21/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_22_grad/mul"
  op: "Mul"
  input: "L2Loss_22/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_23_grad/mul"
  op: "Mul"
  input: "L2Loss_23/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_24_grad/mul"
  op: "Mul"
  input: "L2Loss_24/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_25_grad/mul"
  op: "Mul"
  input: "L2Loss_25/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_26_grad/mul"
  op: "Mul"
  input: "L2Loss_26/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_27_grad/mul"
  op: "Mul"
  input: "L2Loss_27/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_28_grad/mul"
  op: "Mul"
  input: "L2Loss_28/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_29_grad/mul"
  op: "Mul"
  input: "L2Loss_29/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_30_grad/mul"
  op: "Mul"
  input: "L2Loss_30/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_31_grad/mul"
  op: "Mul"
  input: "L2Loss_31/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_32_grad/mul"
  op: "Mul"
  input: "L2Loss_32/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_33_grad/mul"
  op: "Mul"
  input: "L2Loss_33/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_34_grad/mul"
  op: "Mul"
  input: "L2Loss_34/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_35_grad/mul"
  op: "Mul"
  input: "L2Loss_35/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_36_grad/mul"
  op: "Mul"
  input: "L2Loss_36/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_37_grad/mul"
  op: "Mul"
  input: "L2Loss_37/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_38_grad/mul"
  op: "Mul"
  input: "L2Loss_38/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_39_grad/mul"
  op: "Mul"
  input: "L2Loss_39/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_40_grad/mul"
  op: "Mul"
  input: "L2Loss_40/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_41_grad/mul"
  op: "Mul"
  input: "L2Loss_41/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_42_grad/mul"
  op: "Mul"
  input: "L2Loss_42/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_43_grad/mul"
  op: "Mul"
  input: "L2Loss_43/ReadVariableOp"
  input: "gradients/AddN_grad/tuple/control_dependency_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_171_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_7"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_8"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_9"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_10"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_11"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_12"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_13"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_14"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_15"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_16"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_17"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_18"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_19"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_20"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_21"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_22"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1_grad/tuple/control_dependency_23"
  op: "Identity"
  input: "gradients/mul_171_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_171_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_72_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_73_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_72_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_73_grad/tuple/control_dependency"
  input: "^gradients/add_72_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_72_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_73_grad/tuple/control_dependency"
  input: "^gradients/add_72_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/futurepos_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/futurepos_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_73_grad/tuple/control_dependency_1"
  input: "gradients/losses/futurepos_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/futurepos_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/futurepos_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/futurepos_loss_grad/Reshape"
  input: "gradients/losses/futurepos_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_166_grad/Mul"
  op: "Mul"
  input: "gradients/losses/seki_loss_grad/Tile"
  input: "mul_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_166_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/seki_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_166_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_166_grad/Mul"
  input: "^gradients/mul_166_grad/Mul_1"
}
node {
  name: "gradients/mul_166_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_166_grad/Mul"
  input: "^gradients/mul_166_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_166_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_166_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_166_grad/Mul_1"
  input: "^gradients/mul_166_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_166_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_141_grad/BroadcastGradientArgs/s0_1"
  input: "gradients/mul_141_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/Mul"
  op: "Mul"
  input: "gradients/mul_167_grad/tuple/control_dependency_1"
  input: "Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/Sum"
  op: "Sum"
  input: "gradients/mul_141_grad/Mul"
  input: "gradients/mul_141_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_141_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_141_grad/Sum"
  input: "gradients/mul_141_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/Mul_1"
  op: "Mul"
  input: "mul_141/x"
  input: "gradients/mul_167_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_141_grad/Mul_1"
  input: "^gradients/mul_141_grad/Reshape"
}
node {
  name: "gradients/mul_141_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_141_grad/Reshape"
  input: "^gradients/mul_141_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_141_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_141_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_141_grad/Mul_1"
  input: "^gradients/mul_141_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_141_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_6_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/Select_6_grad/Select"
  op: "Select"
  input: "Greater_7"
  input: "gradients/mul_146_grad/tuple/control_dependency_1"
  input: "gradients/Select_6_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_6_grad/Select_1"
  op: "Select"
  input: "Greater_7"
  input: "gradients/Select_6_grad/zeros_like"
  input: "gradients/mul_146_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_6_grad/Select"
  input: "^gradients/Select_6_grad/Select_1"
}
node {
  name: "gradients/Select_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Select_6_grad/Select"
  input: "^gradients/Select_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_6_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_6_grad/Select_1"
  input: "^gradients/Select_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_6_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_60_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_60_grad/Sum"
  op: "Sum"
  input: "gradients/Select_7_grad/tuple/control_dependency"
  input: "gradients/add_60_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_60_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_60_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_60_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_60_grad/Sum"
  input: "gradients/add_60_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_60_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_7_grad/tuple/control_dependency"
  input: "^gradients/add_60_grad/Reshape"
}
node {
  name: "gradients/add_60_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_60_grad/Reshape"
  input: "^gradients/add_60_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_60_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_60_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_7_grad/tuple/control_dependency"
  input: "^gradients/add_60_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_7_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_150_grad/Mul"
  op: "Mul"
  input: "gradients/Select_7_grad/tuple/control_dependency_1"
  input: "Abs_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_150_grad/Mul_1"
  op: "Mul"
  input: "gradients/Select_7_grad/tuple/control_dependency_1"
  input: "mul_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_150_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_150_grad/Mul"
  input: "^gradients/mul_150_grad/Mul_1"
}
node {
  name: "gradients/mul_150_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_150_grad/Mul"
  input: "^gradients/mul_150_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_150_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_150_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_150_grad/Mul_1"
  input: "^gradients/mul_150_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_150_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_44_grad/mul"
  op: "Mul"
  input: "L2Loss_44/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_45_grad/mul"
  op: "Mul"
  input: "L2Loss_45/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_46_grad/mul"
  op: "Mul"
  input: "L2Loss_46/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_47_grad/mul"
  op: "Mul"
  input: "L2Loss_47/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_48_grad/mul"
  op: "Mul"
  input: "L2Loss_48/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_49_grad/mul"
  op: "Mul"
  input: "L2Loss_49/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_50_grad/mul"
  op: "Mul"
  input: "L2Loss_50/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_51_grad/mul"
  op: "Mul"
  input: "L2Loss_51/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_52_grad/mul"
  op: "Mul"
  input: "L2Loss_52/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_53_grad/mul"
  op: "Mul"
  input: "L2Loss_53/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_54_grad/mul"
  op: "Mul"
  input: "L2Loss_54/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_55_grad/mul"
  op: "Mul"
  input: "L2Loss_55/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_56_grad/mul"
  op: "Mul"
  input: "L2Loss_56/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_57_grad/mul"
  op: "Mul"
  input: "L2Loss_57/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_58_grad/mul"
  op: "Mul"
  input: "L2Loss_58/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_59_grad/mul"
  op: "Mul"
  input: "L2Loss_59/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_60_grad/mul"
  op: "Mul"
  input: "L2Loss_60/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_61_grad/mul"
  op: "Mul"
  input: "L2Loss_61/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_62_grad/mul"
  op: "Mul"
  input: "L2Loss_62/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_63_grad/mul"
  op: "Mul"
  input: "L2Loss_63/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_64_grad/mul"
  op: "Mul"
  input: "L2Loss_64/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_65_grad/mul"
  op: "Mul"
  input: "L2Loss_65/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_66_grad/mul"
  op: "Mul"
  input: "L2Loss_66/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_67_grad/mul"
  op: "Mul"
  input: "L2Loss_67/ReadVariableOp"
  input: "gradients/AddN_1_grad/tuple/control_dependency_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_71_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_72_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_71_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_72_grad/tuple/control_dependency"
  input: "^gradients/add_71_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_71_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_72_grad/tuple/control_dependency"
  input: "^gradients/add_71_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scoring_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/scoring_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_72_grad/tuple/control_dependency_1"
  input: "gradients/losses/scoring_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scoring_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/scoring_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/scoring_loss_grad/Reshape"
  input: "gradients/losses/scoring_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_165_grad/Mul"
  op: "Mul"
  input: "gradients/losses/futurepos_loss_grad/Tile"
  input: "mul_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_165_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/futurepos_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_165_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_165_grad/Mul"
  input: "^gradients/mul_165_grad/Mul_1"
}
node {
  name: "gradients/mul_165_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_165_grad/Mul"
  input: "^gradients/mul_165_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_165_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_165_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_165_grad/Mul_1"
  input: "^gradients/mul_165_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_165_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_120_grad/Mul"
  op: "Mul"
  input: "gradients/mul_166_grad/tuple/control_dependency_1"
  input: "add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_120_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_166_grad/tuple/control_dependency_1"
  input: "mul_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_120_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_120_grad/Mul"
  input: "^gradients/mul_120_grad/Mul_1"
}
node {
  name: "gradients/mul_120_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_120_grad/Mul"
  input: "^gradients/mul_120_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_120_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_120_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_120_grad/Mul_1"
  input: "^gradients/mul_120_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_120_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_5_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/Select_5_grad/Select"
  op: "Select"
  input: "Greater_6"
  input: "gradients/mul_141_grad/tuple/control_dependency_1"
  input: "gradients/Select_5_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_5_grad/Select_1"
  op: "Select"
  input: "Greater_6"
  input: "gradients/Select_5_grad/zeros_like"
  input: "gradients/mul_141_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_5_grad/Select"
  input: "^gradients/Select_5_grad/Select_1"
}
node {
  name: "gradients/Select_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Select_5_grad/Select"
  input: "^gradients/Select_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_5_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_5_grad/Select_1"
  input: "^gradients/Select_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_5_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_59_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_59_grad/Sum"
  op: "Sum"
  input: "gradients/Select_6_grad/tuple/control_dependency"
  input: "gradients/add_59_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_59_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_59_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_59_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_59_grad/Sum"
  input: "gradients/add_59_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_59_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_6_grad/tuple/control_dependency"
  input: "^gradients/add_59_grad/Reshape"
}
node {
  name: "gradients/add_59_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_59_grad/Reshape"
  input: "^gradients/add_59_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_59_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_59_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_6_grad/tuple/control_dependency"
  input: "^gradients/add_59_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_6_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_145_grad/Mul"
  op: "Mul"
  input: "gradients/Select_6_grad/tuple/control_dependency_1"
  input: "Abs_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_145_grad/Mul_1"
  op: "Mul"
  input: "gradients/Select_6_grad/tuple/control_dependency_1"
  input: "mul_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_145_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_145_grad/Mul"
  input: "^gradients/mul_145_grad/Mul_1"
}
node {
  name: "gradients/mul_145_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_145_grad/Mul"
  input: "^gradients/mul_145_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_145_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_145_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_145_grad/Mul_1"
  input: "^gradients/mul_145_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_145_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_148_grad/Mul"
  op: "Mul"
  input: "gradients/add_60_grad/tuple/control_dependency_1"
  input: "sub_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_148_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_148_grad/Sum"
  op: "Sum"
  input: "gradients/mul_148_grad/Mul"
  input: "gradients/mul_148_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_148_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_148_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_148_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_148_grad/Sum"
  input: "gradients/mul_148_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_148_grad/Mul_1"
  op: "Mul"
  input: "mul_148/x"
  input: "gradients/add_60_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_148_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_148_grad/Mul_1"
  input: "^gradients/mul_148_grad/Reshape"
}
node {
  name: "gradients/mul_148_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_148_grad/Reshape"
  input: "^gradients/mul_148_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_148_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_148_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_148_grad/Mul_1"
  input: "^gradients/mul_148_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_148_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_149_grad/Mul"
  op: "Mul"
  input: "gradients/mul_150_grad/tuple/control_dependency"
  input: "Abs_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_149_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_149_grad/Sum"
  op: "Sum"
  input: "gradients/mul_149_grad/Mul"
  input: "gradients/mul_149_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_149_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_149_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_149_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_149_grad/Sum"
  input: "gradients/mul_149_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_149_grad/Mul_1"
  op: "Mul"
  input: "mul_149/x"
  input: "gradients/mul_150_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_149_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_149_grad/Mul_1"
  input: "^gradients/mul_149_grad/Reshape"
}
node {
  name: "gradients/mul_149_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_149_grad/Reshape"
  input: "^gradients/mul_149_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_149_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_149_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_149_grad/Mul_1"
  input: "^gradients/mul_149_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_149_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_70_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_71_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_70_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_71_grad/tuple/control_dependency"
  input: "^gradients/add_70_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_70_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_71_grad/tuple/control_dependency"
  input: "^gradients/add_70_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/ownership_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/ownership_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_71_grad/tuple/control_dependency_1"
  input: "gradients/losses/ownership_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/ownership_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/ownership_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/ownership_loss_grad/Reshape"
  input: "gradients/losses/ownership_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_164_grad/Mul"
  op: "Mul"
  input: "gradients/losses/scoring_loss_grad/Tile"
  input: "mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_164_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/scoring_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_164_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_164_grad/Mul"
  input: "^gradients/mul_164_grad/Mul_1"
}
node {
  name: "gradients/mul_164_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_164_grad/Mul"
  input: "^gradients/mul_164_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_164_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_164_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_164_grad/Mul_1"
  input: "^gradients/mul_164_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_164_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_113_grad/Mul"
  op: "Mul"
  input: "gradients/mul_165_grad/tuple/control_dependency_1"
  input: "truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_113_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_165_grad/tuple/control_dependency_1"
  input: "mul_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_113_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_113_grad/Mul"
  input: "^gradients/mul_113_grad/Mul_1"
}
node {
  name: "gradients/mul_113_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_113_grad/Mul"
  input: "^gradients/mul_113_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_113_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_113_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_113_grad/Mul_1"
  input: "^gradients/mul_113_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_113_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_53_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_120_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/add_53_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_120_grad/tuple/control_dependency_1"
  input: "^gradients/add_53_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_120_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_53_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_120_grad/tuple/control_dependency_1"
  input: "^gradients/add_53_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_120_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_58_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_58_grad/Sum"
  op: "Sum"
  input: "gradients/Select_5_grad/tuple/control_dependency"
  input: "gradients/add_58_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_58_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_58_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_58_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_58_grad/Sum"
  input: "gradients/add_58_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_58_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_5_grad/tuple/control_dependency"
  input: "^gradients/add_58_grad/Reshape"
}
node {
  name: "gradients/add_58_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_58_grad/Reshape"
  input: "^gradients/add_58_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_58_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_58_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_5_grad/tuple/control_dependency"
  input: "^gradients/add_58_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_5_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_140_grad/Mul"
  op: "Mul"
  input: "gradients/Select_5_grad/tuple/control_dependency_1"
  input: "Abs_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_140_grad/Mul_1"
  op: "Mul"
  input: "gradients/Select_5_grad/tuple/control_dependency_1"
  input: "mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_140_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_140_grad/Mul"
  input: "^gradients/mul_140_grad/Mul_1"
}
node {
  name: "gradients/mul_140_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_140_grad/Mul"
  input: "^gradients/mul_140_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_140_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_140_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_140_grad/Mul_1"
  input: "^gradients/mul_140_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_140_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_143_grad/Mul"
  op: "Mul"
  input: "gradients/add_59_grad/tuple/control_dependency_1"
  input: "sub_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_143_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_143_grad/Sum"
  op: "Sum"
  input: "gradients/mul_143_grad/Mul"
  input: "gradients/mul_143_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_143_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_143_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_143_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_143_grad/Sum"
  input: "gradients/mul_143_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_143_grad/Mul_1"
  op: "Mul"
  input: "mul_143/x"
  input: "gradients/add_59_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_143_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_143_grad/Mul_1"
  input: "^gradients/mul_143_grad/Reshape"
}
node {
  name: "gradients/mul_143_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_143_grad/Reshape"
  input: "^gradients/mul_143_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_143_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_143_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_143_grad/Mul_1"
  input: "^gradients/mul_143_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_143_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_144_grad/Mul"
  op: "Mul"
  input: "gradients/mul_145_grad/tuple/control_dependency"
  input: "Abs_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_144_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_144_grad/Sum"
  op: "Sum"
  input: "gradients/mul_144_grad/Mul"
  input: "gradients/mul_144_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_144_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_144_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_144_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_144_grad/Sum"
  input: "gradients/mul_144_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_144_grad/Mul_1"
  op: "Mul"
  input: "mul_144/x"
  input: "gradients/mul_145_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_144_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_144_grad/Mul_1"
  input: "^gradients/mul_144_grad/Reshape"
}
node {
  name: "gradients/mul_144_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_144_grad/Reshape"
  input: "^gradients/mul_144_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_144_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_144_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_144_grad/Mul_1"
  input: "^gradients/mul_144_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_144_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_35_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/sub_35_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_35_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_35_grad/BroadcastGradientArgs/s0"
  input: "gradients/sub_35_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_35_grad/Neg"
  op: "Neg"
  input: "gradients/mul_148_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_35_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/sub_35_grad/Sum"
  op: "Sum"
  input: "gradients/sub_35_grad/Neg"
  input: "gradients/sub_35_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_35_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_35_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_35_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_35_grad/Sum"
  input: "gradients/sub_35_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_35_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_148_grad/tuple/control_dependency_1"
  input: "^gradients/sub_35_grad/Reshape"
}
node {
  name: "gradients/sub_35_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_148_grad/tuple/control_dependency_1"
  input: "^gradients/sub_35_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_148_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_35_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_35_grad/Reshape"
  input: "^gradients/sub_35_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_35_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_69_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_70_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_69_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_70_grad/tuple/control_dependency"
  input: "^gradients/add_69_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_69_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_70_grad/tuple/control_dependency"
  input: "^gradients/add_69_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scorebelief_cdf_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/scorebelief_cdf_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_70_grad/tuple/control_dependency_1"
  input: "gradients/losses/scorebelief_cdf_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scorebelief_cdf_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/scorebelief_cdf_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/scorebelief_cdf_loss_grad/Reshape"
  input: "gradients/losses/scorebelief_cdf_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_163_grad/Mul"
  op: "Mul"
  input: "gradients/losses/ownership_loss_grad/Tile"
  input: "mul_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_163_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/ownership_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_163_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_163_grad/Mul"
  input: "^gradients/mul_163_grad/Mul_1"
}
node {
  name: "gradients/mul_163_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_163_grad/Mul"
  input: "^gradients/mul_163_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_163_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_163_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_163_grad/Mul_1"
  input: "^gradients/mul_163_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_163_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_109_grad/Mul"
  op: "Mul"
  input: "gradients/mul_164_grad/tuple/control_dependency_1"
  input: "sub_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_109_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_109_grad/Sum"
  op: "Sum"
  input: "gradients/mul_109_grad/Mul"
  input: "gradients/mul_109_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_109_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_109_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_109_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_109_grad/Sum"
  input: "gradients/mul_109_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_109_grad/Mul_1"
  op: "Mul"
  input: "mul_109/x"
  input: "gradients/mul_164_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_109_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_109_grad/Mul_1"
  input: "^gradients/mul_109_grad/Reshape"
}
node {
  name: "gradients/mul_109_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_109_grad/Reshape"
  input: "^gradients/mul_109_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_109_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_109_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_109_grad/Mul_1"
  input: "^gradients/mul_109_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_109_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_18_grad/Shape"
  input: "gradients/truediv_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mul_113_grad/tuple/control_dependency_1"
  input: "Sqrt_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_18_grad/RealDiv"
  input: "gradients/truediv_18_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_18_grad/Sum"
  input: "gradients/truediv_18_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/Neg"
  op: "Neg"
  input: "Sum_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_18_grad/Neg"
  input: "Sqrt_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_18_grad/RealDiv_1"
  input: "Sqrt_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/mul"
  op: "Mul"
  input: "gradients/mul_113_grad/tuple/control_dependency_1"
  input: "gradients/truediv_18_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_18_grad/mul"
  input: "gradients/truediv_18_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_18_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_18_grad/Sum_1"
  input: "gradients/truediv_18_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_18_grad/Reshape"
  input: "^gradients/truediv_18_grad/Reshape_1"
}
node {
  name: "gradients/truediv_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_18_grad/Reshape"
  input: "^gradients/truediv_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_18_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_18_grad/Reshape_1"
  input: "^gradients/truediv_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_18_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_21_grad/Shape"
  input: "gradients/truediv_21_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/add_53_grad/tuple/control_dependency"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_21_grad/RealDiv"
  input: "gradients/truediv_21_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_21_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_21_grad/Sum"
  input: "gradients/truediv_21_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/Neg"
  op: "Neg"
  input: "Sum_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_21_grad/Neg"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_21_grad/RealDiv_1"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/mul"
  op: "Mul"
  input: "gradients/add_53_grad/tuple/control_dependency"
  input: "gradients/truediv_21_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_21_grad/mul"
  input: "gradients/truediv_21_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_21_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_21_grad/Sum_1"
  input: "gradients/truediv_21_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_21_grad/Reshape"
  input: "^gradients/truediv_21_grad/Reshape_1"
}
node {
  name: "gradients/truediv_21_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_21_grad/Reshape"
  input: "^gradients/truediv_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_21_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_21_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_21_grad/Reshape_1"
  input: "^gradients/truediv_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_21_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_118_grad/Mul"
  op: "Mul"
  input: "gradients/add_53_grad/tuple/control_dependency_1"
  input: "truediv_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_118_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_118_grad/Sum"
  op: "Sum"
  input: "gradients/mul_118_grad/Mul"
  input: "gradients/mul_118_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_118_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_118_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_118_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_118_grad/Sum"
  input: "gradients/mul_118_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_118_grad/Mul_1"
  op: "Mul"
  input: "mul_118/x"
  input: "gradients/add_53_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_118_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_118_grad/Mul_1"
  input: "^gradients/mul_118_grad/Reshape"
}
node {
  name: "gradients/mul_118_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_118_grad/Reshape"
  input: "^gradients/mul_118_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_118_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_118_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_118_grad/Mul_1"
  input: "^gradients/mul_118_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_118_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_138_grad/Mul"
  op: "Mul"
  input: "gradients/add_58_grad/tuple/control_dependency_1"
  input: "sub_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_138_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_138_grad/Sum"
  op: "Sum"
  input: "gradients/mul_138_grad/Mul"
  input: "gradients/mul_138_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_138_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_138_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_138_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_138_grad/Sum"
  input: "gradients/mul_138_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_138_grad/Mul_1"
  op: "Mul"
  input: "mul_138/x"
  input: "gradients/add_58_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_138_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_138_grad/Mul_1"
  input: "^gradients/mul_138_grad/Reshape"
}
node {
  name: "gradients/mul_138_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_138_grad/Reshape"
  input: "^gradients/mul_138_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_138_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_138_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_138_grad/Mul_1"
  input: "^gradients/mul_138_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_138_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_139_grad/Mul"
  op: "Mul"
  input: "gradients/mul_140_grad/tuple/control_dependency"
  input: "Abs_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_139_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_139_grad/Sum"
  op: "Sum"
  input: "gradients/mul_139_grad/Mul"
  input: "gradients/mul_139_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_139_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_139_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_139_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_139_grad/Sum"
  input: "gradients/mul_139_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_139_grad/Mul_1"
  op: "Mul"
  input: "mul_139/x"
  input: "gradients/mul_140_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_139_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_139_grad/Mul_1"
  input: "^gradients/mul_139_grad/Reshape"
}
node {
  name: "gradients/mul_139_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_139_grad/Reshape"
  input: "^gradients/mul_139_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_139_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_139_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_139_grad/Mul_1"
  input: "^gradients/mul_139_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_139_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_33_grad/Neg"
  op: "Neg"
  input: "gradients/mul_143_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_33_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/sub_33_grad/Sum"
  op: "Sum"
  input: "gradients/sub_33_grad/Neg"
  input: "gradients/sub_33_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_33_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_33_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_33_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_33_grad/Sum"
  input: "gradients/sub_33_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_33_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_143_grad/tuple/control_dependency_1"
  input: "^gradients/sub_33_grad/Reshape"
}
node {
  name: "gradients/sub_33_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_143_grad/tuple/control_dependency_1"
  input: "^gradients/sub_33_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_143_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_33_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_33_grad/Reshape"
  input: "^gradients/sub_33_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_33_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/mul_150_grad/tuple/control_dependency_1"
  input: "gradients/mul_149_grad/tuple/control_dependency_1"
  input: "gradients/sub_35_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_150_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_7_grad/Sign"
  op: "Sign"
  input: "sub_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_7_grad/mul"
  op: "Mul"
  input: "gradients/AddN"
  input: "gradients/Abs_7_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_68_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_69_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_68_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_69_grad/tuple/control_dependency"
  input: "^gradients/add_68_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_68_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_69_grad/tuple/control_dependency"
  input: "^gradients/add_68_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scorebelief_pdf_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/scorebelief_pdf_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_69_grad/tuple/control_dependency_1"
  input: "gradients/losses/scorebelief_pdf_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scorebelief_pdf_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/scorebelief_pdf_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/scorebelief_pdf_loss_grad/Reshape"
  input: "gradients/losses/scorebelief_pdf_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_162_grad/Mul"
  op: "Mul"
  input: "gradients/losses/scorebelief_cdf_loss_grad/Tile"
  input: "mul_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_162_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/scorebelief_cdf_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_162_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_162_grad/Mul"
  input: "^gradients/mul_162_grad/Mul_1"
}
node {
  name: "gradients/mul_162_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_162_grad/Mul"
  input: "^gradients/mul_162_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_162_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_162_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_162_grad/Mul_1"
  input: "^gradients/mul_162_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_162_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_104_grad/Mul"
  op: "Mul"
  input: "gradients/mul_163_grad/tuple/control_dependency_1"
  input: "truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_104_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_163_grad/tuple/control_dependency_1"
  input: "mul_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_104_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_104_grad/Mul"
  input: "^gradients/mul_104_grad/Mul_1"
}
node {
  name: "gradients/mul_104_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_104_grad/Mul"
  input: "^gradients/mul_104_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_104_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_104_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_104_grad/Mul_1"
  input: "^gradients/mul_104_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_104_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_14_grad/Neg"
  op: "Neg"
  input: "gradients/mul_109_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_14_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/sub_14_grad/Sum"
  op: "Sum"
  input: "gradients/sub_14_grad/Neg"
  input: "gradients/sub_14_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_14_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_14_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_14_grad/Sum"
  input: "gradients/sub_14_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_109_grad/tuple/control_dependency_1"
  input: "^gradients/sub_14_grad/Reshape"
}
node {
  name: "gradients/sub_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_109_grad/tuple/control_dependency_1"
  input: "^gradients/sub_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_109_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_14_grad/Reshape"
  input: "^gradients/sub_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_14_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_13_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_13_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_13_grad/Maximum"
  op: "Maximum"
  input: "gradients/Sum_13_grad/Maximum/x"
  input: "gradients/Sum_13_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_13_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_13_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Sum_13_grad/floordiv/x"
  input: "gradients/Sum_13_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_13_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_18_grad/tuple/control_dependency"
  input: "gradients/Sum_13_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_13_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_13_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_13_grad/Reshape"
  input: "gradients/Sum_13_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_16_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_16_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_16_grad/Maximum"
  op: "Maximum"
  input: "gradients/Sum_16_grad/Maximum/x"
  input: "gradients/Sum_16_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_16_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_16_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Sum_16_grad/floordiv/x"
  input: "gradients/Sum_16_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_16_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_21_grad/tuple/control_dependency"
  input: "gradients/Sum_16_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_16_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_16_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_16_grad/Reshape"
  input: "gradients/Sum_16_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_22_grad/Shape"
  input: "gradients/truediv_22_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mul_118_grad/tuple/control_dependency_1"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_22_grad/RealDiv"
  input: "gradients/truediv_22_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_22_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_22_grad/Sum"
  input: "gradients/truediv_22_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/Neg"
  op: "Neg"
  input: "Sum_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_22_grad/Neg"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_22_grad/RealDiv_1"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/mul"
  op: "Mul"
  input: "gradients/mul_118_grad/tuple/control_dependency_1"
  input: "gradients/truediv_22_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_22_grad/mul"
  input: "gradients/truediv_22_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_22_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_22_grad/Sum_1"
  input: "gradients/truediv_22_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_22_grad/Reshape"
  input: "^gradients/truediv_22_grad/Reshape_1"
}
node {
  name: "gradients/truediv_22_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_22_grad/Reshape"
  input: "^gradients/truediv_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_22_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_22_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_22_grad/Reshape_1"
  input: "^gradients/truediv_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_22_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_27_grad/Neg"
  op: "Neg"
  input: "gradients/mul_138_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_27_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/sub_27_grad/Sum"
  op: "Sum"
  input: "gradients/sub_27_grad/Neg"
  input: "gradients/sub_27_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_27_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_27_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_27_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_27_grad/Sum"
  input: "gradients/sub_27_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_27_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_138_grad/tuple/control_dependency_1"
  input: "^gradients/sub_27_grad/Reshape"
}
node {
  name: "gradients/sub_27_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_138_grad/tuple/control_dependency_1"
  input: "^gradients/sub_27_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_138_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_27_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_27_grad/Reshape"
  input: "^gradients/sub_27_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_27_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/mul_145_grad/tuple/control_dependency_1"
  input: "gradients/mul_144_grad/tuple/control_dependency_1"
  input: "gradients/sub_33_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_145_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_6_grad/Sign"
  op: "Sign"
  input: "sub_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_6_grad/mul"
  op: "Mul"
  input: "gradients/AddN_1"
  input: "gradients/Abs_6_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_34_grad/Neg"
  op: "Neg"
  input: "gradients/Abs_7_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_34_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Abs_7_grad/mul"
  input: "^gradients/sub_34_grad/Neg"
}
node {
  name: "gradients/sub_34_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Abs_7_grad/mul"
  input: "^gradients/sub_34_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Abs_7_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_34_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_34_grad/Neg"
  input: "^gradients/sub_34_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_34_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_67_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_68_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_67_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_68_grad/tuple/control_dependency"
  input: "^gradients/add_67_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_67_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_68_grad/tuple/control_dependency"
  input: "^gradients/add_67_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/variance_time_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/variance_time_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_68_grad/tuple/control_dependency_1"
  input: "gradients/losses/variance_time_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/variance_time_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/variance_time_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/variance_time_loss_grad/Reshape"
  input: "gradients/losses/variance_time_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_161_grad/Mul"
  op: "Mul"
  input: "gradients/losses/scorebelief_pdf_loss_grad/Tile"
  input: "mul_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_161_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/scorebelief_pdf_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_161_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_161_grad/Mul"
  input: "^gradients/mul_161_grad/Mul_1"
}
node {
  name: "gradients/mul_161_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_161_grad/Mul"
  input: "^gradients/mul_161_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_161_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_161_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_161_grad/Mul_1"
  input: "^gradients/mul_161_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_161_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_99_grad/Mul"
  op: "Mul"
  input: "gradients/mul_162_grad/tuple/control_dependency_1"
  input: "Sum_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_99_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_162_grad/tuple/control_dependency_1"
  input: "mul_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_99_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_99_grad/Mul"
  input: "^gradients/mul_99_grad/Mul_1"
}
node {
  name: "gradients/mul_99_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_99_grad/Mul"
  input: "^gradients/mul_99_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_99_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_99_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_99_grad/Mul_1"
  input: "^gradients/mul_99_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_99_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_16_grad/Shape"
  input: "gradients/truediv_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mul_104_grad/tuple/control_dependency_1"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_16_grad/RealDiv"
  input: "gradients/truediv_16_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_16_grad/Sum"
  input: "gradients/truediv_16_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/Neg"
  op: "Neg"
  input: "Sum_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_16_grad/Neg"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_16_grad/RealDiv_1"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/mul"
  op: "Mul"
  input: "gradients/mul_104_grad/tuple/control_dependency_1"
  input: "gradients/truediv_16_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_16_grad/mul"
  input: "gradients/truediv_16_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_16_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_16_grad/Sum_1"
  input: "gradients/truediv_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_16_grad/Reshape"
  input: "^gradients/truediv_16_grad/Reshape_1"
}
node {
  name: "gradients/truediv_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_16_grad/Reshape"
  input: "^gradients/truediv_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_16_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_16_grad/Reshape_1"
  input: "^gradients/truediv_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_16_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sqrt_1_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "Sqrt_1"
  input: "gradients/sub_14_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_112_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_112_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_112_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_112_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_112_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_112_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_13_grad/Tile"
  input: "Reshape_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_112_grad/Mul_1"
  op: "Mul"
  input: "mul_111"
  input: "gradients/Sum_13_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_112_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_112_grad/Sum"
  op: "Sum"
  input: "gradients/mul_112_grad/Mul_1"
  input: "gradients/mul_112_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_112_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_112_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_112_grad/Sum"
  input: "gradients/mul_112_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_112_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_112_grad/Mul"
  input: "^gradients/mul_112_grad/Reshape"
}
node {
  name: "gradients/mul_112_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_112_grad/Mul"
  input: "^gradients/mul_112_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_112_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_112_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_112_grad/Reshape"
  input: "^gradients/mul_112_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_112_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_116_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_16_grad/Tile"
  input: "Reshape_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_116_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_16_grad/Tile"
  input: "softmax_cross_entropy_with_logits_7/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_116_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_116_grad/Mul"
  input: "^gradients/mul_116_grad/Mul_1"
}
node {
  name: "gradients/mul_116_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_116_grad/Mul"
  input: "^gradients/mul_116_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_116_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_116_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_116_grad/Mul_1"
  input: "^gradients/mul_116_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_116_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_17_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_17_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_22_grad/tuple/control_dependency"
  input: "gradients/Sum_17_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_17_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_17_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_17_grad/Reshape"
  input: "gradients/Sum_17_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/mul_140_grad/tuple/control_dependency_1"
  input: "gradients/mul_139_grad/tuple/control_dependency_1"
  input: "gradients/sub_27_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_140_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_5_grad/Sign"
  op: "Sign"
  input: "sub_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_5_grad/mul"
  op: "Mul"
  input: "gradients/AddN_2"
  input: "gradients/Abs_5_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_32_grad/Neg"
  op: "Neg"
  input: "gradients/Abs_6_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_32_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Abs_6_grad/mul"
  input: "^gradients/sub_32_grad/Neg"
}
node {
  name: "gradients/sub_32_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Abs_6_grad/mul"
  input: "^gradients/sub_32_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Abs_6_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_32_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_32_grad/Neg"
  input: "^gradients/sub_32_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_32_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_8_grad/Const"
  op: "Const"
  input: "^gradients/sub_34_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_8_grad/Mul"
  op: "Mul"
  input: "sub_31"
  input: "gradients/Square_8_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_8_grad/Mul_1"
  op: "Mul"
  input: "gradients/sub_34_grad/tuple/control_dependency"
  input: "gradients/Square_8_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_87_grad/Mul"
  op: "Mul"
  input: "gradients/sub_34_grad/tuple/control_dependency_1"
  input: "mul_87/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_87_grad/Mul_1"
  op: "Mul"
  input: "Softplus_3"
  input: "gradients/sub_34_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_87_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_87_grad/Sum"
  op: "Sum"
  input: "gradients/mul_87_grad/Mul_1"
  input: "gradients/mul_87_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_87_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_87_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_87_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_87_grad/Sum"
  input: "gradients/mul_87_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_87_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_87_grad/Mul"
  input: "^gradients/mul_87_grad/Reshape"
}
node {
  name: "gradients/mul_87_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_87_grad/Mul"
  input: "^gradients/mul_87_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_87_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_87_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_87_grad/Reshape"
  input: "^gradients/mul_87_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_87_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_66_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_67_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_66_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_67_grad/tuple/control_dependency"
  input: "^gradients/add_66_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_66_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_67_grad/tuple/control_dependency"
  input: "^gradients/add_66_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/lead_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/lead_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_67_grad/tuple/control_dependency_1"
  input: "gradients/losses/lead_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/lead_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/lead_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/lead_loss_grad/Reshape"
  input: "gradients/losses/lead_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_160_grad/Mul"
  op: "Mul"
  input: "gradients/losses/variance_time_loss_grad/Tile"
  input: "mul_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_160_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/variance_time_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_160_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_160_grad/Mul"
  input: "^gradients/mul_160_grad/Mul_1"
}
node {
  name: "gradients/mul_160_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_160_grad/Mul"
  input: "^gradients/mul_160_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_160_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_160_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_160_grad/Mul_1"
  input: "^gradients/mul_160_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_160_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_101_grad/Mul"
  op: "Mul"
  input: "gradients/mul_161_grad/tuple/control_dependency_1"
  input: "softmax_cross_entropy_with_logits_5/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_101_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_161_grad/tuple/control_dependency_1"
  input: "mul_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_101_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_101_grad/Mul"
  input: "^gradients/mul_101_grad/Mul_1"
}
node {
  name: "gradients/mul_101_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_101_grad/Mul"
  input: "^gradients/mul_101_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_101_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_101_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_101_grad/Mul_1"
  input: "^gradients/mul_101_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_101_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_10_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_10_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_10_grad/Maximum"
  op: "Maximum"
  input: "gradients/Sum_10_grad/Maximum/x"
  input: "gradients/Sum_10_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_10_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_10_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Sum_10_grad/floordiv/x"
  input: "gradients/Sum_10_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_10_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_99_grad/tuple/control_dependency_1"
  input: "gradients/Sum_10_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_10_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_10_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_10_grad/Reshape"
  input: "gradients/Sum_10_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_11_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_16_grad/tuple/control_dependency"
  input: "gradients/Sum_11_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_11_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_11_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_11_grad/Reshape"
  input: "gradients/Sum_11_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_50_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_50_grad/Sum"
  op: "Sum"
  input: "gradients/Sqrt_1_grad/SqrtGrad"
  input: "gradients/add_50_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_50_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_50_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_50_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_50_grad/Sum"
  input: "gradients/add_50_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_50_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Sqrt_1_grad/SqrtGrad"
  input: "^gradients/add_50_grad/Reshape"
}
node {
  name: "gradients/add_50_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Sqrt_1_grad/SqrtGrad"
  input: "^gradients/add_50_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sqrt_1_grad/SqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_50_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_50_grad/Reshape"
  input: "^gradients/add_50_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_50_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_111_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_111_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_111_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_111_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_111_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_111_grad/Mul"
  op: "Mul"
  input: "gradients/mul_112_grad/tuple/control_dependency"
  input: "Reshape_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_111_grad/Mul_1"
  op: "Mul"
  input: "Square_3"
  input: "gradients/mul_112_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_111_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_111_grad/Sum"
  op: "Sum"
  input: "gradients/mul_111_grad/Mul_1"
  input: "gradients/mul_111_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_111_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_111_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_111_grad/Sum"
  input: "gradients/mul_111_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_111_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_111_grad/Mul"
  input: "^gradients/mul_111_grad/Reshape"
}
node {
  name: "gradients/mul_111_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_111_grad/Mul"
  input: "^gradients/mul_111_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_111_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_111_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_111_grad/Reshape"
  input: "^gradients/mul_111_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_111_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 46208
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_116_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_7/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_117_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_17_grad/Tile"
  input: "Reshape_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_117_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_17_grad/Tile"
  input: "softmax_cross_entropy_with_logits_8/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_117_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_117_grad/Mul"
  input: "^gradients/mul_117_grad/Mul_1"
}
node {
  name: "gradients/mul_117_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_117_grad/Mul"
  input: "^gradients/mul_117_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_117_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_117_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_117_grad/Mul_1"
  input: "^gradients/mul_117_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_117_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_26_grad/Neg"
  op: "Neg"
  input: "gradients/Abs_5_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_26_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Abs_5_grad/mul"
  input: "^gradients/sub_26_grad/Neg"
}
node {
  name: "gradients/sub_26_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Abs_5_grad/mul"
  input: "^gradients/sub_26_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Abs_5_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_26_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_26_grad/Neg"
  input: "^gradients/sub_26_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_26_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_7_grad/Const"
  op: "Const"
  input: "^gradients/sub_32_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_7_grad/Mul"
  op: "Mul"
  input: "sub_30"
  input: "gradients/Square_7_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_7_grad/Mul_1"
  op: "Mul"
  input: "gradients/sub_32_grad/tuple/control_dependency"
  input: "gradients/Square_7_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_86_grad/Mul"
  op: "Mul"
  input: "gradients/sub_32_grad/tuple/control_dependency_1"
  input: "mul_86/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_86_grad/Mul_1"
  op: "Mul"
  input: "Softplus_2"
  input: "gradients/sub_32_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_86_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_86_grad/Sum"
  op: "Sum"
  input: "gradients/mul_86_grad/Mul_1"
  input: "gradients/mul_86_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_86_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_86_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_86_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_86_grad/Sum"
  input: "gradients/mul_86_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_86_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_86_grad/Mul"
  input: "^gradients/mul_86_grad/Reshape"
}
node {
  name: "gradients/mul_86_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_86_grad/Mul"
  input: "^gradients/mul_86_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_86_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_86_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_86_grad/Reshape"
  input: "^gradients/mul_86_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_86_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_31_grad/Neg"
  op: "Neg"
  input: "gradients/Square_8_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_31_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Square_8_grad/Mul_1"
  input: "^gradients/sub_31_grad/Neg"
}
node {
  name: "gradients/sub_31_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Square_8_grad/Mul_1"
  input: "^gradients/sub_31_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_8_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_31_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_31_grad/Neg"
  input: "^gradients/sub_31_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_31_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softplus_3_grad/Sigmoid"
  op: "Sigmoid"
  input: "strided_slice_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softplus_3_grad/mul"
  op: "Mul"
  input: "gradients/mul_87_grad/tuple/control_dependency"
  input: "gradients/Softplus_3_grad/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_65_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_66_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_65_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_66_grad/tuple/control_dependency"
  input: "^gradients/add_65_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_65_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_66_grad/tuple/control_dependency"
  input: "^gradients/add_65_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scoremean_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/scoremean_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_66_grad/tuple/control_dependency_1"
  input: "gradients/losses/scoremean_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/scoremean_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/scoremean_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/scoremean_loss_grad/Reshape"
  input: "gradients/losses/scoremean_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_159_grad/Mul"
  op: "Mul"
  input: "gradients/losses/lead_loss_grad/Tile"
  input: "mul_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_159_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/lead_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_159_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_159_grad/Mul"
  input: "^gradients/mul_159_grad/Mul_1"
}
node {
  name: "gradients/mul_159_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_159_grad/Mul"
  input: "^gradients/mul_159_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_159_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_159_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_159_grad/Mul_1"
  input: "^gradients/mul_159_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_159_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_136_grad/Mul"
  op: "Mul"
  input: "gradients/mul_160_grad/tuple/control_dependency_1"
  input: "Select_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_136_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_160_grad/tuple/control_dependency_1"
  input: "mul_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_136_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_136_grad/Mul"
  input: "^gradients/mul_136_grad/Mul_1"
}
node {
  name: "gradients/mul_136_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_136_grad/Mul"
  input: "^gradients/mul_136_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_136_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_136_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_136_grad/Mul_1"
  input: "^gradients/mul_136_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_136_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_101_grad/tuple/control_dependency_1"
  input: "gradients/softmax_cross_entropy_with_logits_5/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_1_grad/Const"
  op: "Const"
  input: "^gradients/Sum_10_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_1_grad/Mul"
  op: "Mul"
  input: "sub_11"
  input: "gradients/Square_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_10_grad/Tile"
  input: "gradients/Square_1_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_103_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_11_grad/Tile"
  input: "Reshape_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_103_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_11_grad/Tile"
  input: "softmax_cross_entropy_with_logits_6/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_103_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_103_grad/Mul"
  input: "^gradients/mul_103_grad/Mul_1"
}
node {
  name: "gradients/mul_103_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_103_grad/Mul"
  input: "^gradients/mul_103_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_103_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_103_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_103_grad/Mul_1"
  input: "^gradients/mul_103_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_103_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_108_grad/Mul"
  op: "Mul"
  input: "gradients/add_50_grad/tuple/control_dependency"
  input: "mul_108/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_108_grad/Mul_1"
  op: "Mul"
  input: "mul_107"
  input: "gradients/add_50_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_108_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_108_grad/Sum"
  op: "Sum"
  input: "gradients/mul_108_grad/Mul_1"
  input: "gradients/mul_108_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_108_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_108_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_108_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_108_grad/Sum"
  input: "gradients/mul_108_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_108_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_108_grad/Mul"
  input: "^gradients/mul_108_grad/Reshape"
}
node {
  name: "gradients/mul_108_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_108_grad/Mul"
  input: "^gradients/mul_108_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_108_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_108_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_108_grad/Reshape"
  input: "^gradients/mul_108_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_108_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Square_3_grad/Const"
  op: "Const"
  input: "^gradients/mul_111_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_3_grad/Mul"
  op: "Mul"
  input: "sub_15"
  input: "gradients/Square_3_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_111_grad/tuple/control_dependency"
  input: "gradients/Square_3_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "softmax_cross_entropy_with_logits_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_7/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_7_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_7_grad/ExpandDims"
  input: "softmax_cross_entropy_with_logits_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_with_logits_7/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_with_logits_7_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_7/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_7_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_7_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_with_logits_7_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_with_logits_7_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_7_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_7_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_7_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_7_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_with_logits_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_7_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 46208
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_117_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_8/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sqrt_3_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "Sqrt_3"
  input: "gradients/sub_26_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_83_grad/Mul"
  op: "Mul"
  input: "gradients/sub_26_grad/tuple/control_dependency_1"
  input: "mul_83/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_83_grad/Mul_1"
  op: "Mul"
  input: "Softplus"
  input: "gradients/sub_26_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_83_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_83_grad/Sum"
  op: "Sum"
  input: "gradients/mul_83_grad/Mul_1"
  input: "gradients/mul_83_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_83_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_83_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_83_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_83_grad/Sum"
  input: "gradients/mul_83_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_83_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_83_grad/Mul"
  input: "^gradients/mul_83_grad/Reshape"
}
node {
  name: "gradients/mul_83_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_83_grad/Mul"
  input: "^gradients/mul_83_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_83_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_83_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_83_grad/Reshape"
  input: "^gradients/mul_83_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_83_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_30_grad/Neg"
  op: "Neg"
  input: "gradients/Square_7_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_30_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Square_7_grad/Mul_1"
  input: "^gradients/sub_30_grad/Neg"
}
node {
  name: "gradients/sub_30_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Square_7_grad/Mul_1"
  input: "^gradients/sub_30_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_7_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_30_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_30_grad/Neg"
  input: "^gradients/sub_30_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_30_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softplus_2_grad/Sigmoid"
  op: "Sigmoid"
  input: "strided_slice_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softplus_2_grad/mul"
  op: "Mul"
  input: "gradients/mul_86_grad/tuple/control_dependency"
  input: "gradients/Softplus_2_grad/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_56_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_56_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_56_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_56_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_56_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_56_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_56_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_56_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_56_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_56_grad/StridedSliceGrad/strides"
  input: "gradients/Softplus_3_grad/mul"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/add_64_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_65_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_64_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_65_grad/tuple/control_dependency"
  input: "^gradients/add_64_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_64_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_65_grad/tuple/control_dependency"
  input: "^gradients/add_64_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/td_score_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/td_score_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_65_grad/tuple/control_dependency_1"
  input: "gradients/losses/td_score_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/td_score_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/td_score_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/td_score_loss_grad/Reshape"
  input: "gradients/losses/td_score_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_158_grad/Mul"
  op: "Mul"
  input: "gradients/losses/scoremean_loss_grad/Tile"
  input: "mul_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_158_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/scoremean_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_158_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_158_grad/Mul"
  input: "^gradients/mul_158_grad/Mul_1"
}
node {
  name: "gradients/mul_158_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_158_grad/Mul"
  input: "^gradients/mul_158_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_158_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_158_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_158_grad/Mul_1"
  input: "^gradients/mul_158_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_158_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_131_grad/Mul"
  op: "Mul"
  input: "gradients/mul_159_grad/tuple/control_dependency_1"
  input: "Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_131_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_159_grad/tuple/control_dependency_1"
  input: "mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_131_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_131_grad/Mul"
  input: "^gradients/mul_131_grad/Mul_1"
}
node {
  name: "gradients/mul_131_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_131_grad/Mul"
  input: "^gradients/mul_131_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_131_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_131_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_131_grad/Mul_1"
  input: "^gradients/mul_131_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_131_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_4_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/Select_4_grad/Select"
  op: "Select"
  input: "Greater_5"
  input: "gradients/mul_136_grad/tuple/control_dependency_1"
  input: "gradients/Select_4_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_4_grad/Select_1"
  op: "Select"
  input: "Greater_5"
  input: "gradients/Select_4_grad/zeros_like"
  input: "gradients/mul_136_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_4_grad/Select"
  input: "^gradients/Select_4_grad/Select_1"
}
node {
  name: "gradients/Select_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Select_4_grad/Select"
  input: "^gradients/Select_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_4_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_4_grad/Select_1"
  input: "^gradients/Select_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_4_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "softmax_cross_entropy_with_logits_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_5/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_5_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_5_grad/ExpandDims"
  input: "softmax_cross_entropy_with_logits_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_with_logits_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_with_logits_5_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_5/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_5_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_5_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_with_logits_5_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_with_logits_5_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_5_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_5_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_5_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_5_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_with_logits_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_5_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_11_grad/Neg"
  op: "Neg"
  input: "gradients/Square_1_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Square_1_grad/Mul_1"
  input: "^gradients/sub_11_grad/Neg"
}
node {
  name: "gradients/sub_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Square_1_grad/Mul_1"
  input: "^gradients/sub_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_11_grad/Neg"
  input: "^gradients/sub_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_11_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 46208
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_103_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_6/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_107_grad/Mul"
  op: "Mul"
  input: "gradients/mul_108_grad/tuple/control_dependency"
  input: "truediv_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_107_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_108_grad/tuple/control_dependency"
  input: "mul_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_107_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_107_grad/Mul"
  input: "^gradients/mul_107_grad/Mul_1"
}
node {
  name: "gradients/mul_107_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_107_grad/Mul"
  input: "^gradients/mul_107_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_107_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_107_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_107_grad/Mul_1"
  input: "^gradients/mul_107_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_107_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_15_grad/Neg"
  op: "Neg"
  input: "gradients/Square_3_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Square_3_grad/Mul_1"
  input: "^gradients/sub_15_grad/Neg"
}
node {
  name: "gradients/sub_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Square_3_grad/Mul_1"
  input: "^gradients/sub_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_15_grad/Neg"
  input: "^gradients/sub_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_15_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_7/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_7_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_7/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "softmax_cross_entropy_with_logits_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_8/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_8_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_8_grad/ExpandDims"
  input: "softmax_cross_entropy_with_logits_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_with_logits_8/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_with_logits_8_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_8/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_8_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_8_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_with_logits_8_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_with_logits_8_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_8_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_8_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_8_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_8_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_with_logits_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_8_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_57_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_57_grad/Sum"
  op: "Sum"
  input: "gradients/Sqrt_3_grad/SqrtGrad"
  input: "gradients/add_57_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_57_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_57_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_57_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_57_grad/Sum"
  input: "gradients/add_57_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_57_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Sqrt_3_grad/SqrtGrad"
  input: "^gradients/add_57_grad/Reshape"
}
node {
  name: "gradients/add_57_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_57_grad/Reshape"
  input: "^gradients/add_57_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_57_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_57_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Sqrt_3_grad/SqrtGrad"
  input: "^gradients/add_57_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Sqrt_3_grad/SqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softplus_grad/Sigmoid"
  op: "Sigmoid"
  input: "strided_slice_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softplus_grad/mul"
  op: "Mul"
  input: "gradients/mul_83_grad/tuple/control_dependency"
  input: "gradients/Softplus_grad/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_55_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_55_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_55_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_55_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_55_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_55_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_55_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_55_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_55_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_55_grad/StridedSliceGrad/strides"
  input: "gradients/Softplus_2_grad/mul"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/add_63_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_64_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_63_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_64_grad/tuple/control_dependency"
  input: "^gradients/add_63_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_63_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_64_grad/tuple/control_dependency"
  input: "^gradients/add_63_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/td_value_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/td_value_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_64_grad/tuple/control_dependency_1"
  input: "gradients/losses/td_value_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/td_value_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/td_value_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/td_value_loss_grad/Reshape"
  input: "gradients/losses/td_value_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_157_grad/Mul"
  op: "Mul"
  input: "gradients/losses/td_score_loss_grad/Tile"
  input: "mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_157_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/td_score_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_157_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_157_grad/Mul"
  input: "^gradients/mul_157_grad/Mul_1"
}
node {
  name: "gradients/mul_157_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_157_grad/Mul"
  input: "^gradients/mul_157_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_157_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_157_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_157_grad/Mul_1"
  input: "^gradients/mul_157_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_157_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_126_grad/Mul"
  op: "Mul"
  input: "gradients/mul_158_grad/tuple/control_dependency_1"
  input: "Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_126_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_158_grad/tuple/control_dependency_1"
  input: "mul_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_126_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_126_grad/Mul"
  input: "^gradients/mul_126_grad/Mul_1"
}
node {
  name: "gradients/mul_126_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_126_grad/Mul"
  input: "^gradients/mul_126_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_126_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_126_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_126_grad/Mul_1"
  input: "^gradients/mul_126_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_126_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_3_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/Select_3_grad/Select"
  op: "Select"
  input: "Greater_4"
  input: "gradients/mul_131_grad/tuple/control_dependency_1"
  input: "gradients/Select_3_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_3_grad/Select_1"
  op: "Select"
  input: "Greater_4"
  input: "gradients/Select_3_grad/zeros_like"
  input: "gradients/mul_131_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_3_grad/Select"
  input: "^gradients/Select_3_grad/Select_1"
}
node {
  name: "gradients/Select_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Select_3_grad/Select"
  input: "^gradients/Select_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_3_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_3_grad/Select_1"
  input: "^gradients/Select_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_3_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_56_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_56_grad/Sum"
  op: "Sum"
  input: "gradients/Select_4_grad/tuple/control_dependency"
  input: "gradients/add_56_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_56_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_56_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_56_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_56_grad/Sum"
  input: "gradients/add_56_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_56_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_4_grad/tuple/control_dependency"
  input: "^gradients/add_56_grad/Reshape"
}
node {
  name: "gradients/add_56_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_56_grad/Reshape"
  input: "^gradients/add_56_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_56_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_56_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_4_grad/tuple/control_dependency"
  input: "^gradients/add_56_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_4_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_135_grad/Mul"
  op: "Mul"
  input: "gradients/Select_4_grad/tuple/control_dependency_1"
  input: "Abs_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_135_grad/Mul_1"
  op: "Mul"
  input: "gradients/Select_4_grad/tuple/control_dependency_1"
  input: "mul_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_135_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_135_grad/Mul"
  input: "^gradients/mul_135_grad/Mul_1"
}
node {
  name: "gradients/mul_135_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_135_grad/Mul"
  input: "^gradients/mul_135_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_135_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_135_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_135_grad/Mul_1"
  input: "^gradients/mul_135_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_135_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_5/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_5_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_5/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Cumsum_1_grad/Cumsum"
  op: "Cumsum"
  input: "gradients/sub_11_grad/tuple/control_dependency_1"
  input: "Cumsum_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: false
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "softmax_cross_entropy_with_logits_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_6/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_6_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_6_grad/ExpandDims"
  input: "softmax_cross_entropy_with_logits_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_with_logits_6/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_with_logits_6_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_6/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_6_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_6_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_with_logits_6_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_with_logits_6_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_6_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_6_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_6_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_6_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_with_logits_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_6_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46208
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_17_grad/Shape"
  input: "gradients/truediv_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/mul_107_grad/tuple/control_dependency_1"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_17_grad/RealDiv"
  input: "gradients/truediv_17_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_17_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_17_grad/Sum"
  input: "gradients/truediv_17_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/Neg"
  op: "Neg"
  input: "Sum_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_17_grad/Neg"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_17_grad/RealDiv_1"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/mul"
  op: "Mul"
  input: "gradients/mul_107_grad/tuple/control_dependency_1"
  input: "gradients/truediv_17_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_17_grad/mul"
  input: "gradients/truediv_17_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_17_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_17_grad/Sum_1"
  input: "gradients/truediv_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_17_grad/Reshape"
  input: "^gradients/truediv_17_grad/Reshape_1"
}
node {
  name: "gradients/truediv_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_17_grad/Reshape"
  input: "^gradients/truediv_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_17_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_17_grad/Reshape_1"
  input: "^gradients/truediv_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_17_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Tanh"
  input: "gradients/sub_15_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_59_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_59_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_59_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_59_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_59_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_59_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_59_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_59_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_59_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_59_grad/StridedSliceGrad/strides"
  input: "gradients/softmax_cross_entropy_with_logits_7/Reshape_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_8/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_8_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_8/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_19_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_19_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_57_grad/tuple/control_dependency_1"
  input: "gradients/Sum_19_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_19_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_19_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_19_grad/Reshape"
  input: "gradients/Sum_19_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_52_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_52_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_52_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_52_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_52_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_52_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_52_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_52_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_52_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_52_grad/StridedSliceGrad/strides"
  input: "gradients/Softplus_grad/mul"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/add_62_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_63_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_62_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_63_grad/tuple/control_dependency"
  input: "^gradients/add_62_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_62_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_63_grad/tuple/control_dependency"
  input: "^gradients/add_62_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/losses/value_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/value_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_63_grad/tuple/control_dependency_1"
  input: "gradients/losses/value_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/value_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/value_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/value_loss_grad/Reshape"
  input: "gradients/losses/value_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_156_grad/Mul"
  op: "Mul"
  input: "gradients/losses/td_value_loss_grad/Tile"
  input: "Sum_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_156_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/td_value_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_156_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_156_grad/Mul"
  input: "^gradients/mul_156_grad/Mul_1"
}
node {
  name: "gradients/mul_156_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_156_grad/Mul"
  input: "^gradients/mul_156_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_156_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_156_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_156_grad/Mul_1"
  input: "^gradients/mul_156_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_156_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_97_grad/Mul"
  op: "Mul"
  input: "gradients/mul_157_grad/tuple/control_dependency_1"
  input: "Sum_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_97_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_157_grad/tuple/control_dependency_1"
  input: "mul_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_97_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_97_grad/Mul"
  input: "^gradients/mul_97_grad/Mul_1"
}
node {
  name: "gradients/mul_97_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_97_grad/Mul"
  input: "^gradients/mul_97_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_97_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_97_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_97_grad/Mul_1"
  input: "^gradients/mul_97_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_97_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_2_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/Select_2_grad/Select"
  op: "Select"
  input: "Greater_3"
  input: "gradients/mul_126_grad/tuple/control_dependency_1"
  input: "gradients/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_2_grad/Select_1"
  op: "Select"
  input: "Greater_3"
  input: "gradients/Select_2_grad/zeros_like"
  input: "gradients/mul_126_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_2_grad/Select"
  input: "^gradients/Select_2_grad/Select_1"
}
node {
  name: "gradients/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Select_2_grad/Select"
  input: "^gradients/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_2_grad/Select_1"
  input: "^gradients/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_55_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_55_grad/Sum"
  op: "Sum"
  input: "gradients/Select_3_grad/tuple/control_dependency"
  input: "gradients/add_55_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_55_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_55_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_55_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_55_grad/Sum"
  input: "gradients/add_55_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_55_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_3_grad/tuple/control_dependency"
  input: "^gradients/add_55_grad/Reshape"
}
node {
  name: "gradients/add_55_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_55_grad/Reshape"
  input: "^gradients/add_55_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_55_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_55_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_3_grad/tuple/control_dependency"
  input: "^gradients/add_55_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_3_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_130_grad/Mul"
  op: "Mul"
  input: "gradients/Select_3_grad/tuple/control_dependency_1"
  input: "Abs_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_130_grad/Mul_1"
  op: "Mul"
  input: "gradients/Select_3_grad/tuple/control_dependency_1"
  input: "mul_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_130_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_130_grad/Mul"
  input: "^gradients/mul_130_grad/Mul_1"
}
node {
  name: "gradients/mul_130_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_130_grad/Mul"
  input: "^gradients/mul_130_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_130_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_130_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_130_grad/Mul_1"
  input: "^gradients/mul_130_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_130_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_133_grad/Mul"
  op: "Mul"
  input: "gradients/add_56_grad/tuple/control_dependency_1"
  input: "sub_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_133_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_133_grad/Sum"
  op: "Sum"
  input: "gradients/mul_133_grad/Mul"
  input: "gradients/mul_133_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_133_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_133_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_133_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_133_grad/Sum"
  input: "gradients/mul_133_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_133_grad/Mul_1"
  op: "Mul"
  input: "mul_133/x"
  input: "gradients/add_56_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_133_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_133_grad/Mul_1"
  input: "^gradients/mul_133_grad/Reshape"
}
node {
  name: "gradients/mul_133_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_133_grad/Reshape"
  input: "^gradients/mul_133_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_133_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_133_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_133_grad/Mul_1"
  input: "^gradients/mul_133_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_133_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_134_grad/Mul"
  op: "Mul"
  input: "gradients/mul_135_grad/tuple/control_dependency"
  input: "Abs_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_134_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_134_grad/Sum"
  op: "Sum"
  input: "gradients/mul_134_grad/Mul"
  input: "gradients/mul_134_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_134_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_134_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_134_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_134_grad/Sum"
  input: "gradients/mul_134_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_134_grad/Mul_1"
  op: "Mul"
  input: "mul_134/x"
  input: "gradients/mul_135_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_134_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_134_grad/Mul_1"
  input: "^gradients/mul_134_grad/Reshape"
}
node {
  name: "gradients/mul_134_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_134_grad/Reshape"
  input: "^gradients/mul_134_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_134_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_134_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_134_grad/Mul_1"
  input: "^gradients/mul_134_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_134_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softmax_2_grad/mul"
  op: "Mul"
  input: "gradients/Cumsum_1_grad/Cumsum"
  input: "Softmax_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softmax_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Softmax_2_grad/Sum"
  op: "Sum"
  input: "gradients/Softmax_2_grad/mul"
  input: "gradients/Softmax_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Softmax_2_grad/sub"
  op: "Sub"
  input: "gradients/Cumsum_1_grad/Cumsum"
  input: "gradients/Softmax_2_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softmax_2_grad/mul_1"
  op: "Mul"
  input: "gradients/Softmax_2_grad/sub"
  input: "Softmax_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_6/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_6_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_6/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_12_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_17_grad/tuple/control_dependency"
  input: "gradients/Sum_12_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_12_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\023\000\000\000\023\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_12_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_12_grad/Reshape"
  input: "gradients/Sum_12_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/futurepos_output_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/futurepos_output_grad/Reshape"
  op: "Reshape"
  input: "gradients/Tanh_grad/TanhGrad"
  input: "gradients/futurepos_output_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/stack_7_grad/unstack"
  op: "Unpack"
  input: "gradients/softmax_cross_entropy_with_logits_8/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/stack_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/stack_7_grad/unstack"
}
node {
  name: "gradients/stack_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/stack_7_grad/unstack"
  input: "^gradients/stack_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_7_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/stack_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/stack_7_grad/unstack:1"
  input: "^gradients/stack_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_7_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_137_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_19_grad/Tile"
  input: "Square_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_137_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_19_grad/Tile"
  input: "Softmax_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_137_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_137_grad/Mul"
  input: "^gradients/mul_137_grad/Mul_1"
}
node {
  name: "gradients/mul_137_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_137_grad/Mul"
  input: "^gradients/mul_137_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_137_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_137_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_137_grad/Mul_1"
  input: "^gradients/mul_137_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_137_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/policy_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/policy_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_62_grad/tuple/control_dependency"
  input: "gradients/losses/policy_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/policy_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/policy_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/policy_loss_grad/Reshape"
  input: "gradients/losses/policy_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/policy1_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/losses/policy1_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_62_grad/tuple/control_dependency_1"
  input: "gradients/losses/policy1_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/losses/policy1_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/losses/policy1_loss_grad/Tile"
  op: "Tile"
  input: "gradients/losses/policy1_loss_grad/Reshape"
  input: "gradients/losses/policy1_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_155_grad/Mul"
  op: "Mul"
  input: "gradients/losses/value_loss_grad/Tile"
  input: "mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_155_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/value_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_155_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_155_grad/Mul"
  input: "^gradients/mul_155_grad/Mul_1"
}
node {
  name: "gradients/mul_155_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_155_grad/Mul"
  input: "^gradients/mul_155_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_155_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_155_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_155_grad/Mul_1"
  input: "^gradients/mul_155_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_155_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_8_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_8_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_8_grad/Maximum"
  op: "Maximum"
  input: "gradients/Sum_8_grad/Maximum/x"
  input: "gradients/Sum_8_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_8_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_8_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Sum_8_grad/floordiv/x"
  input: "gradients/Sum_8_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_8_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_156_grad/tuple/control_dependency_1"
  input: "gradients/Sum_8_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_8_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_8_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_8_grad/Reshape"
  input: "gradients/Sum_8_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_9_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_97_grad/tuple/control_dependency_1"
  input: "gradients/Sum_9_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_9_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_9_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_9_grad/Reshape"
  input: "gradients/Sum_9_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_54_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_54_grad/Sum"
  op: "Sum"
  input: "gradients/Select_2_grad/tuple/control_dependency"
  input: "gradients/add_54_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_54_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_54_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_54_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_54_grad/Sum"
  input: "gradients/add_54_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_54_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_2_grad/tuple/control_dependency"
  input: "^gradients/add_54_grad/Reshape"
}
node {
  name: "gradients/add_54_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_54_grad/Reshape"
  input: "^gradients/add_54_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_54_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_54_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_2_grad/tuple/control_dependency"
  input: "^gradients/add_54_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_125_grad/Mul"
  op: "Mul"
  input: "gradients/Select_2_grad/tuple/control_dependency_1"
  input: "Abs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_125_grad/Mul_1"
  op: "Mul"
  input: "gradients/Select_2_grad/tuple/control_dependency_1"
  input: "mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_125_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_125_grad/Mul"
  input: "^gradients/mul_125_grad/Mul_1"
}
node {
  name: "gradients/mul_125_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_125_grad/Mul"
  input: "^gradients/mul_125_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_125_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_125_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_125_grad/Mul_1"
  input: "^gradients/mul_125_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_125_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_128_grad/Mul"
  op: "Mul"
  input: "gradients/add_55_grad/tuple/control_dependency_1"
  input: "sub_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_128_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_128_grad/Sum"
  op: "Sum"
  input: "gradients/mul_128_grad/Mul"
  input: "gradients/mul_128_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_128_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_128_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_128_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_128_grad/Sum"
  input: "gradients/mul_128_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_128_grad/Mul_1"
  op: "Mul"
  input: "mul_128/x"
  input: "gradients/add_55_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_128_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_128_grad/Mul_1"
  input: "^gradients/mul_128_grad/Reshape"
}
node {
  name: "gradients/mul_128_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_128_grad/Reshape"
  input: "^gradients/mul_128_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_128_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_128_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_128_grad/Mul_1"
  input: "^gradients/mul_128_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_128_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_129_grad/Mul"
  op: "Mul"
  input: "gradients/mul_130_grad/tuple/control_dependency"
  input: "Abs_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_129_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_129_grad/Sum"
  op: "Sum"
  input: "gradients/mul_129_grad/Mul"
  input: "gradients/mul_129_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_129_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_129_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_129_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_129_grad/Sum"
  input: "gradients/mul_129_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_129_grad/Mul_1"
  op: "Mul"
  input: "mul_129/x"
  input: "gradients/mul_130_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_129_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_129_grad/Mul_1"
  input: "^gradients/mul_129_grad/Reshape"
}
node {
  name: "gradients/mul_129_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_129_grad/Reshape"
  input: "^gradients/mul_129_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_129_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_129_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_129_grad/Mul_1"
  input: "^gradients/mul_129_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_129_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_23_grad/Neg"
  op: "Neg"
  input: "gradients/mul_133_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_23_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/sub_23_grad/Sum"
  op: "Sum"
  input: "gradients/sub_23_grad/Neg"
  input: "gradients/sub_23_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_23_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_23_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_23_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_23_grad/Sum"
  input: "gradients/sub_23_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_23_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_133_grad/tuple/control_dependency_1"
  input: "^gradients/sub_23_grad/Reshape"
}
node {
  name: "gradients/sub_23_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_133_grad/tuple/control_dependency_1"
  input: "^gradients/sub_23_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_133_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_23_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_23_grad/Reshape"
  input: "^gradients/sub_23_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_23_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/stack_4_grad/unstack"
  op: "Unpack"
  input: "gradients/softmax_cross_entropy_with_logits_6/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/stack_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/stack_4_grad/unstack"
}
node {
  name: "gradients/stack_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/stack_4_grad/unstack"
  input: "^gradients/stack_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_4_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/stack_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/stack_4_grad/unstack:1"
  input: "^gradients/stack_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_4_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_106_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_12_grad/Tile"
  input: "Reshape_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_106_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_12_grad/Tile"
  input: "Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_106_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_106_grad/Mul"
  input: "^gradients/mul_106_grad/Mul_1"
}
node {
  name: "gradients/mul_106_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_106_grad/Mul"
  input: "^gradients/mul_106_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_106_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_106_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_106_grad/Mul_1"
  input: "^gradients/mul_106_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_106_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_60_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_60_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_60_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_60_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_60_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_60_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_60_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_60_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_60_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_60_grad/StridedSliceGrad/strides"
  input: "gradients/stack_7_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 8
    }
  }
}
node {
  name: "gradients/Square_6_grad/Const"
  op: "Const"
  input: "^gradients/mul_137_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_6_grad/Mul"
  op: "Mul"
  input: "sub_24"
  input: "gradients/Square_6_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_6_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_137_grad/tuple/control_dependency_1"
  input: "gradients/Square_6_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_153_grad/Mul"
  op: "Mul"
  input: "gradients/losses/policy_loss_grad/Tile"
  input: "mul_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_153_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/policy_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_153_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_153_grad/Mul"
  input: "^gradients/mul_153_grad/Mul_1"
}
node {
  name: "gradients/mul_153_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_153_grad/Mul"
  input: "^gradients/mul_153_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_153_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_153_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_153_grad/Mul_1"
  input: "^gradients/mul_153_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_153_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_154_grad/Mul"
  op: "Mul"
  input: "gradients/losses/policy1_loss_grad/Tile"
  input: "mul_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_154_grad/Mul_1"
  op: "Mul"
  input: "gradients/losses/policy1_loss_grad/Tile"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_154_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_154_grad/Mul"
  input: "^gradients/mul_154_grad/Mul_1"
}
node {
  name: "gradients/mul_154_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_154_grad/Mul"
  input: "^gradients/mul_154_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_154_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_154_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_154_grad/Mul_1"
  input: "^gradients/mul_154_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_154_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_91_grad/Mul"
  op: "Mul"
  input: "gradients/mul_155_grad/tuple/control_dependency_1"
  input: "softmax_cross_entropy_with_logits_2/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_91_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_91_grad/Sum"
  op: "Sum"
  input: "gradients/mul_91_grad/Mul"
  input: "gradients/mul_91_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_91_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_91_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_91_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_91_grad/Sum"
  input: "gradients/mul_91_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_91_grad/Mul_1"
  op: "Mul"
  input: "mul_91/x"
  input: "gradients/mul_155_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_91_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_91_grad/Mul_1"
  input: "^gradients/mul_91_grad/Reshape"
}
node {
  name: "gradients/mul_91_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_91_grad/Reshape"
  input: "^gradients/mul_91_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_91_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_91_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_91_grad/Mul_1"
  input: "^gradients/mul_91_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_91_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_92_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_92_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_92_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_92_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_92_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_92_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_8_grad/Tile"
  input: "sub_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_92_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_92_grad/Sum"
  op: "Sum"
  input: "gradients/mul_92_grad/Mul"
  input: "gradients/mul_92_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_92_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_92_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_92_grad/Sum"
  input: "gradients/mul_92_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_92_grad/Mul_1"
  op: "Mul"
  input: "Const_8"
  input: "gradients/Sum_8_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_92_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_92_grad/Mul_1"
  input: "^gradients/mul_92_grad/Reshape"
}
node {
  name: "gradients/mul_92_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_92_grad/Reshape"
  input: "^gradients/mul_92_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_92_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_92_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_92_grad/Mul_1"
  input: "^gradients/mul_92_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_92_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_1_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/Select_1_grad/Select"
  op: "Select"
  input: "Greater_2"
  input: "gradients/Sum_9_grad/Tile"
  input: "gradients/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_1_grad/Select_1"
  op: "Select"
  input: "Greater_2"
  input: "gradients/Select_1_grad/zeros_like"
  input: "gradients/Sum_9_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_1_grad/Select"
  input: "^gradients/Select_1_grad/Select_1"
}
node {
  name: "gradients/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Select_1_grad/Select"
  input: "^gradients/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_1_grad/Select_1"
  input: "^gradients/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_123_grad/Mul"
  op: "Mul"
  input: "gradients/add_54_grad/tuple/control_dependency_1"
  input: "sub_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_123_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_123_grad/Sum"
  op: "Sum"
  input: "gradients/mul_123_grad/Mul"
  input: "gradients/mul_123_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_123_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_123_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_123_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_123_grad/Sum"
  input: "gradients/mul_123_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_123_grad/Mul_1"
  op: "Mul"
  input: "mul_123/x"
  input: "gradients/add_54_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_123_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_123_grad/Mul_1"
  input: "^gradients/mul_123_grad/Reshape"
}
node {
  name: "gradients/mul_123_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_123_grad/Reshape"
  input: "^gradients/mul_123_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_123_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_123_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_123_grad/Mul_1"
  input: "^gradients/mul_123_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_123_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_124_grad/Mul"
  op: "Mul"
  input: "gradients/mul_125_grad/tuple/control_dependency"
  input: "Abs_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_124_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_124_grad/Sum"
  op: "Sum"
  input: "gradients/mul_124_grad/Mul"
  input: "gradients/mul_124_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_124_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_124_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_124_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_124_grad/Sum"
  input: "gradients/mul_124_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_124_grad/Mul_1"
  op: "Mul"
  input: "mul_124/x"
  input: "gradients/mul_125_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_124_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_124_grad/Mul_1"
  input: "^gradients/mul_124_grad/Reshape"
}
node {
  name: "gradients/mul_124_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_124_grad/Reshape"
  input: "^gradients/mul_124_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_124_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_124_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_124_grad/Mul_1"
  input: "^gradients/mul_124_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_124_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_21_grad/Neg"
  op: "Neg"
  input: "gradients/mul_128_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_21_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/sub_21_grad/Sum"
  op: "Sum"
  input: "gradients/sub_21_grad/Neg"
  input: "gradients/sub_21_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_21_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_21_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_21_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_21_grad/Sum"
  input: "gradients/sub_21_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_21_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_128_grad/tuple/control_dependency_1"
  input: "^gradients/sub_21_grad/Reshape"
}
node {
  name: "gradients/sub_21_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_128_grad/tuple/control_dependency_1"
  input: "^gradients/sub_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_128_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_21_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_21_grad/Reshape"
  input: "^gradients/sub_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_21_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/mul_135_grad/tuple/control_dependency_1"
  input: "gradients/mul_134_grad/tuple/control_dependency_1"
  input: "gradients/sub_23_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_135_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_4_grad/Sign"
  op: "Sign"
  input: "sub_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_4_grad/mul"
  op: "Mul"
  input: "gradients/AddN_3"
  input: "gradients/Abs_4_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/stack_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_2_grad/Const"
  op: "Const"
  input: "^gradients/mul_106_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_2_grad/Mul"
  op: "Mul"
  input: "sub_13"
  input: "gradients/Square_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_106_grad/tuple/control_dependency"
  input: "gradients/Square_2_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond_14_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_42"
  input: "gradients/futurepos_output_grad/Reshape"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_14_false_3032_grad_5266"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_14_true_3031_grad_5259"
      }
    }
  }
}
node {
  name: "gradients/cond_14_grad/Identity"
  op: "Identity"
  input: "gradients/cond_14_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/strided_slice_59_grad/StridedSliceGrad"
  input: "gradients/strided_slice_60_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/strided_slice_59_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/seki_output_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/seki_output_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_4"
  input: "gradients/seki_output_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_24_grad/BroadcastGradientArgs/s0"
  input: "gradients/sub_24_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/Sum"
  op: "Sum"
  input: "gradients/Square_6_grad/Mul_1"
  input: "gradients/sub_24_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_24_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_24_grad/Sum"
  input: "gradients/sub_24_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/Neg"
  op: "Neg"
  input: "gradients/Square_6_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/Sum_1"
  op: "Sum"
  input: "gradients/sub_24_grad/Neg"
  input: "gradients/sub_24_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_24_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_24_grad/Sum_1"
  input: "gradients/sub_24_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sub_24_grad/Reshape"
  input: "^gradients/sub_24_grad/Reshape_1"
}
node {
  name: "gradients/sub_24_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sub_24_grad/Reshape"
  input: "^gradients/sub_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_24_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_24_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_24_grad/Reshape_1"
  input: "^gradients/sub_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_24_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_88_grad/Mul"
  op: "Mul"
  input: "gradients/mul_153_grad/tuple/control_dependency_1"
  input: "softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_88_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_153_grad/tuple/control_dependency_1"
  input: "strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_88_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_88_grad/Mul"
  input: "^gradients/mul_88_grad/Mul_1"
}
node {
  name: "gradients/mul_88_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_88_grad/Mul"
  input: "^gradients/mul_88_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_88_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_88_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_88_grad/Mul_1"
  input: "^gradients/mul_88_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_88_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_90_grad/Mul"
  op: "Mul"
  input: "gradients/mul_154_grad/tuple/control_dependency_1"
  input: "softmax_cross_entropy_with_logits_1/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_90_grad/Mul_1"
  op: "Mul"
  input: "gradients/mul_154_grad/tuple/control_dependency_1"
  input: "mul_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_90_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_90_grad/Mul"
  input: "^gradients/mul_90_grad/Mul_1"
}
node {
  name: "gradients/mul_90_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_90_grad/Mul"
  input: "^gradients/mul_90_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_90_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_90_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_90_grad/Mul_1"
  input: "^gradients/mul_90_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_90_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_91_grad/tuple/control_dependency_1"
  input: "gradients/softmax_cross_entropy_with_logits_2/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_8_grad/Neg"
  op: "Neg"
  input: "gradients/mul_92_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_92_grad/tuple/control_dependency_1"
  input: "^gradients/sub_8_grad/Neg"
}
node {
  name: "gradients/sub_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_92_grad/tuple/control_dependency_1"
  input: "^gradients/sub_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_92_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_8_grad/Neg"
  input: "^gradients/sub_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_8_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_48_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_48_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_48_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_48_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_48_grad/BroadcastGradientArgs/s0_1"
  input: "gradients/add_48_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_48_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_48_grad/Sum"
  op: "Sum"
  input: "gradients/Select_1_grad/tuple/control_dependency"
  input: "gradients/add_48_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_48_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_48_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_48_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_48_grad/Sum"
  input: "gradients/add_48_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_48_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_1_grad/tuple/control_dependency"
  input: "^gradients/add_48_grad/Reshape"
}
node {
  name: "gradients/add_48_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_48_grad/Reshape"
  input: "^gradients/add_48_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_48_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_48_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_1_grad/tuple/control_dependency"
  input: "^gradients/add_48_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_96_grad/Mul"
  op: "Mul"
  input: "gradients/Select_1_grad/tuple/control_dependency_1"
  input: "Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_96_grad/Mul_1"
  op: "Mul"
  input: "gradients/Select_1_grad/tuple/control_dependency_1"
  input: "mul_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_96_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_96_grad/Mul"
  input: "^gradients/mul_96_grad/Mul_1"
}
node {
  name: "gradients/mul_96_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_96_grad/Mul"
  input: "^gradients/mul_96_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_96_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_96_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_96_grad/Mul_1"
  input: "^gradients/mul_96_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_96_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_19_grad/Neg"
  op: "Neg"
  input: "gradients/mul_123_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_19_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/sub_19_grad/Sum"
  op: "Sum"
  input: "gradients/sub_19_grad/Neg"
  input: "gradients/sub_19_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_19_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_19_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_19_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_19_grad/Sum"
  input: "gradients/sub_19_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_19_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_123_grad/tuple/control_dependency_1"
  input: "^gradients/sub_19_grad/Reshape"
}
node {
  name: "gradients/sub_19_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_123_grad/tuple/control_dependency_1"
  input: "^gradients/sub_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_123_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_19_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_19_grad/Reshape"
  input: "^gradients/sub_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_19_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/mul_130_grad/tuple/control_dependency_1"
  input: "gradients/mul_129_grad/tuple/control_dependency_1"
  input: "gradients/sub_21_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_130_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_3_grad/Sign"
  op: "Sign"
  input: "sub_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_3_grad/mul"
  op: "Mul"
  input: "gradients/AddN_5"
  input: "gradients/Abs_3_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_22_grad/Neg"
  op: "Neg"
  input: "gradients/Abs_4_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_22_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Abs_4_grad/mul"
  input: "^gradients/sub_22_grad/Neg"
}
node {
  name: "gradients/sub_22_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Abs_4_grad/mul"
  input: "^gradients/sub_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Abs_4_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_22_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_22_grad/Neg"
  input: "^gradients/sub_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_22_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/stack_4_grad/tuple/control_dependency"
  input: "gradients/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_4_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ownership_output_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/ownership_output_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_6"
  input: "gradients/ownership_output_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_13_grad/Neg"
  op: "Neg"
  input: "gradients/Square_2_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Square_2_grad/Mul_1"
  input: "^gradients/sub_13_grad/Neg"
}
node {
  name: "gradients/sub_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Square_2_grad/Mul_1"
  input: "^gradients/sub_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_13_grad/Neg"
  input: "^gradients/sub_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_13_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_33_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/Reshape_33_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_24_grad/tuple/control_dependency_1"
  input: "gradients/Reshape_33_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_88_grad/tuple/control_dependency_1"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_90_grad/tuple/control_dependency_1"
  input: "gradients/softmax_cross_entropy_with_logits_1/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "softmax_cross_entropy_with_logits_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_2/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_2_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_2_grad/ExpandDims"
  input: "softmax_cross_entropy_with_logits_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_with_logits_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_with_logits_2_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_2/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_2_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_2_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_with_logits_2_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_with_logits_2_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_2_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_2_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_2_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_2_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_with_logits_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_2_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_8_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_3/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_94_grad/Mul"
  op: "Mul"
  input: "gradients/add_48_grad/tuple/control_dependency_1"
  input: "sub_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_94_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_94_grad/Sum"
  op: "Sum"
  input: "gradients/mul_94_grad/Mul"
  input: "gradients/mul_94_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_94_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_94_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_94_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_94_grad/Sum"
  input: "gradients/mul_94_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_94_grad/Mul_1"
  op: "Mul"
  input: "mul_94/x"
  input: "gradients/add_48_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_94_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_94_grad/Mul_1"
  input: "^gradients/mul_94_grad/Reshape"
}
node {
  name: "gradients/mul_94_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_94_grad/Reshape"
  input: "^gradients/mul_94_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_94_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_94_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_94_grad/Mul_1"
  input: "^gradients/mul_94_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_94_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_95_grad/Mul"
  op: "Mul"
  input: "gradients/mul_96_grad/tuple/control_dependency"
  input: "Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_95_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_95_grad/Sum"
  op: "Sum"
  input: "gradients/mul_95_grad/Mul"
  input: "gradients/mul_95_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_95_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_95_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_95_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_95_grad/Sum"
  input: "gradients/mul_95_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_95_grad/Mul_1"
  op: "Mul"
  input: "mul_95/x"
  input: "gradients/mul_96_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_95_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_95_grad/Mul_1"
  input: "^gradients/mul_95_grad/Reshape"
}
node {
  name: "gradients/mul_95_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_95_grad/Reshape"
  input: "^gradients/mul_95_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_95_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_95_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_95_grad/Mul_1"
  input: "^gradients/mul_95_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_95_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/mul_125_grad/tuple/control_dependency_1"
  input: "gradients/mul_124_grad/tuple/control_dependency_1"
  input: "gradients/sub_19_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_125_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_2_grad/Sign"
  op: "Sign"
  input: "sub_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_2_grad/mul"
  op: "Mul"
  input: "gradients/AddN_7"
  input: "gradients/Abs_2_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_20_grad/Neg"
  op: "Neg"
  input: "gradients/Abs_3_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_20_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Abs_3_grad/mul"
  input: "^gradients/sub_20_grad/Neg"
}
node {
  name: "gradients/sub_20_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Abs_3_grad/mul"
  input: "^gradients/sub_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Abs_3_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_20_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_20_grad/Neg"
  input: "^gradients/sub_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_20_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_85_grad/Mul"
  op: "Mul"
  input: "gradients/sub_22_grad/tuple/control_dependency_1"
  input: "mul_85/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_85_grad/Mul_1"
  op: "Mul"
  input: "Softplus_1"
  input: "gradients/sub_22_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_85_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_85_grad/Sum"
  op: "Sum"
  input: "gradients/mul_85_grad/Mul_1"
  input: "gradients/mul_85_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_85_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_85_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_85_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_85_grad/Sum"
  input: "gradients/mul_85_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_85_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_85_grad/Mul"
  input: "^gradients/mul_85_grad/Reshape"
}
node {
  name: "gradients/mul_85_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_85_grad/Mul"
  input: "^gradients/mul_85_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_85_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_85_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_85_grad/Reshape"
  input: "^gradients/mul_85_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_85_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/scoring_output_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/scoring_output_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_13_grad/tuple/control_dependency_1"
  input: "gradients/scoring_output_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond_13_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_41"
  input: "gradients/cond_14_grad/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_13_false_3022_grad_5401"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_13_true_3021_grad_5394"
      }
    }
  }
}
node {
  name: "gradients/cond_13_grad/Identity"
  op: "Identity"
  input: "gradients/cond_13_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond_17_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_45"
  input: "gradients/seki_output_grad/Reshape"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_17_false_3090_grad_5415"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_17_true_3089_grad_5408"
      }
    }
  }
}
node {
  name: "gradients/cond_17_grad/Identity"
  op: "Identity"
  input: "gradients/cond_17_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_18_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/Reshape_33_grad/Reshape"
  input: "gradients/Sum_18_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_18_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_18_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_18_grad/Reshape"
  input: "gradients/Sum_18_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims"
  input: "softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_with_logits/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_with_logits_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_with_logits_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_with_logits_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "softmax_cross_entropy_with_logits_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_1/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_1_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_1_grad/ExpandDims"
  input: "softmax_cross_entropy_with_logits_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_with_logits_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_with_logits_1_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_1/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_1_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_1_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_with_logits_1_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_with_logits_1_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_1_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_1_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_1_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_with_logits_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_1_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_2_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "softmax_cross_entropy_with_logits_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_3/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_3_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_3_grad/ExpandDims"
  input: "softmax_cross_entropy_with_logits_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_with_logits_3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_with_logits_3_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_with_logits_3/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_3_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_with_logits_3_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_with_logits_3_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_with_logits_3_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_3_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_3_grad/mul"
  input: "^gradients/softmax_cross_entropy_with_logits_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_3_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_with_logits_3_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_with_logits_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_3_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_10_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sub_10_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_10_grad/BroadcastGradientArgs/s0"
  input: "gradients/sub_10_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_10_grad/Neg"
  op: "Neg"
  input: "gradients/mul_94_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_10_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sub_10_grad/Sum"
  op: "Sum"
  input: "gradients/sub_10_grad/Neg"
  input: "gradients/sub_10_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_10_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_10_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_10_grad/Sum"
  input: "gradients/sub_10_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_94_grad/tuple/control_dependency_1"
  input: "^gradients/sub_10_grad/Reshape"
}
node {
  name: "gradients/sub_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_94_grad/tuple/control_dependency_1"
  input: "^gradients/sub_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_94_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_10_grad/Reshape"
  input: "^gradients/sub_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_10_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sub_18_grad/Neg"
  op: "Neg"
  input: "gradients/Abs_2_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Abs_2_grad/mul"
  input: "^gradients/sub_18_grad/Neg"
}
node {
  name: "gradients/sub_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Abs_2_grad/mul"
  input: "^gradients/sub_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Abs_2_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_18_grad/Neg"
  input: "^gradients/sub_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_18_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_84_grad/Mul"
  op: "Mul"
  input: "gradients/sub_20_grad/tuple/control_dependency_1"
  input: "mul_84/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_84_grad/Mul_1"
  op: "Mul"
  input: "strided_slice_53"
  input: "gradients/sub_20_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_84_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_84_grad/Sum"
  op: "Sum"
  input: "gradients/mul_84_grad/Mul_1"
  input: "gradients/mul_84_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_84_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_84_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_84_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_84_grad/Sum"
  input: "gradients/mul_84_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_84_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_84_grad/Mul"
  input: "^gradients/mul_84_grad/Reshape"
}
node {
  name: "gradients/mul_84_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_84_grad/Mul"
  input: "^gradients/mul_84_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_84_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_84_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_84_grad/Reshape"
  input: "^gradients/mul_84_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_84_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Softplus_1_grad/Sigmoid"
  op: "Sigmoid"
  input: "strided_slice_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softplus_1_grad/mul"
  op: "Mul"
  input: "gradients/mul_85_grad/tuple/control_dependency"
  input: "gradients/Softplus_1_grad/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond_8_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_36"
  input: "gradients/ownership_output_grad/Reshape"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_8_false_2916_grad_5494"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_8_true_2915_grad_5487"
      }
    }
  }
}
node {
  name: "gradients/cond_8_grad/Identity"
  op: "Identity"
  input: "gradients/cond_8_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_121_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000J\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_121_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 842
      }
    }
  }
}
node {
  name: "gradients/mul_121_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_121_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_121_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_121_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_18_grad/Tile"
  input: "mul_121/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_121_grad/Mul_1"
  op: "Mul"
  input: "Softmax_1"
  input: "gradients/Sum_18_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_121_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_121_grad/Sum"
  op: "Sum"
  input: "gradients/mul_121_grad/Mul_1"
  input: "gradients/mul_121_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_121_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 842
      }
    }
  }
}
node {
  name: "gradients/mul_121_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_121_grad/Sum"
  input: "gradients/mul_121_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_121_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_121_grad/Mul"
  input: "^gradients/mul_121_grad/Reshape"
}
node {
  name: "gradients/mul_121_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_121_grad/Mul"
  input: "^gradients/mul_121_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_121_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_121_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_121_grad/Reshape"
  input: "^gradients/mul_121_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_121_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_1_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
        }
      }
    }
  }
}
node {
  name: "gradients/value_output_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/value_output_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_2/Reshape_grad/Reshape"
  input: "gradients/value_output_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_with_logits_3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_with_logits_3_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_with_logits_3/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/mul_96_grad/tuple/control_dependency_1"
  input: "gradients/mul_95_grad/tuple/control_dependency_1"
  input: "gradients/sub_10_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_96_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_1_grad/Sign"
  op: "Sign"
  input: "sub_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_1_grad/mul"
  op: "Mul"
  input: "gradients/AddN_8"
  input: "gradients/Abs_1_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_82_grad/Mul"
  op: "Mul"
  input: "gradients/sub_18_grad/tuple/control_dependency_1"
  input: "mul_82/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_82_grad/Mul_1"
  op: "Mul"
  input: "strided_slice_51"
  input: "gradients/sub_18_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_82_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/mul_82_grad/Sum"
  op: "Sum"
  input: "gradients/mul_82_grad/Mul_1"
  input: "gradients/mul_82_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_82_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_82_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_82_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_82_grad/Sum"
  input: "gradients/mul_82_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_82_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_82_grad/Mul"
  input: "^gradients/mul_82_grad/Reshape"
}
node {
  name: "gradients/mul_82_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_82_grad/Mul"
  input: "^gradients/mul_82_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_82_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_82_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_82_grad/Reshape"
  input: "^gradients/mul_82_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_82_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_53_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_53_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_53_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_53_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_53_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_53_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_53_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_53_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_53_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_53_grad/StridedSliceGrad/strides"
  input: "gradients/mul_84_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/strided_slice_54_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_54_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_54_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_54_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_54_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_54_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_54_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_54_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_54_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_54_grad/StridedSliceGrad/strides"
  input: "gradients/Softplus_1_grad/mul"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/cond_11_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_39"
  input: "gradients/scoring_output_grad/Reshape"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_11_false_2974_grad_5552"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_11_true_2973_grad_5545"
      }
    }
  }
}
node {
  name: "gradients/cond_11_grad/Identity"
  op: "Identity"
  input: "gradients/cond_11_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond_12_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_43"
  input: "gradients/cond_13_grad/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_12_false_3012_grad_5567"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_12_true_3011_grad_5559"
      }
    }
  }
}
node {
  name: "gradients/cond_12_grad/Identity"
  op: "Identity"
  input: "gradients/cond_12_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond_16_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_44"
  input: "gradients/cond_17_grad/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_16_false_3080_grad_5581"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_16_true_3079_grad_5574"
      }
    }
  }
}
node {
  name: "gradients/cond_16_grad/Identity"
  op: "Identity"
  input: "gradients/cond_16_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/mul_137_grad/tuple/control_dependency"
  input: "gradients/mul_121_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_137_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softmax_1_grad/mul"
  op: "Mul"
  input: "gradients/AddN_9"
  input: "Softmax_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softmax_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Softmax_1_grad/Sum"
  op: "Sum"
  input: "gradients/Softmax_1_grad/mul"
  input: "gradients/Softmax_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Softmax_1_grad/sub"
  op: "Sub"
  input: "gradients/AddN_9"
  input: "gradients/Softmax_1_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Softmax_1_grad/mul_1"
  op: "Mul"
  input: "gradients/Softmax_1_grad/sub"
  input: "Softmax_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_57_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_57_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_57_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_57_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_57_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_57_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_57_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_57_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_57_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_57_grad/StridedSliceGrad/strides"
  input: "gradients/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "gradients/strided_slice_58_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_58_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000j\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_58_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_58_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_58_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_58_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_58_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_58_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_58_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_58_grad/StridedSliceGrad/strides"
  input: "gradients/softmax_cross_entropy_with_logits_1/Reshape_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "gradients/add_36_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_36_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/add_36_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_36_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_36_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_36_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_36_grad/Sum"
  op: "Sum"
  input: "gradients/value_output_grad/Reshape"
  input: "gradients/add_36_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_36_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/add_36_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_36_grad/Sum"
  input: "gradients/add_36_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_36_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_36_grad/Reshape"
  input: "^gradients/value_output_grad/Reshape"
}
node {
  name: "gradients/add_36_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/value_output_grad/Reshape"
  input: "^gradients/add_36_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/value_output_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_36_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_36_grad/Reshape"
  input: "^gradients/add_36_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_36_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/stack_2_grad/unstack"
  op: "Unpack"
  input: "gradients/softmax_cross_entropy_with_logits_3/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "gradients/stack_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/stack_2_grad/unstack"
}
node {
  name: "gradients/stack_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/stack_2_grad/unstack"
  input: "^gradients/stack_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_2_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/stack_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/stack_2_grad/unstack:1"
  input: "^gradients/stack_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_2_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/stack_2_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/stack_2_grad/unstack:2"
  input: "^gradients/stack_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_2_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_9_grad/Neg"
  op: "Neg"
  input: "gradients/Abs_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Abs_1_grad/mul"
  input: "^gradients/sub_9_grad/Neg"
}
node {
  name: "gradients/sub_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Abs_1_grad/mul"
  input: "^gradients/sub_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Abs_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_9_grad/Neg"
  input: "^gradients/sub_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_9_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_51_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_51_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_51_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_51_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_51_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_51_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_51_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_51_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_51_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_51_grad/StridedSliceGrad/strides"
  input: "gradients/mul_82_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/cond_7_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_35"
  input: "gradients/cond_8_grad/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_7_false_2906_grad_5638"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_7_true_2905_grad_5631"
      }
    }
  }
}
node {
  name: "gradients/cond_7_grad/Identity"
  op: "Identity"
  input: "gradients/cond_7_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_78_grad/Mul"
  op: "Mul"
  input: "gradients/cond_12_grad/Identity"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_78_grad/Mul_1"
  op: "Mul"
  input: "Conv2D_21"
  input: "gradients/cond_12_grad/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_78_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_78_grad/Sum"
  op: "Sum"
  input: "gradients/mul_78_grad/Mul_1"
  input: "gradients/mul_78_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_78_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_78_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_78_grad/Sum"
  input: "gradients/mul_78_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_78_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_78_grad/Mul"
  input: "^gradients/mul_78_grad/Reshape"
}
node {
  name: "gradients/mul_78_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_78_grad/Mul"
  input: "^gradients/mul_78_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_78_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_78_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_78_grad/Reshape"
  input: "^gradients/mul_78_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_78_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/softmax_cross_entropy_with_logits_5/Reshape_grad/Reshape"
  input: "gradients/Softmax_2_grad/mul_1"
  input: "gradients/Softmax_1_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_with_logits_5/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
        }
      }
    }
  }
}
node {
  name: "gradients/scorebelief_output_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000J\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/scorebelief_output_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_10"
  input: "gradients/scorebelief_output_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/strided_slice_57_grad/StridedSliceGrad"
  input: "gradients/strided_slice_58_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/strided_slice_57_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 362
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/policy_output_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/policy_output_grad/mod"
  op: "FloorMod"
  input: "policy_output/axis"
  input: "gradients/policy_output_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/policy_output_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000i\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/policy_output_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/policy_output_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/policy_output_grad/mod"
  input: "gradients/policy_output_grad/Shape"
  input: "gradients/policy_output_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/policy_output_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_11"
  input: "gradients/policy_output_grad/ConcatOffset"
  input: "gradients/policy_output_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 361
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/policy_output_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_11"
  input: "gradients/policy_output_grad/ConcatOffset:1"
  input: "gradients/policy_output_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/policy_output_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/policy_output_grad/Slice"
  input: "^gradients/policy_output_grad/Slice_1"
}
node {
  name: "gradients/policy_output_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/policy_output_grad/Slice"
  input: "^gradients/policy_output_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/policy_output_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 361
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/policy_output_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/policy_output_grad/Slice_1"
  input: "^gradients/policy_output_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/policy_output_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_36_grad/tuple/control_dependency"
  input: "MatMul_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "Relu_18"
  input: "gradients/add_36_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_2_grad/MatMul"
  input: "^gradients/MatMul_2_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_2_grad/MatMul"
  input: "^gradients/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_2_grad/MatMul_1"
  input: "^gradients/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_47_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_47_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_47_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_47_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_47_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_47_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_47_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_47_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_47_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_47_grad/StridedSliceGrad/strides"
  input: "gradients/stack_2_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/strided_slice_48_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_48_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_48_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_48_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_48_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_48_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_48_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_48_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_48_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_48_grad/StridedSliceGrad/strides"
  input: "gradients/stack_2_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/strided_slice_49_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_49_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_49_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_49_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_49_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_49_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_49_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_49_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_49_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_49_grad/StridedSliceGrad/strides"
  input: "gradients/stack_2_grad/tuple/control_dependency_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/mul_81_grad/Mul"
  op: "Mul"
  input: "gradients/sub_9_grad/tuple/control_dependency_1"
  input: "mul_81/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_81_grad/Mul_1"
  op: "Mul"
  input: "strided_slice_50"
  input: "gradients/sub_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_81_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_81_grad/Sum"
  op: "Sum"
  input: "gradients/mul_81_grad/Mul_1"
  input: "gradients/mul_81_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_81_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_81_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_81_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_81_grad/Sum"
  input: "gradients/mul_81_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_81_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_81_grad/Mul"
  input: "^gradients/mul_81_grad/Reshape"
}
node {
  name: "gradients/mul_81_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_81_grad/Mul"
  input: "^gradients/mul_81_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_81_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_81_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_81_grad/Reshape"
  input: "^gradients/mul_81_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_81_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cond_10_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_38"
  input: "gradients/cond_11_grad/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_10_false_2964_grad_5705"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_10_true_2963_grad_5698"
      }
    }
  }
}
node {
  name: "gradients/cond_10_grad/Identity"
  op: "Identity"
  input: "gradients/cond_10_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_21_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_14"
  input: "Conv2D_21/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_21_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_21_grad/ShapeN"
  input: "Conv2D_21/ReadVariableOp"
  input: "gradients/mul_78_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_21_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_14"
  input: "gradients/Conv2D_21_grad/ShapeN:1"
  input: "gradients/mul_78_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_21_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_21_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_21_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_21_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_21_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_21_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_21_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_21_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_21_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond_15_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_46"
  input: "gradients/cond_16_grad/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_15_false_3070_grad_5726"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_15_true_3069_grad_5718"
      }
    }
  }
}
node {
  name: "gradients/cond_15_grad/Identity"
  op: "Identity"
  input: "gradients/cond_15_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_72_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000J\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_72_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_72_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_72_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_72_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_72_grad/Mul"
  op: "Mul"
  input: "gradients/scorebelief_output_grad/Reshape"
  input: "Reshape_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_72_grad/Mul_1"
  op: "Mul"
  input: "Tensordot_6"
  input: "gradients/scorebelief_output_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_72_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_72_grad/Sum"
  op: "Sum"
  input: "gradients/mul_72_grad/Mul_1"
  input: "gradients/mul_72_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_72_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_72_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_72_grad/Sum"
  input: "gradients/mul_72_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_72_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_72_grad/Mul"
  input: "^gradients/mul_72_grad/Reshape"
}
node {
  name: "gradients/mul_72_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_72_grad/Mul"
  input: "^gradients/mul_72_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_72_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_72_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_72_grad/Reshape"
  input: "^gradients/mul_72_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_72_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_13_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/policy_output_grad/tuple/control_dependency"
  input: "gradients/Reshape_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_14_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/policy_output_grad/tuple/control_dependency_1"
  input: "gradients/Reshape_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/L2Loss_63_grad/mul"
  input: "gradients/add_36_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_63_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/strided_slice_52_grad/StridedSliceGrad"
  input: "gradients/strided_slice_53_grad/StridedSliceGrad"
  input: "gradients/strided_slice_54_grad/StridedSliceGrad"
  input: "gradients/strided_slice_51_grad/StridedSliceGrad"
  input: "gradients/strided_slice_47_grad/StridedSliceGrad"
  input: "gradients/strided_slice_48_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/strided_slice_52_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/miscvalues_output_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/miscvalues_output_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_13"
  input: "gradients/miscvalues_output_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_50_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_50_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_50_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_50_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_50_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_50_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_50_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_50_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_50_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_50_grad/StridedSliceGrad/strides"
  input: "gradients/mul_81_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/cond_6_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_37"
  input: "gradients/cond_7_grad/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_6_false_2896_grad_5767"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_6_true_2895_grad_5759"
      }
    }
  }
}
node {
  name: "gradients/cond_6_grad/Identity"
  op: "Identity"
  input: "gradients/cond_6_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_80_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_80_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_80_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_80_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_80_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_80_grad/Mul"
  op: "Mul"
  input: "gradients/cond_15_grad/Identity"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_80_grad/Mul_1"
  op: "Mul"
  input: "Conv2D_22"
  input: "gradients/cond_15_grad/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_80_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_80_grad/Sum"
  op: "Sum"
  input: "gradients/mul_80_grad/Mul_1"
  input: "gradients/mul_80_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_80_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_80_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_80_grad/Sum"
  input: "gradients/mul_80_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_80_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_80_grad/Mul"
  input: "^gradients/mul_80_grad/Reshape"
}
node {
  name: "gradients/mul_80_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_80_grad/Mul"
  input: "^gradients/mul_80_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_80_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_80_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_80_grad/Reshape"
  input: "^gradients/mul_80_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_80_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\245\001\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Tensordot_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_72_grad/tuple/control_dependency"
  input: "gradients/Tensordot_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 107776
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_23_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_23_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_72_grad/tuple/control_dependency_1"
  input: "gradients/Reshape_23_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Tensordot_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/Reshape_14_grad/Reshape"
  input: "gradients/Tensordot_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/L2Loss_31_grad/mul"
  input: "gradients/MatMul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_31_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_37_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_37_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "gradients/add_37_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_37_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_37_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_37_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_37_grad/Sum"
  op: "Sum"
  input: "gradients/miscvalues_output_grad/Reshape"
  input: "gradients/add_37_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_37_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "gradients/add_37_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_37_grad/Sum"
  input: "gradients/add_37_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_37_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_37_grad/Reshape"
  input: "^gradients/miscvalues_output_grad/Reshape"
}
node {
  name: "gradients/add_37_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/miscvalues_output_grad/Reshape"
  input: "^gradients/add_37_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/miscvalues_output_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_37_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_37_grad/Reshape"
  input: "^gradients/add_37_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_37_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/strided_slice_56_grad/StridedSliceGrad"
  input: "gradients/strided_slice_55_grad/StridedSliceGrad"
  input: "gradients/strided_slice_49_grad/StridedSliceGrad"
  input: "gradients/strided_slice_50_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/strided_slice_56_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/moremiscvalues_output_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/moremiscvalues_output_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_15"
  input: "gradients/moremiscvalues_output_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_74_grad/Mul"
  op: "Mul"
  input: "gradients/cond_6_grad/Identity"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_74_grad/Mul_1"
  op: "Mul"
  input: "gradients/cond_6_grad/Identity"
  input: "Conv2D_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_74_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_74_grad/Mul"
  input: "^gradients/mul_74_grad/Mul_1"
}
node {
  name: "gradients/mul_74_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_74_grad/Mul"
  input: "^gradients/mul_74_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_74_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_74_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_74_grad/Mul_1"
  input: "^gradients/mul_74_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_74_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond_9_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_40"
  input: "gradients/cond_10_grad/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_9_false_2954_grad_5818"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_9_true_2953_grad_5810"
      }
    }
  }
}
node {
  name: "gradients/cond_9_grad/Identity"
  op: "Identity"
  input: "gradients/cond_9_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/L2Loss_42_grad/mul"
  input: "gradients/Conv2D_21_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_42_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_22_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_14"
  input: "Conv2D_22/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_22_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_22_grad/ShapeN"
  input: "Conv2D_22/ReadVariableOp"
  input: "gradients/mul_80_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_22_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_14"
  input: "gradients/Conv2D_22_grad/ShapeN:1"
  input: "gradients/mul_80_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_22_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_22_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_22_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_22_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_22_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_22_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_22_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_22_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_22_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_6/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/Tensordot_6_grad/Reshape"
  input: "Tensordot_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 107776
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Tensordot_6/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Tensordot_6/Reshape"
  input: "gradients/Tensordot_6_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Tensordot_6/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Tensordot_6/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_6/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/Tensordot_6/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Tensordot_6/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_6/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 107776
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_6/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Tensordot_6/MatMul_grad/MatMul_1"
  input: "^gradients/Tensordot_6/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_6/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/Select_grad/Select"
  op: "Select"
  input: "Greater_1"
  input: "gradients/Reshape_23_grad/Reshape"
  input: "gradients/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_grad/Select_1"
  op: "Select"
  input: "Greater_1"
  input: "gradients/Select_grad/zeros_like"
  input: "gradients/Reshape_23_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_grad/Select"
  input: "^gradients/Select_grad/Select_1"
}
node {
  name: "gradients/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Select_grad/Select"
  input: "^gradients/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_grad/Select_1"
  input: "^gradients/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond_5_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_32"
  input: "gradients/Reshape_13_grad/Reshape"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_5_false_2531_grad_5848"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_5_true_2530_grad_5841"
      }
    }
  }
}
node {
  name: "gradients/cond_5_grad/Identity"
  op: "Identity"
  input: "gradients/cond_5_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_5/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/Tensordot_5_grad/Reshape"
  input: "Tensordot_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Tensordot_5/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Tensordot_5/Reshape"
  input: "gradients/Tensordot_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Tensordot_5/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Tensordot_5/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_5/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/Tensordot_5/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Tensordot_5/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_5/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_5/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_5/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Tensordot_5/MatMul_grad/MatMul_1"
  input: "^gradients/Tensordot_5/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_5/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_37_grad/tuple/control_dependency"
  input: "MatMul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "Relu_18"
  input: "gradients/add_37_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_3_grad/MatMul"
  input: "^gradients/MatMul_3_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_3_grad/MatMul"
  input: "^gradients/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_3_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_3_grad/MatMul_1"
  input: "^gradients/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_3_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_38_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_38_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "gradients/add_38_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_38_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_38_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_38_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_38_grad/Sum"
  op: "Sum"
  input: "gradients/moremiscvalues_output_grad/Reshape"
  input: "gradients/add_38_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_38_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "gradients/add_38_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_38_grad/Sum"
  input: "gradients/add_38_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_38_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_38_grad/Reshape"
  input: "^gradients/moremiscvalues_output_grad/Reshape"
}
node {
  name: "gradients/add_38_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/moremiscvalues_output_grad/Reshape"
  input: "^gradients/add_38_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/moremiscvalues_output_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_38_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_38_grad/Reshape"
  input: "^gradients/add_38_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_38_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_19_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_17"
  input: "Conv2D_19/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_19_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_19_grad/ShapeN"
  input: "Conv2D_19/ReadVariableOp"
  input: "gradients/mul_74_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_19_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_17"
  input: "gradients/Conv2D_19_grad/ShapeN:1"
  input: "gradients/mul_74_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_19_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_19_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_19_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_19_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_19_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_19_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_19_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_19_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_19_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_76_grad/Mul"
  op: "Mul"
  input: "gradients/cond_9_grad/Identity"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_76_grad/Mul_1"
  op: "Mul"
  input: "gradients/cond_9_grad/Identity"
  input: "Conv2D_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_76_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_76_grad/Mul"
  input: "^gradients/mul_76_grad/Mul_1"
}
node {
  name: "gradients/mul_76_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_76_grad/Mul"
  input: "^gradients/mul_76_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_76_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_76_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_76_grad/Mul_1"
  input: "^gradients/mul_76_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_76_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_6/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000J\003\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Tensordot_6/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/Tensordot_6/MatMul_grad/tuple/control_dependency"
  input: "gradients/Tensordot_6/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_44_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_44_grad/Sum"
  op: "Sum"
  input: "gradients/Select_grad/tuple/control_dependency"
  input: "gradients/add_44_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_44_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_44_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_44_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_44_grad/Sum"
  input: "gradients/add_44_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_44_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Select_grad/tuple/control_dependency"
  input: "^gradients/add_44_grad/Reshape"
}
node {
  name: "gradients/add_44_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_44_grad/Reshape"
  input: "^gradients/add_44_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_44_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_44_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Select_grad/tuple/control_dependency"
  input: "^gradients/add_44_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_13_grad/Shape"
  input: "gradients/truediv_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/Select_grad/tuple/control_dependency_1"
  input: "add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_13_grad/RealDiv"
  input: "gradients/truediv_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_13_grad/Sum"
  input: "gradients/truediv_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/Neg"
  op: "Neg"
  input: "truediv_13/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_13_grad/Neg"
  input: "add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_13_grad/RealDiv_1"
  input: "add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/mul"
  op: "Mul"
  input: "gradients/Select_grad/tuple/control_dependency_1"
  input: "gradients/truediv_13_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_13_grad/mul"
  input: "gradients/truediv_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_13_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_13_grad/Sum_1"
  input: "gradients/truediv_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_13_grad/Reshape"
  input: "^gradients/truediv_13_grad/Reshape_1"
}
node {
  name: "gradients/truediv_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_13_grad/Reshape"
  input: "^gradients/truediv_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_13_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_13_grad/Reshape_1"
  input: "^gradients/truediv_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_13_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_5/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Tensordot_5/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/Tensordot_5/MatMul_grad/tuple/control_dependency"
  input: "gradients/Tensordot_5/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/L2Loss_64_grad/mul"
  input: "gradients/add_37_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_64_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mmvmul_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_38_grad/tuple/control_dependency"
  input: "mmvmul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/mmvmul_grad/MatMul_1"
  op: "MatMul"
  input: "Relu_18"
  input: "gradients/add_38_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mmvmul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mmvmul_grad/MatMul"
  input: "^gradients/mmvmul_grad/MatMul_1"
}
node {
  name: "gradients/mmvmul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mmvmul_grad/MatMul"
  input: "^gradients/mmvmul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mmvmul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mmvmul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mmvmul_grad/MatMul_1"
  input: "^gradients/mmvmul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mmvmul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_20_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_17"
  input: "Conv2D_20/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_20_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_20_grad/ShapeN"
  input: "Conv2D_20/ReadVariableOp"
  input: "gradients/mul_76_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_20_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_17"
  input: "gradients/Conv2D_20_grad/ShapeN:1"
  input: "gradients/mul_76_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_20_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_20_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_20_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_20_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_20_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_20_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_20_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_20_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_20_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/L2Loss_43_grad/mul"
  input: "gradients/Conv2D_22_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_43_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_19_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Tensordot_6/Reshape_grad/Reshape"
  input: "Relu_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/L2Loss_38_grad/mul"
  input: "gradients/Tensordot_6/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_38_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "add_43"
  input: "^gradients/add_44_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Log_grad/mul"
  op: "Mul"
  input: "gradients/add_44_grad/tuple/control_dependency_1"
  input: "gradients/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_46_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_46_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_13_grad/tuple/control_dependency_1"
  input: "gradients/add_46_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_46_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_46_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_46_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_46_grad/Sum"
  input: "gradients/add_46_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_46_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_46_grad/Reshape"
  input: "^gradients/truediv_13_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/add_46_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_46_grad/Reshape"
  input: "^gradients/add_46_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_46_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_46_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_13_grad/tuple/control_dependency_1"
  input: "^gradients/add_46_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_13_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cond_4_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_31"
  input: "gradients/cond_5_grad/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_4_false_2521_grad_5939"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_4_true_2520_grad_5932"
      }
    }
  }
}
node {
  name: "gradients/cond_4_grad/Identity"
  op: "Identity"
  input: "gradients/cond_4_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/L2Loss_28_grad/mul"
  input: "gradients/Tensordot_5/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_28_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/L2Loss_32_grad/mul"
  input: "gradients/MatMul_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_32_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/MatMul_2_grad/tuple/control_dependency"
  input: "gradients/MatMul_3_grad/tuple/control_dependency"
  input: "gradients/mmvmul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_18_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_22"
  input: "Relu_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/L2Loss_65_grad/mul"
  input: "gradients/add_38_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_65_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/L2Loss_40_grad/mul"
  input: "gradients/Conv2D_19_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_40_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_41_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Relu_19_grad/ReluGrad"
}
node {
  name: "gradients/add_41_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Relu_19_grad/ReluGrad"
  input: "^gradients/add_41_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_19_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_41_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Relu_19_grad/ReluGrad"
  input: "^gradients/add_41_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_19_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_43_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_43_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_43_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_43_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_43_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_43_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_43_grad/Sum"
  op: "Sum"
  input: "gradients/Log_grad/mul"
  input: "gradients/add_43_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_43_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_43_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_43_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_43_grad/Sum"
  input: "gradients/add_43_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_43_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Log_grad/mul"
  input: "^gradients/add_43_grad/Reshape"
}
node {
  name: "gradients/add_43_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Log_grad/mul"
  input: "^gradients/add_43_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Log_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_43_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_43_grad/Reshape"
  input: "^gradients/add_43_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_43_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Log_1_grad/Reciprocal"
  op: "Reciprocal"
  input: "add_45"
  input: "^gradients/add_46_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Log_1_grad/mul"
  op: "Mul"
  input: "gradients/add_46_grad/tuple/control_dependency_1"
  input: "gradients/Log_1_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_35_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_35_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/add_35_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_35_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_35_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_35_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_35_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_18_grad/ReluGrad"
  input: "gradients/add_35_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_35_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/add_35_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_35_grad/Sum"
  input: "gradients/add_35_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_35_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Relu_18_grad/ReluGrad"
  input: "^gradients/add_35_grad/Reshape"
}
node {
  name: "gradients/add_35_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Relu_18_grad/ReluGrad"
  input: "^gradients/add_35_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_18_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_35_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_35_grad/Reshape"
  input: "^gradients/add_35_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_35_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/L2Loss_33_grad/mul"
  input: "gradients/mmvmul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_33_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/L2Loss_41_grad/mul"
  input: "gradients/Conv2D_20_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_41_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000J\003\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_40_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_40_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/Sum"
  op: "Sum"
  input: "gradients/add_41_grad/tuple/control_dependency"
  input: "gradients/add_40_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_40_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_40_grad/Sum"
  input: "gradients/add_40_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/Sum_1"
  op: "Sum"
  input: "gradients/add_41_grad/tuple/control_dependency"
  input: "gradients/add_40_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_40_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000J\003\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_40_grad/Sum_1"
  input: "gradients/add_40_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_40_grad/Reshape"
  input: "^gradients/add_40_grad/Reshape_1"
}
node {
  name: "gradients/add_40_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_40_grad/Reshape"
  input: "^gradients/add_40_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_40_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_40_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_40_grad/Reshape_1"
  input: "^gradients/add_40_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_40_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_22_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\245\001\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_22_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_41_grad/tuple/control_dependency_1"
  input: "gradients/Reshape_22_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 107776
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_45_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_45_grad/Sum"
  op: "Sum"
  input: "gradients/Log_1_grad/mul"
  input: "gradients/add_45_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_45_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_45_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_45_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_45_grad/Sum"
  input: "gradients/add_45_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_45_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Log_1_grad/mul"
  input: "^gradients/add_45_grad/Reshape"
}
node {
  name: "gradients/add_45_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Log_1_grad/mul"
  input: "^gradients/add_45_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Log_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_45_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_45_grad/Reshape"
  input: "^gradients/add_45_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_45_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cond_3_grad/StatelessIf"
  op: "StatelessIf"
  input: "strided_slice_33"
  input: "gradients/cond_4_grad/Identity"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "cond_3_false_2511_grad_6010"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "cond_3_true_2510_grad_6002"
      }
    }
  }
}
node {
  name: "gradients/cond_3_grad/Identity"
  op: "Identity"
  input: "gradients/cond_3_grad/StatelessIf"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_35_grad/tuple/control_dependency"
  input: "MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "concat_3"
  input: "gradients/add_35_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_1_grad/MatMul"
  input: "^gradients/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_1_grad/MatMul"
  input: "^gradients/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_1_grad/MatMul_1"
  input: "^gradients/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_20_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_20_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_40_grad/tuple/control_dependency"
  input: "gradients/Reshape_20_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_21_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "J\003\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_21_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_40_grad/tuple/control_dependency_1"
  input: "gradients/Reshape_21_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "gradients/Reshape_22_grad/Reshape"
  input: "MatMul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 107776
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_6_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_19"
  input: "gradients/Reshape_22_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_6_grad/MatMul"
  input: "^gradients/MatMul_6_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_6_grad/MatMul"
  input: "^gradients/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_6_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 107776
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_6_grad/MatMul_1"
  input: "^gradients/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_6_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/add_43_grad/tuple/control_dependency"
  input: "gradients/add_45_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Log_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_grad/Sign"
  op: "Sign"
  input: "MatMul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Abs_grad/mul"
  op: "Mul"
  input: "gradients/AddN_27"
  input: "gradients/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_4_grad/Neg"
  op: "Neg"
  input: "gradients/cond_3_grad/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_4_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/sub_4_grad/Sum"
  op: "Sum"
  input: "gradients/sub_4_grad/Neg"
  input: "gradients/sub_4_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sub_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_4_grad/Sum"
  input: "gradients/sub_4_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/cond_3_grad/Identity"
  input: "^gradients/sub_4_grad/Reshape"
}
node {
  name: "gradients/sub_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/cond_3_grad/Identity"
  input: "^gradients/sub_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cond_3_grad/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sub_4_grad/Reshape"
  input: "^gradients/sub_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sub_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/L2Loss_62_grad/mul"
  input: "gradients/add_35_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_62_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_39_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_39_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "gradients/add_39_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_39_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_39_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_39_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_39_grad/Sum"
  op: "Sum"
  input: "gradients/Reshape_20_grad/Reshape"
  input: "gradients/add_39_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_39_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "gradients/add_39_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_39_grad/Sum"
  input: "gradients/add_39_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_39_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Reshape_20_grad/Reshape"
  input: "^gradients/add_39_grad/Reshape"
}
node {
  name: "gradients/add_39_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Reshape_20_grad/Reshape"
  input: "^gradients/add_39_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Reshape_20_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_39_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_39_grad/Reshape"
  input: "^gradients/add_39_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_39_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/Reshape_21_grad/Reshape"
  input: "MatMul_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_18"
  input: "gradients/Reshape_21_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_5_grad/MatMul"
  input: "^gradients/MatMul_5_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_5_grad/MatMul"
  input: "^gradients/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_5_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 842
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_5_grad/MatMul_1"
  input: "^gradients/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_5_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/Square_9_grad/Mul_1"
  input: "gradients/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Square_9_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_8_grad/MatMul"
  op: "MatMul"
  input: "gradients/AddN_29"
  input: "MatMul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_8_grad/MatMul_1"
  op: "MatMul"
  input: "Relu_20"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_8_grad/MatMul"
  input: "^gradients/MatMul_8_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_8_grad/MatMul"
  input: "^gradients/MatMul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_8_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_8_grad/MatMul_1"
  input: "^gradients/MatMul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_8_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_17_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_16"
  input: "Conv2D_17/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_17_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_17_grad/ShapeN"
  input: "Conv2D_17/ReadVariableOp"
  input: "gradients/sub_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_17_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_16"
  input: "gradients/Conv2D_17_grad/ShapeN:1"
  input: "gradients/sub_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_17_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_17_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_17_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_17_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_17_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_17_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/L2Loss_30_grad/mul"
  input: "gradients/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_30_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_39_grad/tuple/control_dependency"
  input: "MatMul_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "concat_3"
  input: "gradients/add_39_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_4_grad/MatMul"
  input: "^gradients/MatMul_4_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_4_grad/MatMul"
  input: "^gradients/MatMul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_4_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_4_grad/MatMul_1"
  input: "^gradients/MatMul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_4_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/L2Loss_36_grad/mul"
  input: "gradients/MatMul_6_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_36_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_20_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/MatMul_8_grad/tuple/control_dependency"
  input: "Relu_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_16_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_17_grad/tuple/control_dependency"
  input: "Relu_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/L2Loss_66_grad/mul"
  input: "gradients/add_39_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_66_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/L2Loss_35_grad/mul"
  input: "gradients/MatMul_5_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_35_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_42_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/add_42_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_20_grad/ReluGrad"
  input: "gradients/add_42_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_42_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 48
      }
    }
  }
}
node {
  name: "gradients/add_42_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_42_grad/Sum"
  input: "gradients/add_42_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_42_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Relu_20_grad/ReluGrad"
  input: "^gradients/add_42_grad/Reshape"
}
node {
  name: "gradients/add_42_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Relu_20_grad/ReluGrad"
  input: "^gradients/add_42_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Relu_20_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_42_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_42_grad/Reshape"
  input: "^gradients/add_42_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_42_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/L2Loss_39_grad/mul"
  input: "gradients/MatMul_8_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_39_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_47_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_47_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_47_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_47_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_47_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_47_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_16_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_47_grad/Mul_1"
  op: "Mul"
  input: "add_33"
  input: "gradients/Relu_16_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_47_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_47_grad/Sum"
  op: "Sum"
  input: "gradients/mul_47_grad/Mul_1"
  input: "gradients/mul_47_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_47_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_47_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_47_grad/Sum"
  input: "gradients/mul_47_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_47_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_47_grad/Mul"
  input: "^gradients/mul_47_grad/Reshape"
}
node {
  name: "gradients/mul_47_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_47_grad/Mul"
  input: "^gradients/mul_47_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_47_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_47_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_47_grad/Reshape"
  input: "^gradients/mul_47_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_47_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/L2Loss_27_grad/mul"
  input: "gradients/Conv2D_17_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_27_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/L2Loss_34_grad/mul"
  input: "gradients/MatMul_4_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_34_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_7_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_42_grad/tuple/control_dependency"
  input: "MatMul_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_7_grad/MatMul_1"
  op: "MatMul"
  input: "concat_3"
  input: "gradients/add_42_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_7_grad/MatMul"
  input: "^gradients/MatMul_7_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_7_grad/MatMul"
  input: "^gradients/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_7_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_7_grad/MatMul_1"
  input: "^gradients/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_7_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_33_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_33_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/add_33_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_33_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_33_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_33_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_33_grad/Sum"
  op: "Sum"
  input: "gradients/mul_47_grad/tuple/control_dependency"
  input: "gradients/add_33_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_33_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/add_33_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_33_grad/Sum"
  input: "gradients/add_33_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_33_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_33_grad/Reshape"
  input: "^gradients/mul_47_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_33_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_47_grad/tuple/control_dependency"
  input: "^gradients/add_33_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_47_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_33_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_33_grad/Reshape"
  input: "^gradients/add_33_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_33_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/MatMul_4_grad/tuple/control_dependency"
  input: "gradients/MatMul_7_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/mod"
  op: "FloorMod"
  input: "concat_3/axis"
  input: "gradients/concat_3_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_3_grad/mod"
  input: "gradients/concat_3_grad/Shape"
  input: "gradients/concat_3_grad/Shape_1"
  input: "gradients/concat_3_grad/Shape_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_37"
  input: "gradients/concat_3_grad/ConcatOffset"
  input: "gradients/concat_3_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_37"
  input: "gradients/concat_3_grad/ConcatOffset:1"
  input: "gradients/concat_3_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/Slice_2"
  op: "Slice"
  input: "gradients/AddN_37"
  input: "gradients/concat_3_grad/ConcatOffset:2"
  input: "gradients/concat_3_grad/Shape_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_3_grad/Slice"
  input: "^gradients/concat_3_grad/Slice_1"
  input: "^gradients/concat_3_grad/Slice_2"
}
node {
  name: "gradients/concat_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_3_grad/Slice"
  input: "^gradients/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_3_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_3_grad/Slice_1"
  input: "^gradients/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_3_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_3_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/concat_3_grad/Slice_2"
  input: "^gradients/concat_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_3_grad/Slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/L2Loss_67_grad/mul"
  input: "gradients/add_42_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_67_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_32_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_32_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_32_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_32_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_32_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_32_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_32_grad/Sum"
  op: "Sum"
  input: "gradients/add_33_grad/tuple/control_dependency"
  input: "gradients/add_32_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_32_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_32_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_32_grad/Sum"
  input: "gradients/add_32_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_32_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_32_grad/Reshape"
  input: "^gradients/add_33_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_32_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_33_grad/tuple/control_dependency"
  input: "^gradients/add_32_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_47_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_32_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_32_grad/Reshape"
  input: "^gradients/add_32_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_32_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_53_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_53_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_53_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_53_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_53_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_53_grad/Mul"
  op: "Mul"
  input: "gradients/concat_3_grad/tuple/control_dependency_1"
  input: "truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_53_grad/Mul_1"
  op: "Mul"
  input: "truediv_10"
  input: "gradients/concat_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_53_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mul_53_grad/Sum"
  op: "Sum"
  input: "gradients/mul_53_grad/Mul_1"
  input: "gradients/mul_53_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_53_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_53_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_53_grad/Sum"
  input: "gradients/mul_53_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_53_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_53_grad/Mul"
  input: "^gradients/mul_53_grad/Reshape"
}
node {
  name: "gradients/mul_53_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_53_grad/Mul"
  input: "^gradients/mul_53_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_53_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_53_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_53_grad/Reshape"
  input: "^gradients/mul_53_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_53_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_54_grad/Mul"
  op: "Mul"
  input: "gradients/concat_3_grad/tuple/control_dependency_2"
  input: "sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_54_grad/Mul_1"
  op: "Mul"
  input: "truediv_10"
  input: "gradients/concat_3_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_54_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/mul_54_grad/Sum"
  op: "Sum"
  input: "gradients/mul_54_grad/Mul_1"
  input: "gradients/mul_54_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_54_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_54_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_54_grad/Sum"
  input: "gradients/mul_54_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_54_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_54_grad/Mul"
  input: "^gradients/mul_54_grad/Reshape"
}
node {
  name: "gradients/mul_54_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_54_grad/Mul"
  input: "^gradients/mul_54_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_54_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_54_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_54_grad/Reshape"
  input: "^gradients/mul_54_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_54_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_39"
  op: "AddN"
  input: "gradients/L2Loss_37_grad/mul"
  input: "gradients/MatMul_7_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_37_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_15_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_14"
  input: "Conv2D_15/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_15_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_15_grad/ShapeN"
  input: "Conv2D_15/ReadVariableOp"
  input: "gradients/add_32_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_15_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_14"
  input: "gradients/Conv2D_15_grad/ShapeN:1"
  input: "gradients/add_32_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_15_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_15_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_15_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_15_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_15_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_15_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Tensordot_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_32_grad/tuple/control_dependency_1"
  input: "gradients/Tensordot_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_40"
  op: "AddN"
  input: "gradients/L2Loss_60_grad/mul"
  input: "gradients/add_33_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_60_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_41"
  op: "AddN"
  input: "gradients/concat_3_grad/tuple/control_dependency"
  input: "gradients/mul_53_grad/tuple/control_dependency"
  input: "gradients/mul_54_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_3_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_10_grad/Shape"
  input: "gradients/truediv_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/AddN_41"
  input: "Reshape_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_10_grad/RealDiv"
  input: "gradients/truediv_10_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_10_grad/Sum"
  input: "gradients/truediv_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/Neg"
  op: "Neg"
  input: "Sum_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_10_grad/Neg"
  input: "Reshape_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_10_grad/RealDiv_1"
  input: "Reshape_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/mul"
  op: "Mul"
  input: "gradients/AddN_41"
  input: "gradients/truediv_10_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_10_grad/mul"
  input: "gradients/truediv_10_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_10_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_10_grad/Sum_1"
  input: "gradients/truediv_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_10_grad/Reshape"
  input: "^gradients/truediv_10_grad/Reshape_1"
}
node {
  name: "gradients/truediv_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_10_grad/Reshape"
  input: "^gradients/truediv_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_10_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_10_grad/Reshape_1"
  input: "^gradients/truediv_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_10_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_4/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/Tensordot_4_grad/Reshape"
  input: "Tensordot_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Tensordot_4/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Tensordot_4/Reshape"
  input: "gradients/Tensordot_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Tensordot_4/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Tensordot_4/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_4/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/Tensordot_4/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Tensordot_4/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_4/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_4/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Tensordot_4/MatMul_grad/MatMul_1"
  input: "^gradients/Tensordot_4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_4/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_7_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_7_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_7_grad/Maximum"
  op: "Maximum"
  input: "gradients/Sum_7_grad/Maximum/x"
  input: "gradients/Sum_7_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_7_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_7_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Sum_7_grad/floordiv/x"
  input: "gradients/Sum_7_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_7_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_10_grad/tuple/control_dependency"
  input: "gradients/Sum_7_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_7_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_7_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_7_grad/Reshape"
  input: "gradients/Sum_7_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_42"
  op: "AddN"
  input: "gradients/L2Loss_24_grad/mul"
  input: "gradients/Conv2D_15_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_24_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_4/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Tensordot_4/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/Tensordot_4/MatMul_grad/tuple/control_dependency"
  input: "gradients/Tensordot_4/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_43"
  op: "AddN"
  input: "gradients/Conv2D_19_grad/tuple/control_dependency"
  input: "gradients/Conv2D_20_grad/tuple/control_dependency"
  input: "gradients/Sum_7_grad/Tile"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_19_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_17_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_43"
  input: "Relu_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_44"
  op: "AddN"
  input: "gradients/Tensordot_5/Reshape_grad/Reshape"
  input: "gradients/Tensordot_4/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_5/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/mod"
  op: "FloorMod"
  input: "concat_2/axis"
  input: "gradients/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_2_grad/mod"
  input: "gradients/concat_2_grad/Shape"
  input: "gradients/concat_2_grad/Shape_1"
  input: "gradients/concat_2_grad/Shape_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_44"
  input: "gradients/concat_2_grad/ConcatOffset"
  input: "gradients/concat_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_44"
  input: "gradients/concat_2_grad/ConcatOffset:1"
  input: "gradients/concat_2_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/Slice_2"
  op: "Slice"
  input: "gradients/AddN_44"
  input: "gradients/concat_2_grad/ConcatOffset:2"
  input: "gradients/concat_2_grad/Shape_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_2_grad/Slice"
  input: "^gradients/concat_2_grad/Slice_1"
  input: "^gradients/concat_2_grad/Slice_2"
}
node {
  name: "gradients/concat_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_2_grad/Slice"
  input: "^gradients/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_2_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_2_grad/Slice_1"
  input: "^gradients/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_2_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/concat_2_grad/Slice_2"
  input: "^gradients/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_2_grad/Slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_45"
  op: "AddN"
  input: "gradients/L2Loss_26_grad/mul"
  input: "gradients/Tensordot_4/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_26_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_52_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_17_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_52_grad/Mul_1"
  op: "Mul"
  input: "add_34"
  input: "gradients/Relu_17_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_52_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_52_grad/Sum"
  op: "Sum"
  input: "gradients/mul_52_grad/Mul_1"
  input: "gradients/mul_52_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_52_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_52_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_52_grad/Sum"
  input: "gradients/mul_52_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_52_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_52_grad/Mul"
  input: "^gradients/mul_52_grad/Reshape"
}
node {
  name: "gradients/mul_52_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_52_grad/Mul"
  input: "^gradients/mul_52_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_52_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_52_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_52_grad/Reshape"
  input: "^gradients/mul_52_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_52_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_45_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_45_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_45_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_45_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_45_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_45_grad/Mul"
  op: "Mul"
  input: "gradients/concat_2_grad/tuple/control_dependency_1"
  input: "truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_45_grad/Mul_1"
  op: "Mul"
  input: "truediv_8"
  input: "gradients/concat_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_45_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_45_grad/Sum"
  op: "Sum"
  input: "gradients/mul_45_grad/Mul_1"
  input: "gradients/mul_45_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_45_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_45_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_45_grad/Sum"
  input: "gradients/mul_45_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_45_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_45_grad/Mul"
  input: "^gradients/mul_45_grad/Reshape"
}
node {
  name: "gradients/mul_45_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_45_grad/Mul"
  input: "^gradients/mul_45_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_45_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_45_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_45_grad/Reshape"
  input: "^gradients/mul_45_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_45_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Max_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Max_2_grad/Equal"
  op: "Equal"
  input: "Max_2"
  input: "Relu_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Max_2_grad/Cast"
  op: "Cast"
  input: "gradients/Max_2_grad/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_2_grad/Sum"
  op: "Sum"
  input: "gradients/Max_2_grad/Cast"
  input: "Max_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Max_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/Max_2_grad/Sum"
  input: "gradients/Max_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_2_grad/truediv"
  op: "RealDiv"
  input: "gradients/Max_2_grad/Cast"
  input: "gradients/Max_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_2_grad/mul"
  op: "Mul"
  input: "gradients/Max_2_grad/truediv"
  input: "gradients/concat_2_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_34_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_34_grad/Sum"
  op: "Sum"
  input: "gradients/mul_52_grad/tuple/control_dependency"
  input: "gradients/add_34_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_34_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/add_34_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_34_grad/Sum"
  input: "gradients/add_34_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_34_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_34_grad/Reshape"
  input: "^gradients/mul_52_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_34_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_52_grad/tuple/control_dependency"
  input: "^gradients/add_34_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_52_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_34_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_34_grad/Reshape"
  input: "^gradients/add_34_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_34_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_46"
  op: "AddN"
  input: "gradients/concat_2_grad/tuple/control_dependency"
  input: "gradients/mul_45_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_2_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_8_grad/Shape"
  input: "gradients/truediv_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/AddN_46"
  input: "Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_8_grad/RealDiv"
  input: "gradients/truediv_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_8_grad/Sum"
  input: "gradients/truediv_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Neg"
  op: "Neg"
  input: "Sum_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_8_grad/Neg"
  input: "Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_8_grad/RealDiv_1"
  input: "Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/mul"
  op: "Mul"
  input: "gradients/AddN_46"
  input: "gradients/truediv_8_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_8_grad/mul"
  input: "gradients/truediv_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_8_grad/Sum_1"
  input: "gradients/truediv_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_8_grad/Reshape"
  input: "^gradients/truediv_8_grad/Reshape_1"
}
node {
  name: "gradients/truediv_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_8_grad/Reshape"
  input: "^gradients/truediv_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_8_grad/Reshape_1"
  input: "^gradients/truediv_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_18_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_14"
  input: "Conv2D_18/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_18_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_18_grad/ShapeN"
  input: "Conv2D_18/ReadVariableOp"
  input: "gradients/add_34_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_18_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_14"
  input: "gradients/Conv2D_18_grad/ShapeN:1"
  input: "gradients/add_34_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_18_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_18_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_18_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_18_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_18_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_18_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_6_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_8_grad/tuple/control_dependency"
  input: "gradients/Sum_6_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_6_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_6_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_6_grad/Reshape"
  input: "gradients/Sum_6_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_47"
  op: "AddN"
  input: "gradients/L2Loss_61_grad/mul"
  input: "gradients/add_34_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_61_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_48"
  op: "AddN"
  input: "gradients/Max_2_grad/mul"
  input: "gradients/Sum_6_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Max_2_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_15_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_48"
  input: "Relu_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_49"
  op: "AddN"
  input: "gradients/L2Loss_29_grad/mul"
  input: "gradients/Conv2D_18_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_29_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_44_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_15_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_44_grad/Mul_1"
  op: "Mul"
  input: "add_31"
  input: "gradients/Relu_15_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_44_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_44_grad/Sum"
  op: "Sum"
  input: "gradients/mul_44_grad/Mul_1"
  input: "gradients/mul_44_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_44_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_44_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_44_grad/Sum"
  input: "gradients/mul_44_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_44_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_44_grad/Mul"
  input: "^gradients/mul_44_grad/Reshape"
}
node {
  name: "gradients/mul_44_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_44_grad/Mul"
  input: "^gradients/mul_44_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_44_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_44_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_44_grad/Reshape"
  input: "^gradients/mul_44_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_44_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_31_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_31_grad/Sum"
  op: "Sum"
  input: "gradients/mul_44_grad/tuple/control_dependency"
  input: "gradients/add_31_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_31_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/add_31_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_31_grad/Sum"
  input: "gradients/add_31_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_31_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_31_grad/Reshape"
  input: "^gradients/mul_44_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_31_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_44_grad/tuple/control_dependency"
  input: "^gradients/add_31_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_44_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_31_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_31_grad/Reshape"
  input: "^gradients/add_31_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_31_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_16_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_14"
  input: "Conv2D_16/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_16_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_16_grad/ShapeN"
  input: "Conv2D_16/ReadVariableOp"
  input: "gradients/add_31_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_16_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_14"
  input: "gradients/Conv2D_16_grad/ShapeN:1"
  input: "gradients/add_31_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_16_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_16_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_16_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_16_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_16_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_16_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_50"
  op: "AddN"
  input: "gradients/Conv2D_21_grad/tuple/control_dependency"
  input: "gradients/Conv2D_22_grad/tuple/control_dependency"
  input: "gradients/Conv2D_15_grad/tuple/control_dependency"
  input: "gradients/Conv2D_18_grad/tuple/control_dependency"
  input: "gradients/Conv2D_16_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_21_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_14_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_50"
  input: "Relu_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_51"
  op: "AddN"
  input: "gradients/L2Loss_59_grad/mul"
  input: "gradients/add_31_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_59_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_41_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_41_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_41_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_41_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_41_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_41_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_14_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_41_grad/Mul_1"
  op: "Mul"
  input: "add_30"
  input: "gradients/Relu_14_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_41_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_41_grad/Sum"
  op: "Sum"
  input: "gradients/mul_41_grad/Mul_1"
  input: "gradients/mul_41_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_41_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_41_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_41_grad/Sum"
  input: "gradients/mul_41_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_41_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_41_grad/Mul"
  input: "^gradients/mul_41_grad/Reshape"
}
node {
  name: "gradients/mul_41_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_41_grad/Mul"
  input: "^gradients/mul_41_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_41_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_41_grad/Reshape"
  input: "^gradients/mul_41_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_52"
  op: "AddN"
  input: "gradients/L2Loss_25_grad/mul"
  input: "gradients/Conv2D_16_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_25_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_30_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_30_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_30_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_30_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_30_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_30_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_30_grad/Sum"
  op: "Sum"
  input: "gradients/mul_41_grad/tuple/control_dependency"
  input: "gradients/add_30_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_30_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_30_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_30_grad/Sum"
  input: "gradients/add_30_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_30_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_30_grad/Reshape"
  input: "^gradients/mul_41_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_30_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_41_grad/tuple/control_dependency"
  input: "^gradients/add_30_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_30_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_30_grad/Reshape"
  input: "^gradients/add_30_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_30_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_29_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_30_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_29_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_30_grad/tuple/control_dependency"
  input: "^gradients/add_29_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_29_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_30_grad/tuple/control_dependency"
  input: "^gradients/add_29_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_14_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_13"
  input: "Conv2D_14/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_14_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_14_grad/ShapeN"
  input: "Conv2D_14/ReadVariableOp"
  input: "gradients/add_29_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_14_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_13"
  input: "gradients/Conv2D_14_grad/ShapeN:1"
  input: "gradients/add_29_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_14_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_14_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_14_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_14_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_14_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_14_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_53"
  op: "AddN"
  input: "gradients/L2Loss_58_grad/mul"
  input: "gradients/add_30_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_58_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_13_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_14_grad/tuple/control_dependency"
  input: "Relu_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_39_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_13_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_39_grad/Mul_1"
  op: "Mul"
  input: "add_28"
  input: "gradients/Relu_13_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_39_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_39_grad/Sum"
  op: "Sum"
  input: "gradients/mul_39_grad/Mul_1"
  input: "gradients/mul_39_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_39_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_39_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_39_grad/Sum"
  input: "gradients/mul_39_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_39_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_39_grad/Mul"
  input: "^gradients/mul_39_grad/Reshape"
}
node {
  name: "gradients/mul_39_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_39_grad/Mul"
  input: "^gradients/mul_39_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_39_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_39_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_39_grad/Reshape"
  input: "^gradients/mul_39_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_39_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_54"
  op: "AddN"
  input: "gradients/L2Loss_23_grad/mul"
  input: "gradients/Conv2D_14_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_23_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_28_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_28_grad/Sum"
  op: "Sum"
  input: "gradients/mul_39_grad/tuple/control_dependency"
  input: "gradients/add_28_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_28_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_28_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_28_grad/Sum"
  input: "gradients/add_28_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_28_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_28_grad/Reshape"
  input: "^gradients/mul_39_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_28_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_39_grad/tuple/control_dependency"
  input: "^gradients/add_28_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_39_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_28_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_28_grad/Reshape"
  input: "^gradients/add_28_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_28_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_38_grad/Mul"
  op: "Mul"
  input: "gradients/add_28_grad/tuple/control_dependency"
  input: "mul_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_38_grad/Mul_1"
  op: "Mul"
  input: "Conv2D_13"
  input: "gradients/add_28_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_38_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_38_grad/Sum"
  op: "Sum"
  input: "gradients/mul_38_grad/Mul_1"
  input: "gradients/mul_38_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_38_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/mul_38_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_38_grad/Sum"
  input: "gradients/mul_38_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_38_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_38_grad/Mul"
  input: "^gradients/mul_38_grad/Reshape"
}
node {
  name: "gradients/mul_38_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_38_grad/Mul"
  input: "^gradients/mul_38_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_38_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_38_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_38_grad/Reshape"
  input: "^gradients/mul_38_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_38_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_13_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_12"
  input: "Conv2D_13/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_13_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_13_grad/ShapeN"
  input: "Conv2D_13/ReadVariableOp"
  input: "gradients/mul_38_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_13_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_12"
  input: "gradients/Conv2D_13_grad/ShapeN:1"
  input: "gradients/mul_38_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_13_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_13_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_13_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_13_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_13_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_13_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_55"
  op: "AddN"
  input: "gradients/L2Loss_57_grad/mul"
  input: "gradients/add_28_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_57_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_12_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_13_grad/tuple/control_dependency"
  input: "Relu_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_56"
  op: "AddN"
  input: "gradients/L2Loss_22_grad/mul"
  input: "gradients/mul_38_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_22_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_36_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_12_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_36_grad/Mul_1"
  op: "Mul"
  input: "add_26"
  input: "gradients/Relu_12_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_36_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_36_grad/Sum"
  op: "Sum"
  input: "gradients/mul_36_grad/Mul_1"
  input: "gradients/mul_36_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_36_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_36_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_36_grad/Sum"
  input: "gradients/mul_36_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_36_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_36_grad/Mul"
  input: "^gradients/mul_36_grad/Reshape"
}
node {
  name: "gradients/mul_36_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_36_grad/Mul"
  input: "^gradients/mul_36_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_36_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_36_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_36_grad/Reshape"
  input: "^gradients/mul_36_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_36_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_57"
  op: "AddN"
  input: "gradients/L2Loss_21_grad/mul"
  input: "gradients/Conv2D_13_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_21_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_26_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_26_grad/Sum"
  op: "Sum"
  input: "gradients/mul_36_grad/tuple/control_dependency"
  input: "gradients/add_26_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_26_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_26_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_26_grad/Sum"
  input: "gradients/add_26_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_26_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_26_grad/Reshape"
  input: "^gradients/mul_36_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_26_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_36_grad/tuple/control_dependency"
  input: "^gradients/add_26_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_36_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_26_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_26_grad/Reshape"
  input: "^gradients/add_26_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_26_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_58"
  op: "AddN"
  input: "gradients/add_29_grad/tuple/control_dependency"
  input: "gradients/add_26_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_25_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_58"
}
node {
  name: "gradients/add_25_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_58"
  input: "^gradients/add_25_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_25_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AddN_58"
  input: "^gradients/add_25_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_12_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_11"
  input: "Conv2D_12/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_12_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_12_grad/ShapeN"
  input: "Conv2D_12/ReadVariableOp"
  input: "gradients/add_25_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_12_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_11"
  input: "gradients/Conv2D_12_grad/ShapeN:1"
  input: "gradients/add_25_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_12_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_12_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_12_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_12_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_12_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_12_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_59"
  op: "AddN"
  input: "gradients/L2Loss_56_grad/mul"
  input: "gradients/add_26_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_56_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_11_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_12_grad/tuple/control_dependency"
  input: "Relu_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_34_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_34_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_34_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_34_grad/BroadcastGradientArgs/s0"
  input: "gradients/mul_34_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_34_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_11_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_34_grad/Mul_1"
  op: "Mul"
  input: "add_24"
  input: "gradients/Relu_11_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_34_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_34_grad/Sum"
  op: "Sum"
  input: "gradients/mul_34_grad/Mul_1"
  input: "gradients/mul_34_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_34_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_34_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_34_grad/Sum"
  input: "gradients/mul_34_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_34_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_34_grad/Mul"
  input: "^gradients/mul_34_grad/Reshape"
}
node {
  name: "gradients/mul_34_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_34_grad/Mul"
  input: "^gradients/mul_34_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_34_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_34_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_34_grad/Reshape"
  input: "^gradients/mul_34_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_34_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_60"
  op: "AddN"
  input: "gradients/L2Loss_20_grad/mul"
  input: "gradients/Conv2D_12_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_20_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_24_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_24_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/add_24_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_24_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_24_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_24_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_24_grad/Sum"
  op: "Sum"
  input: "gradients/mul_34_grad/tuple/control_dependency"
  input: "gradients/add_24_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_24_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/add_24_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_24_grad/Sum"
  input: "gradients/add_24_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_24_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_24_grad/Reshape"
  input: "^gradients/mul_34_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_24_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_34_grad/tuple/control_dependency"
  input: "^gradients/add_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_34_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_24_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_24_grad/Reshape"
  input: "^gradients/add_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_24_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_33_grad/Mul"
  op: "Mul"
  input: "gradients/add_24_grad/tuple/control_dependency"
  input: "mul_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_33_grad/Mul_1"
  op: "Mul"
  input: "add_22"
  input: "gradients/add_24_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_33_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_33_grad/Sum"
  op: "Sum"
  input: "gradients/mul_33_grad/Mul_1"
  input: "gradients/mul_33_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_33_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/mul_33_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_33_grad/Sum"
  input: "gradients/mul_33_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_33_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_33_grad/Mul"
  input: "^gradients/mul_33_grad/Reshape"
}
node {
  name: "gradients/mul_33_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_33_grad/Mul"
  input: "^gradients/mul_33_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_33_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_33_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_33_grad/Reshape"
  input: "^gradients/mul_33_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_33_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_22_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_22_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_22_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_22_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_22_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_22_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_22_grad/Sum"
  op: "Sum"
  input: "gradients/mul_33_grad/tuple/control_dependency"
  input: "gradients/add_22_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_22_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_22_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_22_grad/Sum"
  input: "gradients/add_22_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_22_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_22_grad/Reshape"
  input: "^gradients/mul_33_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_22_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_33_grad/tuple/control_dependency"
  input: "^gradients/add_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_33_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_22_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_22_grad/Reshape"
  input: "^gradients/add_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_22_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_61"
  op: "AddN"
  input: "gradients/L2Loss_55_grad/mul"
  input: "gradients/add_24_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_55_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_10_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_9"
  input: "Conv2D_10/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_10_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_10_grad/ShapeN"
  input: "Conv2D_10/ReadVariableOp"
  input: "gradients/add_22_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_10_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_9"
  input: "gradients/Conv2D_10_grad/ShapeN:1"
  input: "gradients/add_22_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_10_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_10_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_10_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_10_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_10_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_10_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Tensordot_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_22_grad/tuple/control_dependency_1"
  input: "gradients/Tensordot_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_62"
  op: "AddN"
  input: "gradients/L2Loss_19_grad/mul"
  input: "gradients/mul_33_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_19_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/Tensordot_3_grad/Reshape"
  input: "Tensordot_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Tensordot_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Tensordot_3/Reshape"
  input: "gradients/Tensordot_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Tensordot_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Tensordot_3/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_3/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/Tensordot_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Tensordot_3/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Tensordot_3/MatMul_grad/MatMul_1"
  input: "^gradients/Tensordot_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_63"
  op: "AddN"
  input: "gradients/L2Loss_16_grad/mul"
  input: "gradients/Conv2D_10_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_16_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_3/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Tensordot_3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/Tensordot_3/MatMul_grad/tuple/control_dependency"
  input: "gradients/Tensordot_3/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/mod"
  op: "FloorMod"
  input: "concat_1/axis"
  input: "gradients/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_1_grad/mod"
  input: "gradients/concat_1_grad/Shape"
  input: "gradients/concat_1_grad/Shape_1"
  input: "gradients/concat_1_grad/Shape_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/Tensordot_3/Reshape_grad/Reshape"
  input: "gradients/concat_1_grad/ConcatOffset"
  input: "gradients/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/Tensordot_3/Reshape_grad/Reshape"
  input: "gradients/concat_1_grad/ConcatOffset:1"
  input: "gradients/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Slice_2"
  op: "Slice"
  input: "gradients/Tensordot_3/Reshape_grad/Reshape"
  input: "gradients/concat_1_grad/ConcatOffset:2"
  input: "gradients/concat_1_grad/Shape_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_1_grad/Slice"
  input: "^gradients/concat_1_grad/Slice_1"
  input: "^gradients/concat_1_grad/Slice_2"
}
node {
  name: "gradients/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_1_grad/Slice"
  input: "^gradients/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_1_grad/Slice_1"
  input: "^gradients/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/concat_1_grad/Slice_2"
  input: "^gradients/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_1_grad/Slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_64"
  op: "AddN"
  input: "gradients/L2Loss_18_grad/mul"
  input: "gradients/Tensordot_3/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_18_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_31_grad/Mul"
  op: "Mul"
  input: "gradients/concat_1_grad/tuple/control_dependency_1"
  input: "truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_31_grad/Mul_1"
  op: "Mul"
  input: "truediv_6"
  input: "gradients/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_31_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_31_grad/Sum"
  op: "Sum"
  input: "gradients/mul_31_grad/Mul_1"
  input: "gradients/mul_31_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_31_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_31_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_31_grad/Sum"
  input: "gradients/mul_31_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_31_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_31_grad/Mul"
  input: "^gradients/mul_31_grad/Reshape"
}
node {
  name: "gradients/mul_31_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_31_grad/Mul"
  input: "^gradients/mul_31_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_31_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_31_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_31_grad/Reshape"
  input: "^gradients/mul_31_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_31_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Max_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Max_1_grad/Equal"
  op: "Equal"
  input: "Max_1"
  input: "Relu_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Max_1_grad/Cast"
  op: "Cast"
  input: "gradients/Max_1_grad/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_1_grad/Sum"
  op: "Sum"
  input: "gradients/Max_1_grad/Cast"
  input: "Max_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Max_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Max_1_grad/Sum"
  input: "gradients/Max_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_1_grad/truediv"
  op: "RealDiv"
  input: "gradients/Max_1_grad/Cast"
  input: "gradients/Max_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_1_grad/mul"
  op: "Mul"
  input: "gradients/Max_1_grad/truediv"
  input: "gradients/concat_1_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_65"
  op: "AddN"
  input: "gradients/concat_1_grad/tuple/control_dependency"
  input: "gradients/mul_31_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_6_grad/Shape"
  input: "gradients/truediv_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/AddN_65"
  input: "Reshape_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_6_grad/RealDiv"
  input: "gradients/truediv_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_6_grad/Sum"
  input: "gradients/truediv_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/Neg"
  op: "Neg"
  input: "Sum_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_6_grad/Neg"
  input: "Reshape_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_6_grad/RealDiv_1"
  input: "Reshape_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/mul"
  op: "Mul"
  input: "gradients/AddN_65"
  input: "gradients/truediv_6_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_6_grad/mul"
  input: "gradients/truediv_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_6_grad/Sum_1"
  input: "gradients/truediv_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_6_grad/Reshape"
  input: "^gradients/truediv_6_grad/Reshape_1"
}
node {
  name: "gradients/truediv_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_6_grad/Reshape"
  input: "^gradients/truediv_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_6_grad/Reshape_1"
  input: "^gradients/truediv_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_5_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_6_grad/tuple/control_dependency"
  input: "gradients/Sum_5_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_5_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_5_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_5_grad/Reshape"
  input: "gradients/Sum_5_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_66"
  op: "AddN"
  input: "gradients/Max_1_grad/mul"
  input: "gradients/Sum_5_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Max_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_10_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_66"
  input: "Relu_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_30_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_10_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_30_grad/Mul_1"
  op: "Mul"
  input: "add_21"
  input: "gradients/Relu_10_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_30_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_30_grad/Sum"
  op: "Sum"
  input: "gradients/mul_30_grad/Mul_1"
  input: "gradients/mul_30_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_30_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_30_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_30_grad/Sum"
  input: "gradients/mul_30_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_30_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_30_grad/Mul"
  input: "^gradients/mul_30_grad/Reshape"
}
node {
  name: "gradients/mul_30_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_30_grad/Mul"
  input: "^gradients/mul_30_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_30_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_30_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_30_grad/Reshape"
  input: "^gradients/mul_30_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_30_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_21_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_21_grad/Sum"
  op: "Sum"
  input: "gradients/mul_30_grad/tuple/control_dependency"
  input: "gradients/add_21_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_21_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/add_21_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_21_grad/Sum"
  input: "gradients/add_21_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_21_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_21_grad/Reshape"
  input: "^gradients/mul_30_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_21_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_30_grad/tuple/control_dependency"
  input: "^gradients/add_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_30_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_21_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_21_grad/Reshape"
  input: "^gradients/add_21_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_21_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_11_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_9"
  input: "Conv2D_11/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_11_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_11_grad/ShapeN"
  input: "Conv2D_11/ReadVariableOp"
  input: "gradients/add_21_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_11_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_9"
  input: "gradients/Conv2D_11_grad/ShapeN:1"
  input: "gradients/add_21_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_11_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_11_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_11_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_11_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_11_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_11_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_67"
  op: "AddN"
  input: "gradients/Conv2D_10_grad/tuple/control_dependency"
  input: "gradients/Conv2D_11_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_10_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_9_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_67"
  input: "Relu_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_68"
  op: "AddN"
  input: "gradients/L2Loss_54_grad/mul"
  input: "gradients/add_21_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_54_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_27_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_9_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_27_grad/Mul_1"
  op: "Mul"
  input: "add_20"
  input: "gradients/Relu_9_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_27_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_27_grad/Sum"
  op: "Sum"
  input: "gradients/mul_27_grad/Mul_1"
  input: "gradients/mul_27_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_27_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_27_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_27_grad/Sum"
  input: "gradients/mul_27_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_27_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_27_grad/Mul"
  input: "^gradients/mul_27_grad/Reshape"
}
node {
  name: "gradients/mul_27_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_27_grad/Mul"
  input: "^gradients/mul_27_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_27_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_27_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_27_grad/Reshape"
  input: "^gradients/mul_27_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_27_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_69"
  op: "AddN"
  input: "gradients/L2Loss_17_grad/mul"
  input: "gradients/Conv2D_11_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_17_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_20_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_20_grad/Sum"
  op: "Sum"
  input: "gradients/mul_27_grad/tuple/control_dependency"
  input: "gradients/add_20_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_20_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_20_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_20_grad/Sum"
  input: "gradients/add_20_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_20_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_20_grad/Reshape"
  input: "^gradients/mul_27_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_20_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_27_grad/tuple/control_dependency"
  input: "^gradients/add_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_27_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_20_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_20_grad/Reshape"
  input: "^gradients/add_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_20_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_70"
  op: "AddN"
  input: "gradients/add_25_grad/tuple/control_dependency"
  input: "gradients/add_20_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_19_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_70"
}
node {
  name: "gradients/add_19_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_70"
  input: "^gradients/add_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_19_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AddN_70"
  input: "^gradients/add_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_9_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_8"
  input: "Conv2D_9/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_9_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_9_grad/ShapeN"
  input: "Conv2D_9/ReadVariableOp"
  input: "gradients/add_19_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_9_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_8"
  input: "gradients/Conv2D_9_grad/ShapeN:1"
  input: "gradients/add_19_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_9_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_9_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_9_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_9_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_9_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_9_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_71"
  op: "AddN"
  input: "gradients/L2Loss_53_grad/mul"
  input: "gradients/add_20_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_53_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_8_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_9_grad/tuple/control_dependency"
  input: "Relu_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_25_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_8_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_25_grad/Mul_1"
  op: "Mul"
  input: "add_18"
  input: "gradients/Relu_8_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_25_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_25_grad/Sum"
  op: "Sum"
  input: "gradients/mul_25_grad/Mul_1"
  input: "gradients/mul_25_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_25_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_25_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_25_grad/Sum"
  input: "gradients/mul_25_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_25_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_25_grad/Mul"
  input: "^gradients/mul_25_grad/Reshape"
}
node {
  name: "gradients/mul_25_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_25_grad/Mul"
  input: "^gradients/mul_25_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_25_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_25_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_25_grad/Reshape"
  input: "^gradients/mul_25_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_25_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_72"
  op: "AddN"
  input: "gradients/L2Loss_15_grad/mul"
  input: "gradients/Conv2D_9_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_15_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_18_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_18_grad/Sum"
  op: "Sum"
  input: "gradients/mul_25_grad/tuple/control_dependency"
  input: "gradients/add_18_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_18_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_18_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_18_grad/Sum"
  input: "gradients/add_18_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_18_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_18_grad/Reshape"
  input: "^gradients/mul_25_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_18_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_25_grad/tuple/control_dependency"
  input: "^gradients/add_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_25_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_18_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_18_grad/Reshape"
  input: "^gradients/add_18_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_18_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_24_grad/Mul"
  op: "Mul"
  input: "gradients/add_18_grad/tuple/control_dependency"
  input: "mul_24/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_24_grad/Mul_1"
  op: "Mul"
  input: "Conv2D_8"
  input: "gradients/add_18_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_24_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_24_grad/Sum"
  op: "Sum"
  input: "gradients/mul_24_grad/Mul_1"
  input: "gradients/mul_24_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_24_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/mul_24_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_24_grad/Sum"
  input: "gradients/mul_24_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_24_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_24_grad/Mul"
  input: "^gradients/mul_24_grad/Reshape"
}
node {
  name: "gradients/mul_24_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_24_grad/Mul"
  input: "^gradients/mul_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_24_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_24_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_24_grad/Reshape"
  input: "^gradients/mul_24_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_24_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_8_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_7"
  input: "Conv2D_8/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_8_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_8_grad/ShapeN"
  input: "Conv2D_8/ReadVariableOp"
  input: "gradients/mul_24_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_8_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_7"
  input: "gradients/Conv2D_8_grad/ShapeN:1"
  input: "gradients/mul_24_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_8_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_8_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_8_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_8_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_8_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_8_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_73"
  op: "AddN"
  input: "gradients/L2Loss_52_grad/mul"
  input: "gradients/add_18_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_52_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_7_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_8_grad/tuple/control_dependency"
  input: "Relu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_74"
  op: "AddN"
  input: "gradients/L2Loss_14_grad/mul"
  input: "gradients/mul_24_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_14_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_22_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_7_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_22_grad/Mul_1"
  op: "Mul"
  input: "add_16"
  input: "gradients/Relu_7_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_22_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_22_grad/Sum"
  op: "Sum"
  input: "gradients/mul_22_grad/Mul_1"
  input: "gradients/mul_22_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_22_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_22_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_22_grad/Sum"
  input: "gradients/mul_22_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_22_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_22_grad/Mul"
  input: "^gradients/mul_22_grad/Reshape"
}
node {
  name: "gradients/mul_22_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_22_grad/Mul"
  input: "^gradients/mul_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_22_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_22_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_22_grad/Reshape"
  input: "^gradients/mul_22_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_22_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_75"
  op: "AddN"
  input: "gradients/L2Loss_13_grad/mul"
  input: "gradients/Conv2D_8_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_13_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_16_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_16_grad/Sum"
  op: "Sum"
  input: "gradients/mul_22_grad/tuple/control_dependency"
  input: "gradients/add_16_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_16_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_16_grad/Sum"
  input: "gradients/add_16_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_16_grad/Reshape"
  input: "^gradients/mul_22_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_22_grad/tuple/control_dependency"
  input: "^gradients/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_22_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_16_grad/Reshape"
  input: "^gradients/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_16_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_76"
  op: "AddN"
  input: "gradients/add_19_grad/tuple/control_dependency"
  input: "gradients/add_16_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_76"
}
node {
  name: "gradients/add_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_76"
  input: "^gradients/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AddN_76"
  input: "^gradients/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_7_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_6"
  input: "Conv2D_7/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_7_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_7_grad/ShapeN"
  input: "Conv2D_7/ReadVariableOp"
  input: "gradients/add_15_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_7_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_6"
  input: "gradients/Conv2D_7_grad/ShapeN:1"
  input: "gradients/add_15_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_7_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_7_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_7_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_7_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_7_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_7_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_77"
  op: "AddN"
  input: "gradients/L2Loss_51_grad/mul"
  input: "gradients/add_16_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_51_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_6_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_7_grad/tuple/control_dependency"
  input: "Relu_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_20_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_6_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_20_grad/Mul_1"
  op: "Mul"
  input: "add_14"
  input: "gradients/Relu_6_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_20_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_20_grad/Sum"
  op: "Sum"
  input: "gradients/mul_20_grad/Mul_1"
  input: "gradients/mul_20_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_20_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_20_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_20_grad/Sum"
  input: "gradients/mul_20_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_20_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_20_grad/Mul"
  input: "^gradients/mul_20_grad/Reshape"
}
node {
  name: "gradients/mul_20_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_20_grad/Mul"
  input: "^gradients/mul_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_20_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_20_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_20_grad/Reshape"
  input: "^gradients/mul_20_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_20_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_78"
  op: "AddN"
  input: "gradients/L2Loss_12_grad/mul"
  input: "gradients/Conv2D_7_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_12_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/Sum"
  op: "Sum"
  input: "gradients/mul_20_grad/tuple/control_dependency"
  input: "gradients/add_14_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_14_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_14_grad/Sum"
  input: "gradients/add_14_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_14_grad/Reshape"
  input: "^gradients/mul_20_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_20_grad/tuple/control_dependency"
  input: "^gradients/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_20_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_14_grad/Reshape"
  input: "^gradients/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_14_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_19_grad/Mul"
  op: "Mul"
  input: "gradients/add_14_grad/tuple/control_dependency"
  input: "mul_19/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_19_grad/Mul_1"
  op: "Mul"
  input: "add_12"
  input: "gradients/add_14_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_19_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_19_grad/Sum"
  op: "Sum"
  input: "gradients/mul_19_grad/Mul_1"
  input: "gradients/mul_19_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_19_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/mul_19_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_19_grad/Sum"
  input: "gradients/mul_19_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_19_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_19_grad/Mul"
  input: "^gradients/mul_19_grad/Reshape"
}
node {
  name: "gradients/mul_19_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_19_grad/Mul"
  input: "^gradients/mul_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_19_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_19_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_19_grad/Reshape"
  input: "^gradients/mul_19_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_19_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/Sum"
  op: "Sum"
  input: "gradients/mul_19_grad/tuple/control_dependency"
  input: "gradients/add_12_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_12_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_12_grad/Sum"
  input: "gradients/add_12_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_12_grad/Reshape"
  input: "^gradients/mul_19_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_19_grad/tuple/control_dependency"
  input: "^gradients/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_19_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_12_grad/Reshape"
  input: "^gradients/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_79"
  op: "AddN"
  input: "gradients/L2Loss_50_grad/mul"
  input: "gradients/add_14_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_50_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_5_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_4"
  input: "Conv2D_5/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_5_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_5_grad/ShapeN"
  input: "Conv2D_5/ReadVariableOp"
  input: "gradients/add_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_5_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_4"
  input: "gradients/Conv2D_5_grad/ShapeN:1"
  input: "gradients/add_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_5_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_5_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_5_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_5_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_5_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_5_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Tensordot_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_12_grad/tuple/control_dependency_1"
  input: "gradients/Tensordot_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_80"
  op: "AddN"
  input: "gradients/L2Loss_11_grad/mul"
  input: "gradients/mul_19_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_11_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/Tensordot_2_grad/Reshape"
  input: "Tensordot_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Tensordot_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Tensordot_2/Reshape"
  input: "gradients/Tensordot_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Tensordot_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Tensordot_2/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/Tensordot_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Tensordot_2/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Tensordot_2/MatMul_grad/MatMul_1"
  input: "^gradients/Tensordot_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_81"
  op: "AddN"
  input: "gradients/L2Loss_8_grad/mul"
  input: "gradients/Conv2D_5_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_8_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_2/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Tensordot_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/Tensordot_2/MatMul_grad/tuple/control_dependency"
  input: "gradients/Tensordot_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/concat_grad/mod"
  op: "FloorMod"
  input: "concat/axis"
  input: "gradients/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_grad/mod"
  input: "gradients/concat_grad/Shape"
  input: "gradients/concat_grad/Shape_1"
  input: "gradients/concat_grad/Shape_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Slice"
  op: "Slice"
  input: "gradients/Tensordot_2/Reshape_grad/Reshape"
  input: "gradients/concat_grad/ConcatOffset"
  input: "gradients/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/Tensordot_2/Reshape_grad/Reshape"
  input: "gradients/concat_grad/ConcatOffset:1"
  input: "gradients/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Slice_2"
  op: "Slice"
  input: "gradients/Tensordot_2/Reshape_grad/Reshape"
  input: "gradients/concat_grad/ConcatOffset:2"
  input: "gradients/concat_grad/Shape_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_grad/Slice"
  input: "^gradients/concat_grad/Slice_1"
  input: "^gradients/concat_grad/Slice_2"
}
node {
  name: "gradients/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_grad/Slice"
  input: "^gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_grad/Slice_1"
  input: "^gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/concat_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/concat_grad/Slice_2"
  input: "^gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_82"
  op: "AddN"
  input: "gradients/L2Loss_10_grad/mul"
  input: "gradients/Tensordot_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_10_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_17_grad/Mul"
  op: "Mul"
  input: "gradients/concat_grad/tuple/control_dependency_1"
  input: "truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_17_grad/Mul_1"
  op: "Mul"
  input: "truediv_4"
  input: "gradients/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_17_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_17_grad/Sum"
  op: "Sum"
  input: "gradients/mul_17_grad/Mul_1"
  input: "gradients/mul_17_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_17_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_17_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_17_grad/Sum"
  input: "gradients/mul_17_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_17_grad/Mul"
  input: "^gradients/mul_17_grad/Reshape"
}
node {
  name: "gradients/mul_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_17_grad/Mul"
  input: "^gradients/mul_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_17_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_17_grad/Reshape"
  input: "^gradients/mul_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_17_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Max_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Max_grad/Equal"
  op: "Equal"
  input: "Max"
  input: "Relu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Max_grad/Cast"
  op: "Cast"
  input: "gradients/Max_grad/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_grad/Sum"
  op: "Sum"
  input: "gradients/Max_grad/Cast"
  input: "Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Max_grad/Reshape"
  op: "Reshape"
  input: "gradients/Max_grad/Sum"
  input: "gradients/Max_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_grad/truediv"
  op: "RealDiv"
  input: "gradients/Max_grad/Cast"
  input: "gradients/Max_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Max_grad/mul"
  op: "Mul"
  input: "gradients/Max_grad/truediv"
  input: "gradients/concat_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_83"
  op: "AddN"
  input: "gradients/concat_grad/tuple/control_dependency"
  input: "gradients/mul_17_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_4_grad/Shape"
  input: "gradients/truediv_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/AddN_83"
  input: "Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_4_grad/RealDiv"
  input: "gradients/truediv_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_4_grad/Sum"
  input: "gradients/truediv_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Neg"
  op: "Neg"
  input: "Sum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_4_grad/Neg"
  input: "Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_4_grad/RealDiv_1"
  input: "Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/mul"
  op: "Mul"
  input: "gradients/AddN_83"
  input: "gradients/truediv_4_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_4_grad/mul"
  input: "gradients/truediv_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_4_grad/Sum_1"
  input: "gradients/truediv_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_4_grad/Reshape"
  input: "^gradients/truediv_4_grad/Reshape_1"
}
node {
  name: "gradients/truediv_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_4_grad/Reshape"
  input: "^gradients/truediv_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_4_grad/Reshape_1"
  input: "^gradients/truediv_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_4_grad/tuple/control_dependency"
  input: "gradients/Sum_4_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_4_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_4_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_4_grad/Reshape"
  input: "gradients/Sum_4_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_84"
  op: "AddN"
  input: "gradients/Max_grad/mul"
  input: "gradients/Sum_4_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Max_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_5_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_84"
  input: "Relu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_16_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_5_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_16_grad/Mul_1"
  op: "Mul"
  input: "add_11"
  input: "gradients/Relu_5_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_16_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_16_grad/Sum"
  op: "Sum"
  input: "gradients/mul_16_grad/Mul_1"
  input: "gradients/mul_16_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_16_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_16_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_16_grad/Sum"
  input: "gradients/mul_16_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_16_grad/Mul"
  input: "^gradients/mul_16_grad/Reshape"
}
node {
  name: "gradients/mul_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_16_grad/Mul"
  input: "^gradients/mul_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_16_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_16_grad/Reshape"
  input: "^gradients/mul_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_16_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/Sum"
  op: "Sum"
  input: "gradients/mul_16_grad/tuple/control_dependency"
  input: "gradients/add_11_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_11_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_11_grad/Sum"
  input: "gradients/add_11_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_11_grad/Reshape"
  input: "^gradients/mul_16_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_16_grad/tuple/control_dependency"
  input: "^gradients/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_16_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_11_grad/Reshape"
  input: "^gradients/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_11_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_6_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_4"
  input: "Conv2D_6/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_6_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_6_grad/ShapeN"
  input: "Conv2D_6/ReadVariableOp"
  input: "gradients/add_11_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_6_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_4"
  input: "gradients/Conv2D_6_grad/ShapeN:1"
  input: "gradients/add_11_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_6_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_6_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_6_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_6_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_6_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_6_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_85"
  op: "AddN"
  input: "gradients/Conv2D_5_grad/tuple/control_dependency"
  input: "gradients/Conv2D_6_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_5_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_4_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_85"
  input: "Relu_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_86"
  op: "AddN"
  input: "gradients/L2Loss_49_grad/mul"
  input: "gradients/add_11_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_49_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_13_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_4_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_13_grad/Mul_1"
  op: "Mul"
  input: "add_10"
  input: "gradients/Relu_4_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_13_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_13_grad/Sum"
  op: "Sum"
  input: "gradients/mul_13_grad/Mul_1"
  input: "gradients/mul_13_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_13_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_13_grad/Sum"
  input: "gradients/mul_13_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_13_grad/Mul"
  input: "^gradients/mul_13_grad/Reshape"
}
node {
  name: "gradients/mul_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_13_grad/Mul"
  input: "^gradients/mul_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_13_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_13_grad/Reshape"
  input: "^gradients/mul_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_13_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_87"
  op: "AddN"
  input: "gradients/L2Loss_9_grad/mul"
  input: "gradients/Conv2D_6_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_9_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/Sum"
  op: "Sum"
  input: "gradients/mul_13_grad/tuple/control_dependency"
  input: "gradients/add_10_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_10_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_10_grad/Sum"
  input: "gradients/add_10_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_10_grad/Reshape"
  input: "^gradients/mul_13_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_13_grad/tuple/control_dependency"
  input: "^gradients/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_13_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_10_grad/Reshape"
  input: "^gradients/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_10_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_88"
  op: "AddN"
  input: "gradients/add_15_grad/tuple/control_dependency"
  input: "gradients/add_10_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_88"
}
node {
  name: "gradients/add_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_88"
  input: "^gradients/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AddN_88"
  input: "^gradients/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_4_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_3"
  input: "Conv2D_4/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_4_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_4_grad/ShapeN"
  input: "Conv2D_4/ReadVariableOp"
  input: "gradients/add_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_4_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_3"
  input: "gradients/Conv2D_4_grad/ShapeN:1"
  input: "gradients/add_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_4_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_4_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_4_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_4_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_4_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_4_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_89"
  op: "AddN"
  input: "gradients/L2Loss_48_grad/mul"
  input: "gradients/add_10_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_48_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_4_grad/tuple/control_dependency"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_11_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_3_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_11_grad/Mul_1"
  op: "Mul"
  input: "add_8"
  input: "gradients/Relu_3_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_11_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_11_grad/Sum"
  op: "Sum"
  input: "gradients/mul_11_grad/Mul_1"
  input: "gradients/mul_11_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_11_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_11_grad/Sum"
  input: "gradients/mul_11_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_11_grad/Mul"
  input: "^gradients/mul_11_grad/Reshape"
}
node {
  name: "gradients/mul_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_11_grad/Mul"
  input: "^gradients/mul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_11_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_11_grad/Reshape"
  input: "^gradients/mul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_11_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_90"
  op: "AddN"
  input: "gradients/L2Loss_7_grad/mul"
  input: "gradients/Conv2D_4_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_7_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/Sum"
  op: "Sum"
  input: "gradients/mul_11_grad/tuple/control_dependency"
  input: "gradients/add_8_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_8_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_8_grad/Sum"
  input: "gradients/add_8_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_8_grad/Reshape"
  input: "^gradients/mul_11_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_11_grad/tuple/control_dependency"
  input: "^gradients/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_11_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_8_grad/Reshape"
  input: "^gradients/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_10_grad/Mul"
  op: "Mul"
  input: "gradients/add_8_grad/tuple/control_dependency"
  input: "mul_10/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_10_grad/Mul_1"
  op: "Mul"
  input: "Conv2D_3"
  input: "gradients/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_10_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_10_grad/Sum"
  op: "Sum"
  input: "gradients/mul_10_grad/Mul_1"
  input: "gradients/mul_10_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_10_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/mul_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_10_grad/Sum"
  input: "gradients/mul_10_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_10_grad/Mul"
  input: "^gradients/mul_10_grad/Reshape"
}
node {
  name: "gradients/mul_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_10_grad/Mul"
  input: "^gradients/mul_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_10_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_10_grad/Reshape"
  input: "^gradients/mul_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_10_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_3_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_2"
  input: "Conv2D_3/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_3_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_3_grad/ShapeN"
  input: "Conv2D_3/ReadVariableOp"
  input: "gradients/mul_10_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_3_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_2"
  input: "gradients/Conv2D_3_grad/ShapeN:1"
  input: "gradients/mul_10_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_3_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_3_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_3_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_3_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_3_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_3_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_91"
  op: "AddN"
  input: "gradients/L2Loss_47_grad/mul"
  input: "gradients/add_8_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_47_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_3_grad/tuple/control_dependency"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_92"
  op: "AddN"
  input: "gradients/L2Loss_6_grad/mul"
  input: "gradients/mul_10_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_6_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_8_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_2_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_8_grad/Mul_1"
  op: "Mul"
  input: "add_6"
  input: "gradients/Relu_2_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_8_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_8_grad/Sum"
  op: "Sum"
  input: "gradients/mul_8_grad/Mul_1"
  input: "gradients/mul_8_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_8_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_8_grad/Sum"
  input: "gradients/mul_8_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_8_grad/Mul"
  input: "^gradients/mul_8_grad/Reshape"
}
node {
  name: "gradients/mul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_8_grad/Mul"
  input: "^gradients/mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_8_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_8_grad/Reshape"
  input: "^gradients/mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_93"
  op: "AddN"
  input: "gradients/L2Loss_5_grad/mul"
  input: "gradients/Conv2D_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_5_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/mul_8_grad/tuple/control_dependency"
  input: "gradients/add_6_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_6_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_6_grad/Sum"
  input: "gradients/add_6_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_6_grad/Reshape"
  input: "^gradients/mul_8_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_8_grad/tuple/control_dependency"
  input: "^gradients/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_8_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_6_grad/Reshape"
  input: "^gradients/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_94"
  op: "AddN"
  input: "gradients/add_9_grad/tuple/control_dependency"
  input: "gradients/add_6_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_94"
}
node {
  name: "gradients/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_94"
  input: "^gradients/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/AddN_94"
  input: "^gradients/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_1"
  input: "Conv2D_2/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_2_grad/ShapeN"
  input: "Conv2D_2/ReadVariableOp"
  input: "gradients/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_1"
  input: "gradients/Conv2D_2_grad/ShapeN:1"
  input: "gradients/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_95"
  op: "AddN"
  input: "gradients/L2Loss_46_grad/mul"
  input: "gradients/add_6_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_46_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_2_grad/tuple/control_dependency"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_6_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_1_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_6_grad/Mul_1"
  op: "Mul"
  input: "add_4"
  input: "gradients/Relu_1_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_6_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients/mul_6_grad/Mul_1"
  input: "gradients/mul_6_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_6_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_6_grad/Sum"
  input: "gradients/mul_6_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_6_grad/Mul"
  input: "^gradients/mul_6_grad/Reshape"
}
node {
  name: "gradients/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_6_grad/Mul"
  input: "^gradients/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_6_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_6_grad/Reshape"
  input: "^gradients/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_96"
  op: "AddN"
  input: "gradients/L2Loss_4_grad/mul"
  input: "gradients/Conv2D_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_4_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/mul_6_grad/tuple/control_dependency"
  input: "gradients/add_4_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_4_grad/Sum"
  input: "gradients/add_4_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_4_grad/Reshape"
  input: "^gradients/mul_6_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_6_grad/tuple/control_dependency"
  input: "^gradients/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_6_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_4_grad/Reshape"
  input: "^gradients/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/Mul"
  op: "Mul"
  input: "gradients/add_4_grad/tuple/control_dependency"
  input: "mul_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/Mul_1"
  op: "Mul"
  input: "Conv2D_1"
  input: "gradients/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/mul_5_grad/Mul_1"
  input: "gradients/mul_5_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_5_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_5_grad/Sum"
  input: "gradients/mul_5_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_5_grad/Mul"
  input: "^gradients/mul_5_grad/Reshape"
}
node {
  name: "gradients/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_5_grad/Mul"
  input: "^gradients/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_5_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_5_grad/Reshape"
  input: "^gradients/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "Relu"
  input: "Conv2D_1/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_1_grad/ShapeN"
  input: "Conv2D_1/ReadVariableOp"
  input: "gradients/mul_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu"
  input: "gradients/Conv2D_1_grad/ShapeN:1"
  input: "gradients/mul_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_97"
  op: "AddN"
  input: "gradients/L2Loss_45_grad/mul"
  input: "gradients/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_45_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/Conv2D_1_grad/tuple/control_dependency"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_98"
  op: "AddN"
  input: "gradients/L2Loss_3_grad/mul"
  input: "gradients/mul_5_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_3_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/Relu_grad/ReluGrad"
  input: "strided_slice_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/Mul_1"
  op: "Mul"
  input: "add_2"
  input: "gradients/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/mul_3_grad/Mul_1"
  input: "gradients/mul_3_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_3_grad/Sum"
  input: "gradients/mul_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_3_grad/Mul"
  input: "^gradients/mul_3_grad/Reshape"
}
node {
  name: "gradients/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_3_grad/Mul"
  input: "^gradients/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_3_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_3_grad/Reshape"
  input: "^gradients/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_99"
  op: "AddN"
  input: "gradients/L2Loss_2_grad/mul"
  input: "gradients/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_2_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/mul_3_grad/tuple/control_dependency"
  input: "gradients/add_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_2_grad/Sum"
  input: "gradients/add_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_2_grad/Reshape"
  input: "^gradients/mul_3_grad/tuple/control_dependency"
}
node {
  name: "gradients/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_3_grad/tuple/control_dependency"
  input: "^gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_3_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_2_grad/Reshape"
  input: "^gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_100"
  op: "AddN"
  input: "gradients/add_5_grad/tuple/control_dependency"
  input: "gradients/add_2_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\023\000\000\000\023\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_1_grad/BroadcastGradientArgs/s0"
  input: "gradients/add_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_100"
  input: "gradients/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_1_grad/Sum"
  input: "gradients/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_100"
  input: "^gradients/add_1_grad/Reshape"
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_100"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_41_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_1_grad/Reshape"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape_5"
  input: "Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_grad/ShapeN"
  input: "Conv2D/ReadVariableOp"
  input: "gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape_5"
  input: "gradients/Conv2D_grad/ShapeN:1"
  input: "gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 22
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_1_grad/tuple/control_dependency_1"
  input: "gradients/Reshape_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_101"
  op: "AddN"
  input: "gradients/L2Loss_44_grad/mul"
  input: "gradients/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_44_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/Reshape_6_grad/Reshape"
  input: "Tensordot_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Tensordot_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "mul"
  input: "gradients/Reshape_6_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Tensordot_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Tensordot_1/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/Tensordot_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Tensordot_1/MatMul_grad/MatMul"
  input: "^gradients/Tensordot_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Tensordot_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Tensordot_1/MatMul_grad/MatMul_1"
  input: "^gradients/Tensordot_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Tensordot_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_102"
  op: "AddN"
  input: "gradients/L2Loss_grad/mul"
  input: "gradients/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_103"
  op: "AddN"
  input: "gradients/L2Loss_1_grad/mul"
  input: "gradients/Tensordot_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/AddN_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/AddN_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/AddN_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_44_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/AddN_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_2_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/AddN_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_3_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/AddN_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_45_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_6"
  op: "L2Loss"
  input: "gradients/AddN_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_4_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_7"
  op: "L2Loss"
  input: "gradients/AddN_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_46_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_8"
  op: "L2Loss"
  input: "gradients/AddN_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_5_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_9"
  op: "L2Loss"
  input: "gradients/AddN_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_6_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_10"
  op: "L2Loss"
  input: "gradients/AddN_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_47_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_11"
  op: "L2Loss"
  input: "gradients/AddN_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_7_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_12"
  op: "L2Loss"
  input: "gradients/AddN_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_48_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_13"
  op: "L2Loss"
  input: "gradients/AddN_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_8_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_14"
  op: "L2Loss"
  input: "gradients/AddN_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_9_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_15"
  op: "L2Loss"
  input: "gradients/AddN_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_49_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_16"
  op: "L2Loss"
  input: "gradients/AddN_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_10_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_17"
  op: "L2Loss"
  input: "gradients/AddN_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_11_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_18"
  op: "L2Loss"
  input: "gradients/AddN_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_50_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_19"
  op: "L2Loss"
  input: "gradients/AddN_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_12_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_20"
  op: "L2Loss"
  input: "gradients/AddN_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_51_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_21"
  op: "L2Loss"
  input: "gradients/AddN_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_13_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_22"
  op: "L2Loss"
  input: "gradients/AddN_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_14_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_23"
  op: "L2Loss"
  input: "gradients/AddN_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_52_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_24"
  op: "L2Loss"
  input: "gradients/AddN_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_15_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_25"
  op: "L2Loss"
  input: "gradients/AddN_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_53_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_26"
  op: "L2Loss"
  input: "gradients/AddN_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_16_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_27"
  op: "L2Loss"
  input: "gradients/AddN_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_17_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_28"
  op: "L2Loss"
  input: "gradients/AddN_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_54_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_29"
  op: "L2Loss"
  input: "gradients/AddN_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_18_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_30"
  op: "L2Loss"
  input: "gradients/AddN_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_19_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_31"
  op: "L2Loss"
  input: "gradients/AddN_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_55_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_32"
  op: "L2Loss"
  input: "gradients/AddN_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_20_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_33"
  op: "L2Loss"
  input: "gradients/AddN_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_56_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_34"
  op: "L2Loss"
  input: "gradients/AddN_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_21_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_35"
  op: "L2Loss"
  input: "gradients/AddN_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_22_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_36"
  op: "L2Loss"
  input: "gradients/AddN_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_57_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_37"
  op: "L2Loss"
  input: "gradients/AddN_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_23_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_38"
  op: "L2Loss"
  input: "gradients/AddN_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_58_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_39"
  op: "L2Loss"
  input: "gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_24_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_40"
  op: "L2Loss"
  input: "gradients/AddN_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_25_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_41"
  op: "L2Loss"
  input: "gradients/AddN_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_59_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_42"
  op: "L2Loss"
  input: "gradients/AddN_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_26_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_43"
  op: "L2Loss"
  input: "gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_60_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_44"
  op: "L2Loss"
  input: "gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_27_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_45"
  op: "L2Loss"
  input: "gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_28_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_46"
  op: "L2Loss"
  input: "gradients/AddN_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_29_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_47"
  op: "L2Loss"
  input: "gradients/AddN_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_61_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_48"
  op: "L2Loss"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_30_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_49"
  op: "L2Loss"
  input: "gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_62_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_50"
  op: "L2Loss"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_31_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_51"
  op: "L2Loss"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_63_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_52"
  op: "L2Loss"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_32_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_53"
  op: "L2Loss"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_64_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_54"
  op: "L2Loss"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_33_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_55"
  op: "L2Loss"
  input: "gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_65_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_56"
  op: "L2Loss"
  input: "gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_34_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_57"
  op: "L2Loss"
  input: "gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_66_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_58"
  op: "L2Loss"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_35_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_59"
  op: "L2Loss"
  input: "gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_36_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_60"
  op: "L2Loss"
  input: "gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_37_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_61"
  op: "L2Loss"
  input: "gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_67_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_62"
  op: "L2Loss"
  input: "gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_38_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_63"
  op: "L2Loss"
  input: "gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_39_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_64"
  op: "L2Loss"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_40_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_65"
  op: "L2Loss"
  input: "gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_41_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_66"
  op: "L2Loss"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_42_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_67"
  op: "L2Loss"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_43_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/stack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  input: "global_norm/L2Loss_6"
  input: "global_norm/L2Loss_7"
  input: "global_norm/L2Loss_8"
  input: "global_norm/L2Loss_9"
  input: "global_norm/L2Loss_10"
  input: "global_norm/L2Loss_11"
  input: "global_norm/L2Loss_12"
  input: "global_norm/L2Loss_13"
  input: "global_norm/L2Loss_14"
  input: "global_norm/L2Loss_15"
  input: "global_norm/L2Loss_16"
  input: "global_norm/L2Loss_17"
  input: "global_norm/L2Loss_18"
  input: "global_norm/L2Loss_19"
  input: "global_norm/L2Loss_20"
  input: "global_norm/L2Loss_21"
  input: "global_norm/L2Loss_22"
  input: "global_norm/L2Loss_23"
  input: "global_norm/L2Loss_24"
  input: "global_norm/L2Loss_25"
  input: "global_norm/L2Loss_26"
  input: "global_norm/L2Loss_27"
  input: "global_norm/L2Loss_28"
  input: "global_norm/L2Loss_29"
  input: "global_norm/L2Loss_30"
  input: "global_norm/L2Loss_31"
  input: "global_norm/L2Loss_32"
  input: "global_norm/L2Loss_33"
  input: "global_norm/L2Loss_34"
  input: "global_norm/L2Loss_35"
  input: "global_norm/L2Loss_36"
  input: "global_norm/L2Loss_37"
  input: "global_norm/L2Loss_38"
  input: "global_norm/L2Loss_39"
  input: "global_norm/L2Loss_40"
  input: "global_norm/L2Loss_41"
  input: "global_norm/L2Loss_42"
  input: "global_norm/L2Loss_43"
  input: "global_norm/L2Loss_44"
  input: "global_norm/L2Loss_45"
  input: "global_norm/L2Loss_46"
  input: "global_norm/L2Loss_47"
  input: "global_norm/L2Loss_48"
  input: "global_norm/L2Loss_49"
  input: "global_norm/L2Loss_50"
  input: "global_norm/L2Loss_51"
  input: "global_norm/L2Loss_52"
  input: "global_norm/L2Loss_53"
  input: "global_norm/L2Loss_54"
  input: "global_norm/L2Loss_55"
  input: "global_norm/L2Loss_56"
  input: "global_norm/L2Loss_57"
  input: "global_norm/L2Loss_58"
  input: "global_norm/L2Loss_59"
  input: "global_norm/L2Loss_60"
  input: "global_norm/L2Loss_61"
  input: "global_norm/L2Loss_62"
  input: "global_norm/L2Loss_63"
  input: "global_norm/L2Loss_64"
  input: "global_norm/L2Loss_65"
  input: "global_norm/L2Loss_66"
  input: "global_norm/L2Loss_67"
  attr {
    key: "N"
    value {
      i: 68
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 68
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/stack"
  input: "global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2500.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "clip_by_global_norm/Const"
  input: "clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2500.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/sub"
  op: "Sub"
  input: "global_norm/global_norm"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/add"
  op: "AddV2"
  input: "clip_by_global_norm/mul"
  input: "clip_by_global_norm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/AddN_102"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/AddN_103"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/AddN_101"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_44_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_44_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/AddN_99"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_2_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_2_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/AddN_98"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_3_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_3_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/AddN_97"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_45_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_45_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_7"
  op: "Mul"
  input: "gradients/AddN_96"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_4_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_6"
  op: "Identity"
  input: "clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_4_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_8"
  op: "Mul"
  input: "gradients/AddN_95"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_46_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_7"
  op: "Identity"
  input: "clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_46_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_9"
  op: "Mul"
  input: "gradients/AddN_93"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_5_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_8"
  op: "Identity"
  input: "clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_5_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_10"
  op: "Mul"
  input: "gradients/AddN_92"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_6_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_9"
  op: "Identity"
  input: "clip_by_global_norm/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_6_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_11"
  op: "Mul"
  input: "gradients/AddN_91"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_47_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_10"
  op: "Identity"
  input: "clip_by_global_norm/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_47_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_12"
  op: "Mul"
  input: "gradients/AddN_90"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_7_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_11"
  op: "Identity"
  input: "clip_by_global_norm/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_7_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_13"
  op: "Mul"
  input: "gradients/AddN_89"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_48_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_12"
  op: "Identity"
  input: "clip_by_global_norm/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_48_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_14"
  op: "Mul"
  input: "gradients/AddN_81"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_8_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_13"
  op: "Identity"
  input: "clip_by_global_norm/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_8_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_15"
  op: "Mul"
  input: "gradients/AddN_87"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_9_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_14"
  op: "Identity"
  input: "clip_by_global_norm/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_9_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_16"
  op: "Mul"
  input: "gradients/AddN_86"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_49_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_15"
  op: "Identity"
  input: "clip_by_global_norm/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_49_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_17"
  op: "Mul"
  input: "gradients/AddN_82"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_10_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_16"
  op: "Identity"
  input: "clip_by_global_norm/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_10_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_18"
  op: "Mul"
  input: "gradients/AddN_80"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_11_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_17"
  op: "Identity"
  input: "clip_by_global_norm/mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_11_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_19"
  op: "Mul"
  input: "gradients/AddN_79"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_50_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_18"
  op: "Identity"
  input: "clip_by_global_norm/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_50_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_20"
  op: "Mul"
  input: "gradients/AddN_78"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_12_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_19"
  op: "Identity"
  input: "clip_by_global_norm/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_12_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_21"
  op: "Mul"
  input: "gradients/AddN_77"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_51_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_20"
  op: "Identity"
  input: "clip_by_global_norm/mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_51_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_22"
  op: "Mul"
  input: "gradients/AddN_75"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_13_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_21"
  op: "Identity"
  input: "clip_by_global_norm/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_13_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_23"
  op: "Mul"
  input: "gradients/AddN_74"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_14_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_22"
  op: "Identity"
  input: "clip_by_global_norm/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_14_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_24"
  op: "Mul"
  input: "gradients/AddN_73"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_52_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_23"
  op: "Identity"
  input: "clip_by_global_norm/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_52_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_25"
  op: "Mul"
  input: "gradients/AddN_72"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_15_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_24"
  op: "Identity"
  input: "clip_by_global_norm/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_15_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_26"
  op: "Mul"
  input: "gradients/AddN_71"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_53_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_25"
  op: "Identity"
  input: "clip_by_global_norm/mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_53_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_27"
  op: "Mul"
  input: "gradients/AddN_63"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_16_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_26"
  op: "Identity"
  input: "clip_by_global_norm/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_16_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_28"
  op: "Mul"
  input: "gradients/AddN_69"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_17_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_27"
  op: "Identity"
  input: "clip_by_global_norm/mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_17_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_29"
  op: "Mul"
  input: "gradients/AddN_68"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_54_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_28"
  op: "Identity"
  input: "clip_by_global_norm/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_54_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_30"
  op: "Mul"
  input: "gradients/AddN_64"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_18_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_29"
  op: "Identity"
  input: "clip_by_global_norm/mul_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_18_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_31"
  op: "Mul"
  input: "gradients/AddN_62"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_19_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_30"
  op: "Identity"
  input: "clip_by_global_norm/mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_19_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_32"
  op: "Mul"
  input: "gradients/AddN_61"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_55_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_31"
  op: "Identity"
  input: "clip_by_global_norm/mul_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_55_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_33"
  op: "Mul"
  input: "gradients/AddN_60"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_20_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_32"
  op: "Identity"
  input: "clip_by_global_norm/mul_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_20_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_34"
  op: "Mul"
  input: "gradients/AddN_59"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_56_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_33"
  op: "Identity"
  input: "clip_by_global_norm/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_56_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_35"
  op: "Mul"
  input: "gradients/AddN_57"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_21_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_34"
  op: "Identity"
  input: "clip_by_global_norm/mul_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_21_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_36"
  op: "Mul"
  input: "gradients/AddN_56"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_22_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_35"
  op: "Identity"
  input: "clip_by_global_norm/mul_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_22_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_37"
  op: "Mul"
  input: "gradients/AddN_55"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_57_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_36"
  op: "Identity"
  input: "clip_by_global_norm/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_57_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_38"
  op: "Mul"
  input: "gradients/AddN_54"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_23_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_37"
  op: "Identity"
  input: "clip_by_global_norm/mul_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_23_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_39"
  op: "Mul"
  input: "gradients/AddN_53"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_58_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_38"
  op: "Identity"
  input: "clip_by_global_norm/mul_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_58_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_40"
  op: "Mul"
  input: "gradients/AddN_42"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_24_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_39"
  op: "Identity"
  input: "clip_by_global_norm/mul_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_24_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_41"
  op: "Mul"
  input: "gradients/AddN_52"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_25_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_40"
  op: "Identity"
  input: "clip_by_global_norm/mul_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_25_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_42"
  op: "Mul"
  input: "gradients/AddN_51"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_59_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_41"
  op: "Identity"
  input: "clip_by_global_norm/mul_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_59_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_43"
  op: "Mul"
  input: "gradients/AddN_45"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_26_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_42"
  op: "Identity"
  input: "clip_by_global_norm/mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_26_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_44"
  op: "Mul"
  input: "gradients/AddN_40"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_60_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_43"
  op: "Identity"
  input: "clip_by_global_norm/mul_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_60_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_45"
  op: "Mul"
  input: "gradients/AddN_35"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_27_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_44"
  op: "Identity"
  input: "clip_by_global_norm/mul_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_27_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_46"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_28_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_45"
  op: "Identity"
  input: "clip_by_global_norm/mul_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_28_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_47"
  op: "Mul"
  input: "gradients/AddN_49"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_29_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_46"
  op: "Identity"
  input: "clip_by_global_norm/mul_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_29_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_48"
  op: "Mul"
  input: "gradients/AddN_47"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_61_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_47"
  op: "Identity"
  input: "clip_by_global_norm/mul_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_61_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_49"
  op: "Mul"
  input: "gradients/AddN_30"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_30_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_48"
  op: "Identity"
  input: "clip_by_global_norm/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_30_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_50"
  op: "Mul"
  input: "gradients/AddN_28"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_62_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_49"
  op: "Identity"
  input: "clip_by_global_norm/mul_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_62_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_51"
  op: "Mul"
  input: "gradients/AddN_14"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_31_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_50"
  op: "Identity"
  input: "clip_by_global_norm/mul_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_31_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_52"
  op: "Mul"
  input: "gradients/AddN_12"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_63_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_51"
  op: "Identity"
  input: "clip_by_global_norm/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_63_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_53"
  op: "Mul"
  input: "gradients/AddN_21"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_32_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_52"
  op: "Identity"
  input: "clip_by_global_norm/mul_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_32_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_54"
  op: "Mul"
  input: "gradients/AddN_17"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_64_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_53"
  op: "Identity"
  input: "clip_by_global_norm/mul_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_64_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_55"
  op: "Mul"
  input: "gradients/AddN_25"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_33_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_54"
  op: "Identity"
  input: "clip_by_global_norm/mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_33_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_56"
  op: "Mul"
  input: "gradients/AddN_23"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_65_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_55"
  op: "Identity"
  input: "clip_by_global_norm/mul_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_65_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_57"
  op: "Mul"
  input: "gradients/AddN_36"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_34_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_56"
  op: "Identity"
  input: "clip_by_global_norm/mul_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_34_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_58"
  op: "Mul"
  input: "gradients/AddN_32"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_66_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_57"
  op: "Identity"
  input: "clip_by_global_norm/mul_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_66_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_59"
  op: "Mul"
  input: "gradients/AddN_33"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_35_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_58"
  op: "Identity"
  input: "clip_by_global_norm/mul_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_35_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_60"
  op: "Mul"
  input: "gradients/AddN_31"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_36_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_59"
  op: "Identity"
  input: "clip_by_global_norm/mul_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_36_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_61"
  op: "Mul"
  input: "gradients/AddN_39"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_37_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_60"
  op: "Identity"
  input: "clip_by_global_norm/mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_37_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_62"
  op: "Mul"
  input: "gradients/AddN_38"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_67_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_61"
  op: "Identity"
  input: "clip_by_global_norm/mul_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_67_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_63"
  op: "Mul"
  input: "gradients/AddN_19"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_38_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_62"
  op: "Identity"
  input: "clip_by_global_norm/mul_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_38_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_64"
  op: "Mul"
  input: "gradients/AddN_34"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_39_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_63"
  op: "Identity"
  input: "clip_by_global_norm/mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_39_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_65"
  op: "Mul"
  input: "gradients/AddN_24"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_40_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_64"
  op: "Identity"
  input: "clip_by_global_norm/mul_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_40_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_66"
  op: "Mul"
  input: "gradients/AddN_26"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_41_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_65"
  op: "Identity"
  input: "clip_by_global_norm/mul_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_41_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_67"
  op: "Mul"
  input: "gradients/AddN_16"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_42_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_66"
  op: "Identity"
  input: "clip_by_global_norm/mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_42_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_68"
  op: "Mul"
  input: "gradients/AddN_18"
  input: "clip_by_global_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_43_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_67"
  op: "Identity"
  input: "clip_by_global_norm/mul_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_43_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "sub_38/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2500.0
      }
    }
  }
}
node {
  name: "sub_38"
  op: "Sub"
  input: "global_norm/global_norm"
  input: "sub_38/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Relu_23"
  op: "Relu"
  input: "sub_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/w/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\026\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/w/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/w/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv1/w/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv1/w/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 22
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv1/w/Momentum"
    }
  }
}
node {
  name: "conv1/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv1/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "conv1/w/Momentum"
  input: "conv1/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 22
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ginputw/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ginputw"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\023\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "ginputw/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ginputw"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ginputw/Momentum/Initializer/zeros"
  op: "Fill"
  input: "ginputw/Momentum/Initializer/zeros/shape_as_tensor"
  input: "ginputw/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ginputw"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ginputw/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ginputw"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 19
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "ginputw/Momentum"
    }
  }
}
node {
  name: "ginputw/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "ginputw/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ginputw"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ginputw/Momentum/Assign"
  op: "AssignVariableOp"
  input: "ginputw/Momentum"
  input: "ginputw/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ginputw/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "ginputw/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ginputw"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/norm1/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/norm1/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv1/norm1/beta/Momentum"
    }
  }
}
node {
  name: "rconv1/norm1/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv1/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv1/norm1/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv1/norm1/beta/Momentum"
  input: "rconv1/norm1/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/norm1/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/w1/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "rconv1/w1/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/w1/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv1/w1/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv1/w1/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv1/w1/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv1/w1/Momentum"
    }
  }
}
node {
  name: "rconv1/w1/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv1/w1/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv1/w1/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv1/w1/Momentum"
  input: "rconv1/w1/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/w1/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/w1/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/norm2/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/norm2/gamma/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv1/norm2/gamma/Momentum"
    }
  }
}
node {
  name: "rconv1/norm2/gamma/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv1/norm2/gamma/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv1/norm2/gamma/Momentum"
  input: "rconv1/norm2/gamma/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/norm2/gamma/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/norm2/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/norm2/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv1/norm2/beta/Momentum"
    }
  }
}
node {
  name: "rconv1/norm2/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv1/norm2/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv1/norm2/beta/Momentum"
  input: "rconv1/norm2/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/norm2/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/w2/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "rconv1/w2/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv1/w2/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv1/w2/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv1/w2/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv1/w2/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv1/w2/Momentum"
    }
  }
}
node {
  name: "rconv1/w2/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv1/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv1/w2/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv1/w2/Momentum"
  input: "rconv1/w2/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv1/w2/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv1/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/norm1/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/norm1/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv2/norm1/beta/Momentum"
    }
  }
}
node {
  name: "rconv2/norm1/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv2/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv2/norm1/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv2/norm1/beta/Momentum"
  input: "rconv2/norm1/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/norm1/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/w1/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "rconv2/w1/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/w1/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv2/w1/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv2/w1/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv2/w1/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv2/w1/Momentum"
    }
  }
}
node {
  name: "rconv2/w1/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv2/w1/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv2/w1/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv2/w1/Momentum"
  input: "rconv2/w1/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/w1/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/w1/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/norm2/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/norm2/gamma/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv2/norm2/gamma/Momentum"
    }
  }
}
node {
  name: "rconv2/norm2/gamma/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv2/norm2/gamma/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv2/norm2/gamma/Momentum"
  input: "rconv2/norm2/gamma/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/norm2/gamma/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/norm2/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/norm2/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv2/norm2/beta/Momentum"
    }
  }
}
node {
  name: "rconv2/norm2/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv2/norm2/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv2/norm2/beta/Momentum"
  input: "rconv2/norm2/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/norm2/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/w2/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "rconv2/w2/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv2/w2/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv2/w2/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv2/w2/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv2/w2/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv2/w2/Momentum"
    }
  }
}
node {
  name: "rconv2/w2/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv2/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv2/w2/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv2/w2/Momentum"
  input: "rconv2/w2/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv2/w2/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv2/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm1/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/norm1/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/norm1/beta/Momentum"
    }
  }
}
node {
  name: "rconv3/norm1/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/norm1/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv3/norm1/beta/Momentum"
  input: "rconv3/norm1/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm1/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w1a/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "rconv3/w1a/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/w1a/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv3/w1a/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv3/w1a/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv3/w1a/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/w1a/Momentum"
    }
  }
}
node {
  name: "rconv3/w1a/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/w1a/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/w1a/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv3/w1a/Momentum"
  input: "rconv3/w1a/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w1a/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1a/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w1b/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "rconv3/w1b/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/w1b/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv3/w1b/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv3/w1b/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv3/w1b/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/w1b/Momentum"
    }
  }
}
node {
  name: "rconv3/w1b/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/w1b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/w1b/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv3/w1b/Momentum"
  input: "rconv3/w1b/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w1b/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm1b/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1b/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/norm1b/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1b/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/norm1b/beta/Momentum"
    }
  }
}
node {
  name: "rconv3/norm1b/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1b/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1b/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/norm1b/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv3/norm1b/beta/Momentum"
  input: "rconv3/norm1b/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm1b/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm1b/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1b/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w1r/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "rconv3/w1r/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/w1r/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv3/w1r/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv3/w1r/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv3/w1r/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/w1r/Momentum"
    }
  }
}
node {
  name: "rconv3/w1r/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/w1r/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/w1r/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv3/w1r/Momentum"
  input: "rconv3/w1r/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w1r/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w1r/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm2/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/norm2/gamma/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/norm2/gamma/Momentum"
    }
  }
}
node {
  name: "rconv3/norm2/gamma/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/norm2/gamma/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv3/norm2/gamma/Momentum"
  input: "rconv3/norm2/gamma/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm2/gamma/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm2/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/norm2/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/norm2/beta/Momentum"
    }
  }
}
node {
  name: "rconv3/norm2/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/norm2/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv3/norm2/beta/Momentum"
  input: "rconv3/norm2/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/norm2/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w2/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "rconv3/w2/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv3/w2/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv3/w2/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv3/w2/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv3/w2/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv3/w2/Momentum"
    }
  }
}
node {
  name: "rconv3/w2/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv3/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv3/w2/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv3/w2/Momentum"
  input: "rconv3/w2/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv3/w2/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv3/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/norm1/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv4/norm1/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv4/norm1/beta/Momentum"
    }
  }
}
node {
  name: "rconv4/norm1/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv4/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv4/norm1/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv4/norm1/beta/Momentum"
  input: "rconv4/norm1/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/norm1/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/w1/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "rconv4/w1/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv4/w1/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv4/w1/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv4/w1/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv4/w1/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv4/w1/Momentum"
    }
  }
}
node {
  name: "rconv4/w1/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv4/w1/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv4/w1/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv4/w1/Momentum"
  input: "rconv4/w1/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/w1/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/w1/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/norm2/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv4/norm2/gamma/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv4/norm2/gamma/Momentum"
    }
  }
}
node {
  name: "rconv4/norm2/gamma/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv4/norm2/gamma/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv4/norm2/gamma/Momentum"
  input: "rconv4/norm2/gamma/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/norm2/gamma/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/norm2/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv4/norm2/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv4/norm2/beta/Momentum"
    }
  }
}
node {
  name: "rconv4/norm2/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv4/norm2/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv4/norm2/beta/Momentum"
  input: "rconv4/norm2/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/norm2/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/w2/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "rconv4/w2/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv4/w2/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv4/w2/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv4/w2/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv4/w2/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv4/w2/Momentum"
    }
  }
}
node {
  name: "rconv4/w2/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv4/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv4/w2/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv4/w2/Momentum"
  input: "rconv4/w2/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv4/w2/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv4/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm1/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/norm1/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/norm1/beta/Momentum"
    }
  }
}
node {
  name: "rconv5/norm1/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/norm1/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv5/norm1/beta/Momentum"
  input: "rconv5/norm1/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm1/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w1a/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "rconv5/w1a/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/w1a/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv5/w1a/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv5/w1a/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv5/w1a/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/w1a/Momentum"
    }
  }
}
node {
  name: "rconv5/w1a/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/w1a/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/w1a/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv5/w1a/Momentum"
  input: "rconv5/w1a/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w1a/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1a/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1a"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w1b/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "rconv5/w1b/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/w1b/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv5/w1b/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv5/w1b/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv5/w1b/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/w1b/Momentum"
    }
  }
}
node {
  name: "rconv5/w1b/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/w1b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/w1b/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv5/w1b/Momentum"
  input: "rconv5/w1b/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w1b/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm1b/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1b/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/norm1b/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1b/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/norm1b/beta/Momentum"
    }
  }
}
node {
  name: "rconv5/norm1b/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1b/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1b/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/norm1b/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv5/norm1b/beta/Momentum"
  input: "rconv5/norm1b/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm1b/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm1b/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1b/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w1r/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "rconv5/w1r/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/w1r/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv5/w1r/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv5/w1r/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv5/w1r/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/w1r/Momentum"
    }
  }
}
node {
  name: "rconv5/w1r/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/w1r/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/w1r/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv5/w1r/Momentum"
  input: "rconv5/w1r/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w1r/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w1r/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1r"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm2/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/norm2/gamma/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/norm2/gamma/Momentum"
    }
  }
}
node {
  name: "rconv5/norm2/gamma/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/norm2/gamma/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv5/norm2/gamma/Momentum"
  input: "rconv5/norm2/gamma/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm2/gamma/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm2/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/norm2/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/norm2/beta/Momentum"
    }
  }
}
node {
  name: "rconv5/norm2/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/norm2/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv5/norm2/beta/Momentum"
  input: "rconv5/norm2/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/norm2/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w2/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "rconv5/w2/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv5/w2/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv5/w2/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv5/w2/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv5/w2/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv5/w2/Momentum"
    }
  }
}
node {
  name: "rconv5/w2/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv5/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv5/w2/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv5/w2/Momentum"
  input: "rconv5/w2/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv5/w2/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv5/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/norm1/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv6/norm1/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv6/norm1/beta/Momentum"
    }
  }
}
node {
  name: "rconv6/norm1/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv6/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv6/norm1/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv6/norm1/beta/Momentum"
  input: "rconv6/norm1/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/norm1/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/w1/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "rconv6/w1/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv6/w1/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv6/w1/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv6/w1/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv6/w1/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv6/w1/Momentum"
    }
  }
}
node {
  name: "rconv6/w1/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv6/w1/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv6/w1/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv6/w1/Momentum"
  input: "rconv6/w1/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/w1/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/w1/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/norm2/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv6/norm2/gamma/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv6/norm2/gamma/Momentum"
    }
  }
}
node {
  name: "rconv6/norm2/gamma/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv6/norm2/gamma/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv6/norm2/gamma/Momentum"
  input: "rconv6/norm2/gamma/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/norm2/gamma/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/norm2/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv6/norm2/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv6/norm2/beta/Momentum"
    }
  }
}
node {
  name: "rconv6/norm2/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv6/norm2/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv6/norm2/beta/Momentum"
  input: "rconv6/norm2/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/norm2/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/norm2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/w2/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "rconv6/w2/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rconv6/w2/Momentum/Initializer/zeros"
  op: "Fill"
  input: "rconv6/w2/Momentum/Initializer/zeros/shape_as_tensor"
  input: "rconv6/w2/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rconv6/w2/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rconv6/w2/Momentum"
    }
  }
}
node {
  name: "rconv6/w2/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rconv6/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rconv6/w2/Momentum/Assign"
  op: "AssignVariableOp"
  input: "rconv6/w2/Momentum"
  input: "rconv6/w2/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rconv6/w2/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rconv6/w2/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "trunk/norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@trunk/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "trunk/norm/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@trunk/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "trunk/norm/beta/Momentum"
    }
  }
}
node {
  name: "trunk/norm/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "trunk/norm/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@trunk/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "trunk/norm/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "trunk/norm/beta/Momentum"
  input: "trunk/norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "trunk/norm/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "trunk/norm/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@trunk/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1/intermediate_conv/w/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/intermediate_conv/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "p1/intermediate_conv/w/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/intermediate_conv/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "p1/intermediate_conv/w/Momentum/Initializer/zeros"
  op: "Fill"
  input: "p1/intermediate_conv/w/Momentum/Initializer/zeros/shape_as_tensor"
  input: "p1/intermediate_conv/w/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/intermediate_conv/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "p1/intermediate_conv/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/intermediate_conv/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "p1/intermediate_conv/w/Momentum"
    }
  }
}
node {
  name: "p1/intermediate_conv/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "p1/intermediate_conv/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/intermediate_conv/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p1/intermediate_conv/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "p1/intermediate_conv/w/Momentum"
  input: "p1/intermediate_conv/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1/intermediate_conv/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1/intermediate_conv/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/intermediate_conv/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g1/w/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "g1/w/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "g1/w/Momentum/Initializer/zeros"
  op: "Fill"
  input: "g1/w/Momentum/Initializer/zeros/shape_as_tensor"
  input: "g1/w/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "g1/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "g1/w/Momentum"
    }
  }
}
node {
  name: "g1/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "g1/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "g1/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "g1/w/Momentum"
  input: "g1/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g1/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "g1/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g1/norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "g1/norm/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "g1/norm/beta/Momentum"
    }
  }
}
node {
  name: "g1/norm/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "g1/norm/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "g1/norm/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "g1/norm/beta/Momentum"
  input: "g1/norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "g1/norm/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "g1/norm/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "matmulg2w/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulg2w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "matmulg2w/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulg2w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "matmulg2w/Momentum/Initializer/zeros"
  op: "Fill"
  input: "matmulg2w/Momentum/Initializer/zeros/shape_as_tensor"
  input: "matmulg2w/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulg2w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "matmulg2w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulg2w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "matmulg2w/Momentum"
    }
  }
}
node {
  name: "matmulg2w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "matmulg2w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulg2w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "matmulg2w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "matmulg2w/Momentum"
  input: "matmulg2w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "matmulg2w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "matmulg2w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulg2w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1/norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "p1/norm/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "p1/norm/beta/Momentum"
    }
  }
}
node {
  name: "p1/norm/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "p1/norm/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p1/norm/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "p1/norm/beta/Momentum"
  input: "p1/norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1/norm/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1/norm/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p2/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "p2/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "p2/w/Momentum"
    }
  }
}
node {
  name: "p2/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "p2/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p2/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "p2/w/Momentum"
  input: "p2/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p2/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p2/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "matmulpass/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulpass"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "matmulpass/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulpass"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "matmulpass/Momentum"
    }
  }
}
node {
  name: "matmulpass/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "matmulpass/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulpass"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "matmulpass/Momentum/Assign"
  op: "AssignVariableOp"
  input: "matmulpass/Momentum"
  input: "matmulpass/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "matmulpass/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "matmulpass/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulpass"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v1/w/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "v1/w/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v1/w/Momentum/Initializer/zeros"
  op: "Fill"
  input: "v1/w/Momentum/Initializer/zeros/shape_as_tensor"
  input: "v1/w/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "v1/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v1/w/Momentum"
    }
  }
}
node {
  name: "v1/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v1/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v1/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "v1/w/Momentum"
  input: "v1/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v1/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v1/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v1/norm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v1/norm/beta/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v1/norm/beta/Momentum"
    }
  }
}
node {
  name: "v1/norm/beta/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v1/norm/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v1/norm/beta/Momentum/Assign"
  op: "AssignVariableOp"
  input: "v1/norm/beta/Momentum"
  input: "v1/norm/beta/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v1/norm/beta/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v1/norm/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/norm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v2/w/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "v2/w/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v2/w/Momentum/Initializer/zeros"
  op: "Fill"
  input: "v2/w/Momentum/Initializer/zeros/shape_as_tensor"
  input: "v2/w/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "v2/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v2/w/Momentum"
    }
  }
}
node {
  name: "v2/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v2/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v2/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "v2/w/Momentum"
  input: "v2/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v2/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v2/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v2/b/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v2/b/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v2/b/Momentum"
    }
  }
}
node {
  name: "v2/b/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v2/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v2/b/Momentum/Assign"
  op: "AssignVariableOp"
  input: "v2/b/Momentum"
  input: "v2/b/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v2/b/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v2/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v3/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v3/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v3/w/Momentum"
    }
  }
}
node {
  name: "v3/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v3/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v3/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "v3/w/Momentum"
  input: "v3/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v3/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v3/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v3/b/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v3/b/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "v3/b/Momentum"
    }
  }
}
node {
  name: "v3/b/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "v3/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "v3/b/Momentum/Assign"
  op: "AssignVariableOp"
  input: "v3/b/Momentum"
  input: "v3/b/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v3/b/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "v3/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mv3/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mv3/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mv3/w/Momentum"
    }
  }
}
node {
  name: "mv3/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mv3/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mv3/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "mv3/w/Momentum"
  input: "mv3/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mv3/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mv3/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mv3/b/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mv3/b/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mv3/b/Momentum"
    }
  }
}
node {
  name: "mv3/b/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mv3/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mv3/b/Momentum/Assign"
  op: "AssignVariableOp"
  input: "mv3/b/Momentum"
  input: "mv3/b/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mv3/b/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mv3/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mmv3/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mmv3/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mmv3/w/Momentum"
    }
  }
}
node {
  name: "mmv3/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mmv3/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mmv3/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "mmv3/w/Momentum"
  input: "mmv3/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mmv3/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mmv3/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mmv3/b/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mmv3/b/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mmv3/b/Momentum"
    }
  }
}
node {
  name: "mmv3/b/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mmv3/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mmv3/b/Momentum/Assign"
  op: "AssignVariableOp"
  input: "mmv3/b/Momentum"
  input: "mmv3/b/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mmv3/b/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mmv3/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2/w/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "sb2/w/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sb2/w/Momentum/Initializer/zeros"
  op: "Fill"
  input: "sb2/w/Momentum/Initializer/zeros/shape_as_tensor"
  input: "sb2/w/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sb2/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sb2/w/Momentum"
    }
  }
}
node {
  name: "sb2/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sb2/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sb2/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "sb2/w/Momentum"
  input: "sb2/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2/b/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sb2/b/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sb2/b/Momentum"
    }
  }
}
node {
  name: "sb2/b/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sb2/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sb2/b/Momentum/Assign"
  op: "AssignVariableOp"
  input: "sb2/b/Momentum"
  input: "sb2/b/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2/b/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2_offset/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_offset/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sb2_offset/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_offset/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sb2_offset/w/Momentum"
    }
  }
}
node {
  name: "sb2_offset/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sb2_offset/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_offset/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sb2_offset/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "sb2_offset/w/Momentum"
  input: "sb2_offset/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2_offset/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2_offset/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_offset/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2_parity/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_parity/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sb2_parity/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_parity/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sb2_parity/w/Momentum"
    }
  }
}
node {
  name: "sb2_parity/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sb2_parity/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_parity/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sb2_parity/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "sb2_parity/w/Momentum"
  input: "sb2_parity/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb2_parity/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb2_parity/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_parity/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbscale2/w/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "sbscale2/w/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sbscale2/w/Momentum/Initializer/zeros"
  op: "Fill"
  input: "sbscale2/w/Momentum/Initializer/zeros/shape_as_tensor"
  input: "sbscale2/w/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sbscale2/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sbscale2/w/Momentum"
    }
  }
}
node {
  name: "sbscale2/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sbscale2/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbscale2/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "sbscale2/w/Momentum"
  input: "sbscale2/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbscale2/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale2/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbscale2/b/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sbscale2/b/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sbscale2/b/Momentum"
    }
  }
}
node {
  name: "sbscale2/b/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sbscale2/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbscale2/b/Momentum/Assign"
  op: "AssignVariableOp"
  input: "sbscale2/b/Momentum"
  input: "sbscale2/b/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbscale2/b/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale2/b/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb3/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sb3/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sb3/w/Momentum"
    }
  }
}
node {
  name: "sb3/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sb3/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sb3/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "sb3/w/Momentum"
  input: "sb3/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sb3/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sb3/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbscale3/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sbscale3/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sbscale3/w/Momentum"
    }
  }
}
node {
  name: "sbscale3/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sbscale3/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbscale3/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "sbscale3/w/Momentum"
  input: "sbscale3/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbscale3/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbscale3/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale3/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 48
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vownership/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vownership/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vownership/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vownership/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vownership/w/Momentum"
    }
  }
}
node {
  name: "vownership/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vownership/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vownership/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vownership/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "vownership/w/Momentum"
  input: "vownership/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vownership/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vownership/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vownership/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vscoring/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vscoring/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vscoring/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vscoring/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vscoring/w/Momentum"
    }
  }
}
node {
  name: "vscoring/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vscoring/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vscoring/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vscoring/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "vscoring/w/Momentum"
  input: "vscoring/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vscoring/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vscoring/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vscoring/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "futurepos/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@futurepos/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "futurepos/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@futurepos/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "futurepos/w/Momentum"
    }
  }
}
node {
  name: "futurepos/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "futurepos/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@futurepos/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "futurepos/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "futurepos/w/Momentum"
  input: "futurepos/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "futurepos/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "futurepos/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@futurepos/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "seki/w/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seki/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seki/w/Momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seki/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "seki/w/Momentum"
    }
  }
}
node {
  name: "seki/w/Momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "seki/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seki/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seki/w/Momentum/Assign"
  op: "AssignVariableOp"
  input: "seki/w/Momentum"
  input: "seki/w/Momentum/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "seki/w/Momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "seki/w/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seki/w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Momentum/momentum"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Momentum/update_conv1/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "conv1/w"
  input: "conv1/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_ginputw/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "ginputw"
  input: "ginputw/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ginputw"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv1/norm1/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv1/norm1/beta"
  input: "rconv1/norm1/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv1/w1/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv1/w1"
  input: "rconv1/w1/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv1/norm2/gamma/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv1/norm2/gamma"
  input: "rconv1/norm2/gamma/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv1/norm2/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv1/norm2/beta"
  input: "rconv1/norm2/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/norm2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv1/w2/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv1/w2"
  input: "rconv1/w2/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv1/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv2/norm1/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv2/norm1/beta"
  input: "rconv2/norm1/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv2/w1/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv2/w1"
  input: "rconv2/w1/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv2/norm2/gamma/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv2/norm2/gamma"
  input: "rconv2/norm2/gamma/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv2/norm2/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv2/norm2/beta"
  input: "rconv2/norm2/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/norm2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv2/w2/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv2/w2"
  input: "rconv2/w2/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv2/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv3/norm1/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv3/norm1/beta"
  input: "rconv3/norm1/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv3/w1a/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv3/w1a"
  input: "rconv3/w1a/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_13"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1a"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv3/w1b/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv3/w1b"
  input: "rconv3/w1b/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_14"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv3/norm1b/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv3/norm1b/beta"
  input: "rconv3/norm1b/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_15"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm1b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv3/w1r/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv3/w1r"
  input: "rconv3/w1r/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_16"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w1r"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv3/norm2/gamma/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv3/norm2/gamma"
  input: "rconv3/norm2/gamma/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_17"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv3/norm2/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv3/norm2/beta"
  input: "rconv3/norm2/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_18"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/norm2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv3/w2/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv3/w2"
  input: "rconv3/w2/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_19"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv3/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv4/norm1/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv4/norm1/beta"
  input: "rconv4/norm1/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_20"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv4/w1/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv4/w1"
  input: "rconv4/w1/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_21"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv4/norm2/gamma/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv4/norm2/gamma"
  input: "rconv4/norm2/gamma/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_22"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv4/norm2/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv4/norm2/beta"
  input: "rconv4/norm2/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_23"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/norm2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv4/w2/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv4/w2"
  input: "rconv4/w2/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_24"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv4/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv5/norm1/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv5/norm1/beta"
  input: "rconv5/norm1/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_25"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv5/w1a/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv5/w1a"
  input: "rconv5/w1a/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_26"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1a"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv5/w1b/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv5/w1b"
  input: "rconv5/w1b/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_27"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv5/norm1b/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv5/norm1b/beta"
  input: "rconv5/norm1b/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_28"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm1b/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv5/w1r/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv5/w1r"
  input: "rconv5/w1r/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_29"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w1r"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv5/norm2/gamma/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv5/norm2/gamma"
  input: "rconv5/norm2/gamma/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_30"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv5/norm2/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv5/norm2/beta"
  input: "rconv5/norm2/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_31"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/norm2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv5/w2/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv5/w2"
  input: "rconv5/w2/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_32"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv5/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv6/norm1/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv6/norm1/beta"
  input: "rconv6/norm1/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_33"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv6/w1/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv6/w1"
  input: "rconv6/w1/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_34"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv6/norm2/gamma/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv6/norm2/gamma"
  input: "rconv6/norm2/gamma/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_35"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv6/norm2/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv6/norm2/beta"
  input: "rconv6/norm2/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_36"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/norm2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_rconv6/w2/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "rconv6/w2"
  input: "rconv6/w2/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_37"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rconv6/w2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_trunk/norm/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "trunk/norm/beta"
  input: "trunk/norm/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_38"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@trunk/norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_p1/intermediate_conv/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "p1/intermediate_conv/w"
  input: "p1/intermediate_conv/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_39"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/intermediate_conv/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_g1/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "g1/w"
  input: "g1/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_40"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_g1/norm/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "g1/norm/beta"
  input: "g1/norm/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_41"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@g1/norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_matmulg2w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "matmulg2w"
  input: "matmulg2w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_42"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulg2w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_p1/norm/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "p1/norm/beta"
  input: "p1/norm/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_43"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1/norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_p2/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "p2/w"
  input: "p2/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_44"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p2/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_matmulpass/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "matmulpass"
  input: "matmulpass/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_45"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@matmulpass"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_v1/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "v1/w"
  input: "v1/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_46"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_v1/norm/beta/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "v1/norm/beta"
  input: "v1/norm/beta/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_47"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v1/norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_v2/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "v2/w"
  input: "v2/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_48"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_v2/b/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "v2/b"
  input: "v2/b/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_49"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_v3/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "v3/w"
  input: "v3/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_50"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_v3/b/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "v3/b"
  input: "v3/b/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_51"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v3/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_mv3/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "mv3/w"
  input: "mv3/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_52"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_mv3/b/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "mv3/b"
  input: "mv3/b/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_53"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mv3/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_mmv3/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "mmv3/w"
  input: "mmv3/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_54"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_mmv3/b/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "mmv3/b"
  input: "mmv3/b/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_55"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mmv3/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_sb2/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "sb2/w"
  input: "sb2/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_56"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_sb2/b/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "sb2/b"
  input: "sb2/b/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_57"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_sb2_offset/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "sb2_offset/w"
  input: "sb2_offset/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_58"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_offset/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_sb2_parity/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "sb2_parity/w"
  input: "sb2_parity/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_59"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb2_parity/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_sbscale2/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "sbscale2/w"
  input: "sbscale2/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_60"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_sbscale2/b/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "sbscale2/b"
  input: "sbscale2/b/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_61"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale2/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_sb3/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "sb3/w"
  input: "sb3/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_62"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sb3/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_sbscale3/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "sbscale3/w"
  input: "sbscale3/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_63"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbscale3/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_vownership/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "vownership/w"
  input: "vownership/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_64"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vownership/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_vscoring/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "vscoring/w"
  input: "vscoring/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_65"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vscoring/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_futurepos/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "futurepos/w"
  input: "futurepos/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_66"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@futurepos/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update_seki/w/ResourceApplyMomentum"
  op: "ResourceApplyMomentum"
  input: "seki/w"
  input: "seki/w/Momentum"
  input: "mul_183"
  input: "clip_by_global_norm/clip_by_global_norm/_67"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seki/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: true
    }
  }
}
node {
  name: "Momentum/update"
  op: "NoOp"
  input: "^Momentum/update_conv1/w/ResourceApplyMomentum"
  input: "^Momentum/update_futurepos/w/ResourceApplyMomentum"
  input: "^Momentum/update_g1/norm/beta/ResourceApplyMomentum"
  input: "^Momentum/update_g1/w/ResourceApplyMomentum"
  input: "^Momentum/update_ginputw/ResourceApplyMomentum"
  input: "^Momentum/update_matmulg2w/ResourceApplyMomentum"
  input: "^Momentum/update_matmulpass/ResourceApplyMomentum"
  input: "^Momentum/update_mmv3/b/ResourceApplyMomentum"
  input: "^Momentum/update_mmv3/w/ResourceApplyMomentum"
  input: "^Momentum/update_mv3/b/ResourceApplyMomentum"
  input: "^Momentum/update_mv3/w/ResourceApplyMomentum"
  input: "^Momentum/update_p1/intermediate_conv/w/ResourceApplyMomentum"
  input: "^Momentum/update_p1/norm/beta/ResourceApplyMomentum"
  input: "^Momentum/update_p2/w/ResourceApplyMomentum"
  input: "^Momentum/update_rconv1/norm1/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv1/norm2/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv1/norm2/gamma/ResourceApplyMomentum"
  input: "^Momentum/update_rconv1/w1/ResourceApplyMomentum"
  input: "^Momentum/update_rconv1/w2/ResourceApplyMomentum"
  input: "^Momentum/update_rconv2/norm1/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv2/norm2/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv2/norm2/gamma/ResourceApplyMomentum"
  input: "^Momentum/update_rconv2/w1/ResourceApplyMomentum"
  input: "^Momentum/update_rconv2/w2/ResourceApplyMomentum"
  input: "^Momentum/update_rconv3/norm1/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv3/norm1b/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv3/norm2/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv3/norm2/gamma/ResourceApplyMomentum"
  input: "^Momentum/update_rconv3/w1a/ResourceApplyMomentum"
  input: "^Momentum/update_rconv3/w1b/ResourceApplyMomentum"
  input: "^Momentum/update_rconv3/w1r/ResourceApplyMomentum"
  input: "^Momentum/update_rconv3/w2/ResourceApplyMomentum"
  input: "^Momentum/update_rconv4/norm1/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv4/norm2/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv4/norm2/gamma/ResourceApplyMomentum"
  input: "^Momentum/update_rconv4/w1/ResourceApplyMomentum"
  input: "^Momentum/update_rconv4/w2/ResourceApplyMomentum"
  input: "^Momentum/update_rconv5/norm1/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv5/norm1b/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv5/norm2/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv5/norm2/gamma/ResourceApplyMomentum"
  input: "^Momentum/update_rconv5/w1a/ResourceApplyMomentum"
  input: "^Momentum/update_rconv5/w1b/ResourceApplyMomentum"
  input: "^Momentum/update_rconv5/w1r/ResourceApplyMomentum"
  input: "^Momentum/update_rconv5/w2/ResourceApplyMomentum"
  input: "^Momentum/update_rconv6/norm1/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv6/norm2/beta/ResourceApplyMomentum"
  input: "^Momentum/update_rconv6/norm2/gamma/ResourceApplyMomentum"
  input: "^Momentum/update_rconv6/w1/ResourceApplyMomentum"
  input: "^Momentum/update_rconv6/w2/ResourceApplyMomentum"
  input: "^Momentum/update_sb2/b/ResourceApplyMomentum"
  input: "^Momentum/update_sb2/w/ResourceApplyMomentum"
  input: "^Momentum/update_sb2_offset/w/ResourceApplyMomentum"
  input: "^Momentum/update_sb2_parity/w/ResourceApplyMomentum"
  input: "^Momentum/update_sb3/w/ResourceApplyMomentum"
  input: "^Momentum/update_sbscale2/b/ResourceApplyMomentum"
  input: "^Momentum/update_sbscale2/w/ResourceApplyMomentum"
  input: "^Momentum/update_sbscale3/w/ResourceApplyMomentum"
  input: "^Momentum/update_seki/w/ResourceApplyMomentum"
  input: "^Momentum/update_trunk/norm/beta/ResourceApplyMomentum"
  input: "^Momentum/update_v1/norm/beta/ResourceApplyMomentum"
  input: "^Momentum/update_v1/w/ResourceApplyMomentum"
  input: "^Momentum/update_v2/b/ResourceApplyMomentum"
  input: "^Momentum/update_v2/w/ResourceApplyMomentum"
  input: "^Momentum/update_v3/b/ResourceApplyMomentum"
  input: "^Momentum/update_v3/w/ResourceApplyMomentum"
  input: "^Momentum/update_vownership/w/ResourceApplyMomentum"
  input: "^Momentum/update_vscoring/w/ResourceApplyMomentum"
}
node {
  name: "Momentum/Const"
  op: "Const"
  input: "^Momentum/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Momentum"
  op: "AssignAddVariableOp"
  input: "global_step"
  input: "Momentum/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "mul_184"
  op: "Mul"
  input: "mul_88"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_40"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/p0loss"
  op: "Sum"
  input: "mul_184"
  input: "Const_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_41"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/p0loss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "p0loss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p0loss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "p0loss/moving_wx"
    }
  }
}
node {
  name: "p0loss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "p0loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p0loss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "p0loss/moving_wx"
  input: "zeros_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p0loss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p0loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "p0loss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p0loss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "p0loss/moving_w"
    }
  }
}
node {
  name: "p0loss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "p0loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p0loss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "p0loss/moving_w"
  input: "zeros_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p0loss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p0loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p0loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg/sub"
  op: "Sub"
  input: "p0loss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/p0loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg/mul"
  op: "Mul"
  input: "p0loss/AssignMovingAvg/sub"
  input: "p0loss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "p0loss/moving_wx"
  input: "p0loss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "p0loss/moving_wx"
  input: "^p0loss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p0loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "p0loss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/p0loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "p0loss/AssignMovingAvg_1/sub"
  input: "p0loss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "p0loss/moving_w"
  input: "p0loss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p0loss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "p0loss/moving_w"
  input: "^p0loss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p0loss/group_deps"
  op: "NoOp"
  input: "^p0loss/AssignMovingAvg/AssignSubVariableOp"
  input: "^p0loss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_185/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_185"
  op: "Mul"
  input: "printstats/wx/p0loss"
  input: "mul_185/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "p0loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_81"
  op: "AddV2"
  input: "ReadVariableOp_1"
  input: "mul_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_186/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_186"
  op: "Mul"
  input: "printstats/w/p0loss"
  input: "mul_186/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "p0loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_82"
  op: "AddV2"
  input: "ReadVariableOp_2"
  input: "mul_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_23"
  op: "RealDiv"
  input: "add_81"
  input: "add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_187"
  op: "Mul"
  input: "mul_90"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_42"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/p1loss"
  op: "Sum"
  input: "mul_187"
  input: "Const_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_43"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/p1loss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "p1loss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1loss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "p1loss/moving_wx"
    }
  }
}
node {
  name: "p1loss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "p1loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p1loss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "p1loss/moving_wx"
  input: "zeros_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1loss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "p1loss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@p1loss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "p1loss/moving_w"
    }
  }
}
node {
  name: "p1loss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "p1loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p1loss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "p1loss/moving_w"
  input: "zeros_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1loss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg/sub"
  op: "Sub"
  input: "p1loss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/p1loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg/mul"
  op: "Mul"
  input: "p1loss/AssignMovingAvg/sub"
  input: "p1loss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "p1loss/moving_wx"
  input: "p1loss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "p1loss/moving_wx"
  input: "^p1loss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "p1loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "p1loss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/p1loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "p1loss/AssignMovingAvg_1/sub"
  input: "p1loss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "p1loss/moving_w"
  input: "p1loss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1loss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "p1loss/moving_w"
  input: "^p1loss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "p1loss/group_deps"
  op: "NoOp"
  input: "^p1loss/AssignMovingAvg/AssignSubVariableOp"
  input: "^p1loss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_188/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_188"
  op: "Mul"
  input: "printstats/wx/p1loss"
  input: "mul_188/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "p1loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_83"
  op: "AddV2"
  input: "ReadVariableOp_3"
  input: "mul_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_189/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_189"
  op: "Mul"
  input: "printstats/w/p1loss"
  input: "mul_189/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "p1loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_84"
  op: "AddV2"
  input: "ReadVariableOp_4"
  input: "mul_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_24"
  op: "RealDiv"
  input: "add_83"
  input: "add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_190"
  op: "Mul"
  input: "mul_91"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_44"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/vloss"
  op: "Sum"
  input: "mul_190"
  input: "Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_45"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/vloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vloss/moving_wx"
    }
  }
}
node {
  name: "vloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "vloss/moving_wx"
  input: "zeros_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vloss/moving_w"
    }
  }
}
node {
  name: "vloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "vloss/moving_w"
  input: "zeros_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "vloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "vloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/vloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "vloss/AssignMovingAvg/sub"
  input: "vloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "vloss/moving_wx"
  input: "vloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "vloss/moving_wx"
  input: "^vloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "vloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "vloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/vloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "vloss/AssignMovingAvg_1/sub"
  input: "vloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "vloss/moving_w"
  input: "vloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "vloss/moving_w"
  input: "^vloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vloss/group_deps"
  op: "NoOp"
  input: "^vloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^vloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_191/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_191"
  op: "Mul"
  input: "printstats/wx/vloss"
  input: "mul_191/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "vloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_85"
  op: "AddV2"
  input: "ReadVariableOp_5"
  input: "mul_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_192/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_192"
  op: "Mul"
  input: "printstats/w/vloss"
  input: "mul_192/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "vloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_86"
  op: "AddV2"
  input: "ReadVariableOp_6"
  input: "mul_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_25"
  op: "RealDiv"
  input: "add_85"
  input: "add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_193"
  op: "Mul"
  input: "Sum_8"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_46"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/tdvloss"
  op: "Sum"
  input: "mul_193"
  input: "Const_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_47"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/tdvloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tdvloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tdvloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tdvloss/moving_wx"
    }
  }
}
node {
  name: "tdvloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "tdvloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdvloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "tdvloss/moving_wx"
  input: "zeros_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdvloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "tdvloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tdvloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tdvloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tdvloss/moving_w"
    }
  }
}
node {
  name: "tdvloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "tdvloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdvloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "tdvloss/moving_w"
  input: "zeros_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdvloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "tdvloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "tdvloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "tdvloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/tdvloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "tdvloss/AssignMovingAvg/sub"
  input: "tdvloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "tdvloss/moving_wx"
  input: "tdvloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "tdvloss/moving_wx"
  input: "^tdvloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "tdvloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "tdvloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/tdvloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "tdvloss/AssignMovingAvg_1/sub"
  input: "tdvloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "tdvloss/moving_w"
  input: "tdvloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdvloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "tdvloss/moving_w"
  input: "^tdvloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdvloss/group_deps"
  op: "NoOp"
  input: "^tdvloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^tdvloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_194/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_194"
  op: "Mul"
  input: "printstats/wx/tdvloss"
  input: "mul_194/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "tdvloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_87"
  op: "AddV2"
  input: "ReadVariableOp_7"
  input: "mul_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_195/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_195"
  op: "Mul"
  input: "printstats/w/tdvloss"
  input: "mul_195/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "tdvloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_88"
  op: "AddV2"
  input: "ReadVariableOp_8"
  input: "mul_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_26"
  op: "RealDiv"
  input: "add_87"
  input: "add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_196"
  op: "Mul"
  input: "mul_126"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_48"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/smloss"
  op: "Sum"
  input: "mul_196"
  input: "Const_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_49"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/smloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "smloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@smloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "smloss/moving_wx"
    }
  }
}
node {
  name: "smloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "smloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "smloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "smloss/moving_wx"
  input: "zeros_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "smloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "smloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "smloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@smloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "smloss/moving_w"
    }
  }
}
node {
  name: "smloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "smloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "smloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "smloss/moving_w"
  input: "zeros_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "smloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "smloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "smloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "smloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "smloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "smloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "smloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/smloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "smloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "smloss/AssignMovingAvg/sub"
  input: "smloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "smloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "smloss/moving_wx"
  input: "smloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "smloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "smloss/moving_wx"
  input: "^smloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "smloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "smloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "smloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "smloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "smloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/smloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "smloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "smloss/AssignMovingAvg_1/sub"
  input: "smloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "smloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "smloss/moving_w"
  input: "smloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "smloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "smloss/moving_w"
  input: "^smloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "smloss/group_deps"
  op: "NoOp"
  input: "^smloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^smloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_197/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_197"
  op: "Mul"
  input: "printstats/wx/smloss"
  input: "mul_197/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "smloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_89"
  op: "AddV2"
  input: "ReadVariableOp_9"
  input: "mul_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_198/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_198"
  op: "Mul"
  input: "printstats/w/smloss"
  input: "mul_198/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "smloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_90"
  op: "AddV2"
  input: "ReadVariableOp_10"
  input: "mul_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_27"
  op: "RealDiv"
  input: "add_89"
  input: "add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_199"
  op: "Mul"
  input: "mul_131"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_50"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/leadloss"
  op: "Sum"
  input: "mul_199"
  input: "Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_51"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/leadloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "leadloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@leadloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "leadloss/moving_wx"
    }
  }
}
node {
  name: "leadloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "leadloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "leadloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "leadloss/moving_wx"
  input: "zeros_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "leadloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "leadloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "leadloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@leadloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "leadloss/moving_w"
    }
  }
}
node {
  name: "leadloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "leadloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "leadloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "leadloss/moving_w"
  input: "zeros_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "leadloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "leadloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "leadloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "leadloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/leadloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "leadloss/AssignMovingAvg/sub"
  input: "leadloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "leadloss/moving_wx"
  input: "leadloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "leadloss/moving_wx"
  input: "^leadloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "leadloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "leadloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/leadloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "leadloss/AssignMovingAvg_1/sub"
  input: "leadloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "leadloss/moving_w"
  input: "leadloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "leadloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "leadloss/moving_w"
  input: "^leadloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "leadloss/group_deps"
  op: "NoOp"
  input: "^leadloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^leadloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_200/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_200"
  op: "Mul"
  input: "printstats/wx/leadloss"
  input: "mul_200/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "leadloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_91"
  op: "AddV2"
  input: "ReadVariableOp_11"
  input: "mul_200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_201/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_201"
  op: "Mul"
  input: "printstats/w/leadloss"
  input: "mul_201/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "leadloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_92"
  op: "AddV2"
  input: "ReadVariableOp_12"
  input: "mul_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_28"
  op: "RealDiv"
  input: "add_91"
  input: "add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_202"
  op: "Mul"
  input: "mul_136"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_52"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/vtimeloss"
  op: "Sum"
  input: "mul_202"
  input: "Const_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_53"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/vtimeloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_37"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vtimeloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vtimeloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vtimeloss/moving_wx"
    }
  }
}
node {
  name: "vtimeloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vtimeloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vtimeloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "vtimeloss/moving_wx"
  input: "zeros_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vtimeloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vtimeloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_38"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "vtimeloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@vtimeloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "vtimeloss/moving_w"
    }
  }
}
node {
  name: "vtimeloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "vtimeloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vtimeloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "vtimeloss/moving_w"
  input: "zeros_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vtimeloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vtimeloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vtimeloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "vtimeloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/vtimeloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "vtimeloss/AssignMovingAvg/sub"
  input: "vtimeloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "vtimeloss/moving_wx"
  input: "vtimeloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "vtimeloss/moving_wx"
  input: "^vtimeloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "vtimeloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "vtimeloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/vtimeloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "vtimeloss/AssignMovingAvg_1/sub"
  input: "vtimeloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "vtimeloss/moving_w"
  input: "vtimeloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vtimeloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "vtimeloss/moving_w"
  input: "^vtimeloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vtimeloss/group_deps"
  op: "NoOp"
  input: "^vtimeloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^vtimeloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_203/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_203"
  op: "Mul"
  input: "printstats/wx/vtimeloss"
  input: "mul_203/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "vtimeloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_93"
  op: "AddV2"
  input: "ReadVariableOp_13"
  input: "mul_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_204/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_204"
  op: "Mul"
  input: "printstats/w/vtimeloss"
  input: "mul_204/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "vtimeloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_94"
  op: "AddV2"
  input: "ReadVariableOp_14"
  input: "mul_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_29"
  op: "RealDiv"
  input: "add_93"
  input: "add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_205"
  op: "Mul"
  input: "mul_101"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_54"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/sbpdfloss"
  op: "Sum"
  input: "mul_205"
  input: "Const_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_55"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/sbpdfloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_39"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sbpdfloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbpdfloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sbpdfloss/moving_wx"
    }
  }
}
node {
  name: "sbpdfloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sbpdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbpdfloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "sbpdfloss/moving_wx"
  input: "zeros_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbpdfloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbpdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_40"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sbpdfloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbpdfloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sbpdfloss/moving_w"
    }
  }
}
node {
  name: "sbpdfloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sbpdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbpdfloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "sbpdfloss/moving_w"
  input: "zeros_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbpdfloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbpdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbpdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "sbpdfloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/sbpdfloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "sbpdfloss/AssignMovingAvg/sub"
  input: "sbpdfloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "sbpdfloss/moving_wx"
  input: "sbpdfloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sbpdfloss/moving_wx"
  input: "^sbpdfloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbpdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "sbpdfloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/sbpdfloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "sbpdfloss/AssignMovingAvg_1/sub"
  input: "sbpdfloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "sbpdfloss/moving_w"
  input: "sbpdfloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbpdfloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sbpdfloss/moving_w"
  input: "^sbpdfloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbpdfloss/group_deps"
  op: "NoOp"
  input: "^sbpdfloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^sbpdfloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_206/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_206"
  op: "Mul"
  input: "printstats/wx/sbpdfloss"
  input: "mul_206/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "sbpdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_95"
  op: "AddV2"
  input: "ReadVariableOp_15"
  input: "mul_206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_207/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_207"
  op: "Mul"
  input: "printstats/w/sbpdfloss"
  input: "mul_207/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "sbpdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_96"
  op: "AddV2"
  input: "ReadVariableOp_16"
  input: "mul_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_30"
  op: "RealDiv"
  input: "add_95"
  input: "add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_208"
  op: "Mul"
  input: "mul_99"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_56"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/sbcdfloss"
  op: "Sum"
  input: "mul_208"
  input: "Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_57"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/sbcdfloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_41"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sbcdfloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbcdfloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sbcdfloss/moving_wx"
    }
  }
}
node {
  name: "sbcdfloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sbcdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbcdfloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "sbcdfloss/moving_wx"
  input: "zeros_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbcdfloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbcdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_42"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sbcdfloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sbcdfloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sbcdfloss/moving_w"
    }
  }
}
node {
  name: "sbcdfloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sbcdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbcdfloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "sbcdfloss/moving_w"
  input: "zeros_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbcdfloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbcdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbcdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "sbcdfloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/sbcdfloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "sbcdfloss/AssignMovingAvg/sub"
  input: "sbcdfloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "sbcdfloss/moving_wx"
  input: "sbcdfloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sbcdfloss/moving_wx"
  input: "^sbcdfloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sbcdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "sbcdfloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/sbcdfloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "sbcdfloss/AssignMovingAvg_1/sub"
  input: "sbcdfloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "sbcdfloss/moving_w"
  input: "sbcdfloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbcdfloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sbcdfloss/moving_w"
  input: "^sbcdfloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sbcdfloss/group_deps"
  op: "NoOp"
  input: "^sbcdfloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^sbcdfloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_209/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_209"
  op: "Mul"
  input: "printstats/wx/sbcdfloss"
  input: "mul_209/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "sbcdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_97"
  op: "AddV2"
  input: "ReadVariableOp_17"
  input: "mul_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_210/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_210"
  op: "Mul"
  input: "printstats/w/sbcdfloss"
  input: "mul_210/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "sbcdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_98"
  op: "AddV2"
  input: "ReadVariableOp_18"
  input: "mul_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_31"
  op: "RealDiv"
  input: "add_97"
  input: "add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_211"
  op: "Mul"
  input: "mul_104"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_58"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/oloss"
  op: "Sum"
  input: "mul_211"
  input: "Const_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_59"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/oloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_43"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "oloss/moving_wx"
    }
  }
}
node {
  name: "oloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "oloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "oloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "oloss/moving_wx"
  input: "zeros_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "oloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_44"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "oloss/moving_w"
    }
  }
}
node {
  name: "oloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "oloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "oloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "oloss/moving_w"
  input: "zeros_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "oloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "oloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "oloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "oloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/oloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "oloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "oloss/AssignMovingAvg/sub"
  input: "oloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "oloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "oloss/moving_wx"
  input: "oloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "oloss/moving_wx"
  input: "^oloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "oloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "oloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "oloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/oloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "oloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "oloss/AssignMovingAvg_1/sub"
  input: "oloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "oloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "oloss/moving_w"
  input: "oloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "oloss/moving_w"
  input: "^oloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oloss/group_deps"
  op: "NoOp"
  input: "^oloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^oloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_212/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_212"
  op: "Mul"
  input: "printstats/wx/oloss"
  input: "mul_212/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "oloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_99"
  op: "AddV2"
  input: "ReadVariableOp_19"
  input: "mul_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_213/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_213"
  op: "Mul"
  input: "printstats/w/oloss"
  input: "mul_213/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "oloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_100"
  op: "AddV2"
  input: "ReadVariableOp_20"
  input: "mul_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_32"
  op: "RealDiv"
  input: "add_99"
  input: "add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_214"
  op: "Mul"
  input: "mul_109"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_60"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/sloss"
  op: "Sum"
  input: "mul_214"
  input: "Const_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_61"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/sloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_45"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sloss/moving_wx"
    }
  }
}
node {
  name: "sloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "sloss/moving_wx"
  input: "zeros_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_46"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sloss/moving_w"
    }
  }
}
node {
  name: "sloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "sloss/moving_w"
  input: "zeros_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "sloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "sloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/sloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "sloss/AssignMovingAvg/sub"
  input: "sloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "sloss/moving_wx"
  input: "sloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sloss/moving_wx"
  input: "^sloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "sloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "sloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/sloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "sloss/AssignMovingAvg_1/sub"
  input: "sloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "sloss/moving_w"
  input: "sloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sloss/moving_w"
  input: "^sloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sloss/group_deps"
  op: "NoOp"
  input: "^sloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^sloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_215/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_215"
  op: "Mul"
  input: "printstats/wx/sloss"
  input: "mul_215/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "sloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_101"
  op: "AddV2"
  input: "ReadVariableOp_21"
  input: "mul_215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_216/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_216"
  op: "Mul"
  input: "printstats/w/sloss"
  input: "mul_216/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "sloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_102"
  op: "AddV2"
  input: "ReadVariableOp_22"
  input: "mul_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_33"
  op: "RealDiv"
  input: "add_101"
  input: "add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_217"
  op: "Mul"
  input: "mul_113"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_62"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/fploss"
  op: "Sum"
  input: "mul_217"
  input: "Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_63"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/fploss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_47"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fploss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fploss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fploss/moving_wx"
    }
  }
}
node {
  name: "fploss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fploss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fploss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "fploss/moving_wx"
  input: "zeros_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fploss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fploss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_48"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fploss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fploss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "fploss/moving_w"
    }
  }
}
node {
  name: "fploss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "fploss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fploss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "fploss/moving_w"
  input: "zeros_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fploss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fploss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fploss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fploss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fploss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fploss/AssignMovingAvg/sub"
  op: "Sub"
  input: "fploss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/fploss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fploss/AssignMovingAvg/mul"
  op: "Mul"
  input: "fploss/AssignMovingAvg/sub"
  input: "fploss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fploss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "fploss/moving_wx"
  input: "fploss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fploss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "fploss/moving_wx"
  input: "^fploss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fploss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "fploss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "fploss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fploss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "fploss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/fploss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fploss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "fploss/AssignMovingAvg_1/sub"
  input: "fploss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fploss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "fploss/moving_w"
  input: "fploss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fploss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "fploss/moving_w"
  input: "^fploss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fploss/group_deps"
  op: "NoOp"
  input: "^fploss/AssignMovingAvg/AssignSubVariableOp"
  input: "^fploss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_218/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_218"
  op: "Mul"
  input: "printstats/wx/fploss"
  input: "mul_218/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "fploss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_103"
  op: "AddV2"
  input: "ReadVariableOp_23"
  input: "mul_218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_219/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_219"
  op: "Mul"
  input: "printstats/w/fploss"
  input: "mul_219/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "fploss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_104"
  op: "AddV2"
  input: "ReadVariableOp_24"
  input: "mul_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_34"
  op: "RealDiv"
  input: "add_103"
  input: "add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_220"
  op: "Mul"
  input: "mul_120"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_64"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/skloss"
  op: "Sum"
  input: "mul_220"
  input: "Const_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_65"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/skloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_49"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "skloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@skloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "skloss/moving_wx"
    }
  }
}
node {
  name: "skloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "skloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "skloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "skloss/moving_wx"
  input: "zeros_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "skloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "skloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_50"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "skloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@skloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "skloss/moving_w"
    }
  }
}
node {
  name: "skloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "skloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "skloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "skloss/moving_w"
  input: "zeros_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "skloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "skloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "skloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "skloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "skloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "skloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "skloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/skloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "skloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "skloss/AssignMovingAvg/sub"
  input: "skloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "skloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "skloss/moving_wx"
  input: "skloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "skloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "skloss/moving_wx"
  input: "^skloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "skloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "skloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "skloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "skloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "skloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/skloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "skloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "skloss/AssignMovingAvg_1/sub"
  input: "skloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "skloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "skloss/moving_w"
  input: "skloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "skloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "skloss/moving_w"
  input: "^skloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "skloss/group_deps"
  op: "NoOp"
  input: "^skloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^skloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_221/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_221"
  op: "Mul"
  input: "printstats/wx/skloss"
  input: "mul_221/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "skloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_105"
  op: "AddV2"
  input: "ReadVariableOp_25"
  input: "mul_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_222/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_222"
  op: "Mul"
  input: "printstats/w/skloss"
  input: "mul_222/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "skloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_106"
  op: "AddV2"
  input: "ReadVariableOp_26"
  input: "mul_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_35"
  op: "RealDiv"
  input: "add_105"
  input: "add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_223"
  op: "Mul"
  input: "mul_141"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_66"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/rsdloss"
  op: "Sum"
  input: "mul_223"
  input: "Const_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_67"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/rsdloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_51"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rsdloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rsdloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rsdloss/moving_wx"
    }
  }
}
node {
  name: "rsdloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rsdloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rsdloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "rsdloss/moving_wx"
  input: "zeros_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rsdloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rsdloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_52"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rsdloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rsdloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rsdloss/moving_w"
    }
  }
}
node {
  name: "rsdloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rsdloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rsdloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "rsdloss/moving_w"
  input: "zeros_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rsdloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rsdloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rsdloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "rsdloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/rsdloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "rsdloss/AssignMovingAvg/sub"
  input: "rsdloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "rsdloss/moving_wx"
  input: "rsdloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rsdloss/moving_wx"
  input: "^rsdloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rsdloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "rsdloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/rsdloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "rsdloss/AssignMovingAvg_1/sub"
  input: "rsdloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "rsdloss/moving_w"
  input: "rsdloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rsdloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rsdloss/moving_w"
  input: "^rsdloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rsdloss/group_deps"
  op: "NoOp"
  input: "^rsdloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^rsdloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_224/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_224"
  op: "Mul"
  input: "printstats/wx/rsdloss"
  input: "mul_224/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "rsdloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_107"
  op: "AddV2"
  input: "ReadVariableOp_27"
  input: "mul_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_225/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_225"
  op: "Mul"
  input: "printstats/w/rsdloss"
  input: "mul_225/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "rsdloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_108"
  op: "AddV2"
  input: "ReadVariableOp_28"
  input: "mul_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_36"
  op: "RealDiv"
  input: "add_107"
  input: "add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_226"
  op: "Mul"
  input: "mul_172"
  input: "losses/weight_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range"
  op: "Range"
  input: "range/start"
  input: "Rank"
  input: "range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "printstats/wx/rloss"
  op: "Sum"
  input: "mul_226"
  input: "range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range_1"
  op: "Range"
  input: "range_1/start"
  input: "Rank_1"
  input: "range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "printstats/w/rloss"
  op: "Sum"
  input: "losses/weight_sum"
  input: "range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_53"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rloss/moving_wx"
    }
  }
}
node {
  name: "rloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "rloss/moving_wx"
  input: "zeros_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_54"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rloss/moving_w"
    }
  }
}
node {
  name: "rloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "rloss/moving_w"
  input: "zeros_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "rloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "rloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/rloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "rloss/AssignMovingAvg/sub"
  input: "rloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "rloss/moving_wx"
  input: "rloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rloss/moving_wx"
  input: "^rloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "rloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "rloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/rloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "rloss/AssignMovingAvg_1/sub"
  input: "rloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "rloss/moving_w"
  input: "rloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rloss/moving_w"
  input: "^rloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rloss/group_deps"
  op: "NoOp"
  input: "^rloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^rloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_227/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_227"
  op: "Mul"
  input: "printstats/wx/rloss"
  input: "mul_227/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "rloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_109"
  op: "AddV2"
  input: "ReadVariableOp_29"
  input: "mul_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_228/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_228"
  op: "Mul"
  input: "printstats/w/rloss"
  input: "mul_228/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "rloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_110"
  op: "AddV2"
  input: "ReadVariableOp_30"
  input: "mul_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_37"
  op: "RealDiv"
  input: "add_109"
  input: "add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_229"
  op: "Mul"
  input: "Reshape_34"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_68"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/rscloss"
  op: "Sum"
  input: "mul_229"
  input: "Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_69"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/rscloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_55"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rscloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rscloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rscloss/moving_wx"
    }
  }
}
node {
  name: "rscloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rscloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rscloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "rscloss/moving_wx"
  input: "zeros_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rscloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rscloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_56"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rscloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rscloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rscloss/moving_w"
    }
  }
}
node {
  name: "rscloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rscloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rscloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "rscloss/moving_w"
  input: "zeros_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rscloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rscloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rscloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "rscloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/rscloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "rscloss/AssignMovingAvg/sub"
  input: "rscloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "rscloss/moving_wx"
  input: "rscloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rscloss/moving_wx"
  input: "^rscloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rscloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "rscloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/rscloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "rscloss/AssignMovingAvg_1/sub"
  input: "rscloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "rscloss/moving_w"
  input: "rscloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rscloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rscloss/moving_w"
  input: "^rscloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rscloss/group_deps"
  op: "NoOp"
  input: "^rscloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^rscloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_230/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_230"
  op: "Mul"
  input: "printstats/wx/rscloss"
  input: "mul_230/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "rscloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_111"
  op: "AddV2"
  input: "ReadVariableOp_31"
  input: "mul_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_231/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_231"
  op: "Mul"
  input: "printstats/w/rscloss"
  input: "mul_231/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "rscloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_112"
  op: "AddV2"
  input: "ReadVariableOp_32"
  input: "mul_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_38"
  op: "RealDiv"
  input: "add_111"
  input: "add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_232"
  op: "Mul"
  input: "mul_146"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_70"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/evstloss"
  op: "Sum"
  input: "mul_232"
  input: "Const_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_71"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/evstloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_57"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "evstloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@evstloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "evstloss/moving_wx"
    }
  }
}
node {
  name: "evstloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "evstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "evstloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "evstloss/moving_wx"
  input: "zeros_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evstloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "evstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_58"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "evstloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@evstloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "evstloss/moving_w"
    }
  }
}
node {
  name: "evstloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "evstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "evstloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "evstloss/moving_w"
  input: "zeros_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evstloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "evstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "evstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "evstloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/evstloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "evstloss/AssignMovingAvg/sub"
  input: "evstloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "evstloss/moving_wx"
  input: "evstloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "evstloss/moving_wx"
  input: "^evstloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "evstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "evstloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/evstloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "evstloss/AssignMovingAvg_1/sub"
  input: "evstloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "evstloss/moving_w"
  input: "evstloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evstloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "evstloss/moving_w"
  input: "^evstloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "evstloss/group_deps"
  op: "NoOp"
  input: "^evstloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^evstloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_233/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_233"
  op: "Mul"
  input: "printstats/wx/evstloss"
  input: "mul_233/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "evstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_113"
  op: "AddV2"
  input: "ReadVariableOp_33"
  input: "mul_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_234/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_234"
  op: "Mul"
  input: "printstats/w/evstloss"
  input: "mul_234/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "evstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_114"
  op: "AddV2"
  input: "ReadVariableOp_34"
  input: "mul_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_39"
  op: "RealDiv"
  input: "add_113"
  input: "add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_235"
  op: "Mul"
  input: "mul_151"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_72"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/esstloss"
  op: "Sum"
  input: "mul_235"
  input: "Const_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_73"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/esstloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_59"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "esstloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@esstloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "esstloss/moving_wx"
    }
  }
}
node {
  name: "esstloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "esstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "esstloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "esstloss/moving_wx"
  input: "zeros_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "esstloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "esstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_60"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "esstloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@esstloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "esstloss/moving_w"
    }
  }
}
node {
  name: "esstloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "esstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "esstloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "esstloss/moving_w"
  input: "zeros_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "esstloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "esstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "esstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "esstloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/esstloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "esstloss/AssignMovingAvg/sub"
  input: "esstloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "esstloss/moving_wx"
  input: "esstloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "esstloss/moving_wx"
  input: "^esstloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "esstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "esstloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/esstloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "esstloss/AssignMovingAvg_1/sub"
  input: "esstloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "esstloss/moving_w"
  input: "esstloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "esstloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "esstloss/moving_w"
  input: "^esstloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "esstloss/group_deps"
  op: "NoOp"
  input: "^esstloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^esstloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_236/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_236"
  op: "Mul"
  input: "printstats/wx/esstloss"
  input: "mul_236/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "esstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_115"
  op: "AddV2"
  input: "ReadVariableOp_35"
  input: "mul_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_237/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_237"
  op: "Mul"
  input: "printstats/w/esstloss"
  input: "mul_237/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "esstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_116"
  op: "AddV2"
  input: "ReadVariableOp_36"
  input: "mul_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_40"
  op: "RealDiv"
  input: "add_115"
  input: "add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_238"
  op: "Mul"
  input: "mul_97"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_74"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/tdsloss"
  op: "Sum"
  input: "mul_238"
  input: "Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_75"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/tdsloss"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_61"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tdsloss/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tdsloss/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tdsloss/moving_wx"
    }
  }
}
node {
  name: "tdsloss/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "tdsloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdsloss/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "tdsloss/moving_wx"
  input: "zeros_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdsloss/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "tdsloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_62"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tdsloss/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tdsloss/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tdsloss/moving_w"
    }
  }
}
node {
  name: "tdsloss/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "tdsloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdsloss/moving_w/Assign"
  op: "AssignVariableOp"
  input: "tdsloss/moving_w"
  input: "zeros_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdsloss/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "tdsloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "tdsloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg/sub"
  op: "Sub"
  input: "tdsloss/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/tdsloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg/mul"
  op: "Mul"
  input: "tdsloss/AssignMovingAvg/sub"
  input: "tdsloss/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "tdsloss/moving_wx"
  input: "tdsloss/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "tdsloss/moving_wx"
  input: "^tdsloss/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "tdsloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "tdsloss/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/tdsloss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "tdsloss/AssignMovingAvg_1/sub"
  input: "tdsloss/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "tdsloss/moving_w"
  input: "tdsloss/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdsloss/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "tdsloss/moving_w"
  input: "^tdsloss/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tdsloss/group_deps"
  op: "NoOp"
  input: "^tdsloss/AssignMovingAvg/AssignSubVariableOp"
  input: "^tdsloss/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_239/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_239"
  op: "Mul"
  input: "printstats/wx/tdsloss"
  input: "mul_239/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "tdsloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_117"
  op: "AddV2"
  input: "ReadVariableOp_37"
  input: "mul_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_240/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_240"
  op: "Mul"
  input: "printstats/w/tdsloss"
  input: "mul_240/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "tdsloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_118"
  op: "AddV2"
  input: "ReadVariableOp_38"
  input: "mul_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_41"
  op: "RealDiv"
  input: "add_117"
  input: "add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_241"
  op: "Mul"
  input: "Cast_1"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_76"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/pacc1"
  op: "Sum"
  input: "mul_241"
  input: "Const_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_77"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/pacc1"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_63"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pacc1/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pacc1/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "pacc1/moving_wx"
    }
  }
}
node {
  name: "pacc1/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "pacc1/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pacc1/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "pacc1/moving_wx"
  input: "zeros_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pacc1/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pacc1/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_64"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pacc1/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pacc1/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "pacc1/moving_w"
    }
  }
}
node {
  name: "pacc1/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "pacc1/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pacc1/moving_w/Assign"
  op: "AssignVariableOp"
  input: "pacc1/moving_w"
  input: "zeros_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pacc1/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pacc1/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pacc1/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg/sub"
  op: "Sub"
  input: "pacc1/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/pacc1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg/mul"
  op: "Mul"
  input: "pacc1/AssignMovingAvg/sub"
  input: "pacc1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "pacc1/moving_wx"
  input: "pacc1/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "pacc1/moving_wx"
  input: "^pacc1/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pacc1/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "pacc1/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/pacc1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "pacc1/AssignMovingAvg_1/sub"
  input: "pacc1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "pacc1/moving_w"
  input: "pacc1/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pacc1/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "pacc1/moving_w"
  input: "^pacc1/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pacc1/group_deps"
  op: "NoOp"
  input: "^pacc1/AssignMovingAvg/AssignSubVariableOp"
  input: "^pacc1/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_242/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_242"
  op: "Mul"
  input: "printstats/wx/pacc1"
  input: "mul_242/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "pacc1/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_119"
  op: "AddV2"
  input: "ReadVariableOp_39"
  input: "mul_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_243/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_243"
  op: "Mul"
  input: "printstats/w/pacc1"
  input: "mul_243/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "pacc1/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_120"
  op: "AddV2"
  input: "ReadVariableOp_40"
  input: "mul_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_42"
  op: "RealDiv"
  input: "add_119"
  input: "add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_244"
  op: "Mul"
  input: "mul_176"
  input: "strided_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_78"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/wx/ptentr"
  op: "Sum"
  input: "mul_244"
  input: "Const_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_79"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "printstats/w/ptentr"
  op: "Sum"
  input: "strided_slice_20"
  input: "Const_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_65"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ptentr/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ptentr/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "ptentr/moving_wx"
    }
  }
}
node {
  name: "ptentr/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "ptentr/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ptentr/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "ptentr/moving_wx"
  input: "zeros_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ptentr/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "ptentr/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_66"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "ptentr/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ptentr/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "ptentr/moving_w"
    }
  }
}
node {
  name: "ptentr/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "ptentr/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ptentr/moving_w/Assign"
  op: "AssignVariableOp"
  input: "ptentr/moving_w"
  input: "zeros_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ptentr/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "ptentr/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "ptentr/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg/sub"
  op: "Sub"
  input: "ptentr/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/ptentr"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg/mul"
  op: "Mul"
  input: "ptentr/AssignMovingAvg/sub"
  input: "ptentr/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "ptentr/moving_wx"
  input: "ptentr/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "ptentr/moving_wx"
  input: "^ptentr/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "ptentr/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "ptentr/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/ptentr"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "ptentr/AssignMovingAvg_1/sub"
  input: "ptentr/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "ptentr/moving_w"
  input: "ptentr/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ptentr/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "ptentr/moving_w"
  input: "^ptentr/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ptentr/group_deps"
  op: "NoOp"
  input: "^ptentr/AssignMovingAvg/AssignSubVariableOp"
  input: "^ptentr/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_245/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_245"
  op: "Mul"
  input: "printstats/wx/ptentr"
  input: "mul_245/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "ptentr/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_121"
  op: "AddV2"
  input: "ReadVariableOp_41"
  input: "mul_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_246/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_246"
  op: "Mul"
  input: "printstats/w/ptentr"
  input: "mul_246/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "ptentr/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_122"
  op: "AddV2"
  input: "ReadVariableOp_42"
  input: "mul_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_43"
  op: "RealDiv"
  input: "add_121"
  input: "add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_247/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_247"
  op: "Mul"
  input: "global_norm/global_norm"
  input: "mul_247/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_2/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_2/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range_2"
  op: "Range"
  input: "range_2/start"
  input: "Rank_2"
  input: "range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "printstats/wx/gnorm"
  op: "Sum"
  input: "mul_247"
  input: "range_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Rank_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rank_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_3/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_3/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range_3"
  op: "Range"
  input: "range_3/start"
  input: "Rank_3"
  input: "range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "printstats/w/gnorm/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "printstats/w/gnorm"
  op: "Sum"
  input: "printstats/w/gnorm/input"
  input: "range_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_67"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gnorm/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gnorm/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gnorm/moving_wx"
    }
  }
}
node {
  name: "gnorm/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gnorm/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "gnorm/moving_wx"
  input: "zeros_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gnorm/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_68"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gnorm/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gnorm/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "gnorm/moving_w"
    }
  }
}
node {
  name: "gnorm/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "gnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gnorm/moving_w/Assign"
  op: "AssignVariableOp"
  input: "gnorm/moving_w"
  input: "zeros_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gnorm/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "gnorm/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/gnorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "gnorm/AssignMovingAvg/sub"
  input: "gnorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "gnorm/moving_wx"
  input: "gnorm/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "gnorm/moving_wx"
  input: "^gnorm/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "gnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "gnorm/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/gnorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "gnorm/AssignMovingAvg_1/sub"
  input: "gnorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "gnorm/moving_w"
  input: "gnorm/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gnorm/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "gnorm/moving_w"
  input: "^gnorm/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gnorm/group_deps"
  op: "NoOp"
  input: "^gnorm/AssignMovingAvg/AssignSubVariableOp"
  input: "^gnorm/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_248/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_248"
  op: "Mul"
  input: "printstats/wx/gnorm"
  input: "mul_248/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "gnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_123"
  op: "AddV2"
  input: "ReadVariableOp_43"
  input: "mul_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_249/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_249"
  op: "Mul"
  input: "printstats/w/gnorm"
  input: "mul_249/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "gnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_124"
  op: "AddV2"
  input: "ReadVariableOp_44"
  input: "mul_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_44"
  op: "RealDiv"
  input: "add_123"
  input: "add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_250/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_250"
  op: "Mul"
  input: "Relu_23"
  input: "mul_250/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Rank_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_4/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_4/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range_4"
  op: "Range"
  input: "range_4/start"
  input: "Rank_4"
  input: "range_4/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "printstats/wx/excessgnorm"
  op: "Sum"
  input: "mul_250"
  input: "range_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Rank_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Rank_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_5/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range_5/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range_5"
  op: "Range"
  input: "range_5/start"
  input: "Rank_5"
  input: "range_5/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "printstats/w/excessgnorm/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "printstats/w/excessgnorm"
  op: "Sum"
  input: "printstats/w/excessgnorm/input"
  input: "range_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "zeros_69"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "excessgnorm/moving_wx"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@excessgnorm/moving_wx"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "excessgnorm/moving_wx"
    }
  }
}
node {
  name: "excessgnorm/moving_wx/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "excessgnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "excessgnorm/moving_wx/Assign"
  op: "AssignVariableOp"
  input: "excessgnorm/moving_wx"
  input: "zeros_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "excessgnorm/moving_wx/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "excessgnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_70"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "excessgnorm/moving_w"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@excessgnorm/moving_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "excessgnorm/moving_w"
    }
  }
}
node {
  name: "excessgnorm/moving_w/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "excessgnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "excessgnorm/moving_w/Assign"
  op: "AssignVariableOp"
  input: "excessgnorm/moving_w"
  input: "zeros_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "excessgnorm/moving_w/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "excessgnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "excessgnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "excessgnorm/AssignMovingAvg/ReadVariableOp"
  input: "printstats/wx/excessgnorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "excessgnorm/AssignMovingAvg/sub"
  input: "excessgnorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "excessgnorm/moving_wx"
  input: "excessgnorm/AssignMovingAvg/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "excessgnorm/moving_wx"
  input: "^excessgnorm/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "excessgnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "excessgnorm/AssignMovingAvg_1/ReadVariableOp"
  input: "printstats/w/excessgnorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "excessgnorm/AssignMovingAvg_1/sub"
  input: "excessgnorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "excessgnorm/moving_w"
  input: "excessgnorm/AssignMovingAvg_1/mul"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "excessgnorm/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "excessgnorm/moving_w"
  input: "^excessgnorm/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "excessgnorm/group_deps"
  op: "NoOp"
  input: "^excessgnorm/AssignMovingAvg/AssignSubVariableOp"
  input: "^excessgnorm/AssignMovingAvg_1/AssignSubVariableOp"
}
node {
  name: "mul_251/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_251"
  op: "Mul"
  input: "printstats/wx/excessgnorm"
  input: "mul_251/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "excessgnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_125"
  op: "AddV2"
  input: "ReadVariableOp_45"
  input: "mul_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_252/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "mul_252"
  op: "Mul"
  input: "printstats/w/excessgnorm"
  input: "mul_252/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "excessgnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_126"
  op: "AddV2"
  input: "ReadVariableOp_46"
  input: "mul_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_45"
  op: "RealDiv"
  input: "add_125"
  input: "add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mean_1/total"
    }
  }
}
node {
  name: "mean_1/total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mean_1/total"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/total/Assign"
  op: "AssignVariableOp"
  input: "mean_1/total"
  input: "mean_1/total/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_1/total"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_1/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mean_1/count"
    }
  }
}
node {
  name: "mean_1/count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mean_1/count"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/count/Assign"
  op: "AssignVariableOp"
  input: "mean_1/count"
  input: "mean_1/count/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_1/count"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_1/Cast"
  op: "Cast"
  input: "mean_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_1/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_1/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_1/range"
  op: "Range"
  input: "mean_1/range/start"
  input: "mean_1/Rank"
  input: "mean_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_1/Sum"
  op: "Sum"
  input: "losses/weight_sum"
  input: "mean_1/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_1/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "mean_1/total"
  input: "mean_1/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_1/total"
  input: "^mean_1/AssignAddVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "mean_1/count"
  input: "mean_1/Cast"
  input: "^losses/weight_sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "mean_1/count"
  input: "^losses/weight_sum"
  input: "^mean_1/AssignAddVariableOp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/Maximum/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_1/count"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/Maximum"
  op: "Maximum"
  input: "mean_1/Maximum/ReadVariableOp"
  input: "mean_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/value/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_1/total"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/value"
  op: "DivNoNan"
  input: "mean_1/value/ReadVariableOp"
  input: "mean_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/Maximum_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_1/count"
  input: "^mean_1/AssignAddVariableOp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_1/Maximum_1"
  op: "Maximum"
  input: "mean_1/Maximum_1/ReadVariableOp"
  input: "mean_1/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_1/update_op/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_1/total"
  input: "^mean_1/AssignAddVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_1/update_op"
  op: "DivNoNan"
  input: "mean_1/update_op/ReadVariableOp"
  input: "mean_1/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_80"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 128
      }
    }
  }
}
node {
  name: "ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "mul_253"
  op: "Mul"
  input: "ReadVariableOp_47"
  input: "Const_80"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_254"
  op: "Mul"
  input: "Cast_3"
  input: "mean_1/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_81"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_255"
  op: "Mul"
  input: "mul_254"
  input: "Const_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_82"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "truediv_46"
  op: "RealDiv"
  input: "add_79"
  input: "Const_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^Momentum"
  input: "^esstloss/group_deps"
  input: "^evstloss/group_deps"
  input: "^excessgnorm/group_deps"
  input: "^fploss/group_deps"
  input: "^gnorm/group_deps"
  input: "^leadloss/group_deps"
  input: "^mean_1/update_op"
  input: "^oloss/group_deps"
  input: "^p0loss/group_deps"
  input: "^p1loss/group_deps"
  input: "^pacc1/group_deps"
  input: "^ptentr/group_deps"
  input: "^rloss/group_deps"
  input: "^rscloss/group_deps"
  input: "^rsdloss/group_deps"
  input: "^sbcdfloss/group_deps"
  input: "^sbpdfloss/group_deps"
  input: "^skloss/group_deps"
  input: "^sloss/group_deps"
  input: "^smloss/group_deps"
  input: "^tdsloss/group_deps"
  input: "^tdvloss/group_deps"
  input: "^vloss/group_deps"
  input: "^vtimeloss/group_deps"
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "truediv_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv1/w/Assign"
  input: "^conv1/w/Momentum/Assign"
  input: "^esstloss/moving_w/Assign"
  input: "^esstloss/moving_wx/Assign"
  input: "^evstloss/moving_w/Assign"
  input: "^evstloss/moving_wx/Assign"
  input: "^excessgnorm/moving_w/Assign"
  input: "^excessgnorm/moving_wx/Assign"
  input: "^fploss/moving_w/Assign"
  input: "^fploss/moving_wx/Assign"
  input: "^futurepos/w/Assign"
  input: "^futurepos/w/Momentum/Assign"
  input: "^g1/norm/beta/Assign"
  input: "^g1/norm/beta/Momentum/Assign"
  input: "^g1/w/Assign"
  input: "^g1/w/Momentum/Assign"
  input: "^ginputw/Assign"
  input: "^ginputw/Momentum/Assign"
  input: "^global_step/Assign"
  input: "^gnorm/moving_w/Assign"
  input: "^gnorm/moving_wx/Assign"
  input: "^leadloss/moving_w/Assign"
  input: "^leadloss/moving_wx/Assign"
  input: "^matmulg2w/Assign"
  input: "^matmulg2w/Momentum/Assign"
  input: "^matmulpass/Assign"
  input: "^matmulpass/Momentum/Assign"
  input: "^mmv3/b/Assign"
  input: "^mmv3/b/Momentum/Assign"
  input: "^mmv3/w/Assign"
  input: "^mmv3/w/Momentum/Assign"
  input: "^moving_unowned_proportion/Assign"
  input: "^mv3/b/Assign"
  input: "^mv3/b/Momentum/Assign"
  input: "^mv3/w/Assign"
  input: "^mv3/w/Momentum/Assign"
  input: "^oloss/moving_w/Assign"
  input: "^oloss/moving_wx/Assign"
  input: "^p0loss/moving_w/Assign"
  input: "^p0loss/moving_wx/Assign"
  input: "^p1/intermediate_conv/w/Assign"
  input: "^p1/intermediate_conv/w/Momentum/Assign"
  input: "^p1/norm/beta/Assign"
  input: "^p1/norm/beta/Momentum/Assign"
  input: "^p1loss/moving_w/Assign"
  input: "^p1loss/moving_wx/Assign"
  input: "^p2/w/Assign"
  input: "^p2/w/Momentum/Assign"
  input: "^pacc1/moving_w/Assign"
  input: "^pacc1/moving_wx/Assign"
  input: "^ptentr/moving_w/Assign"
  input: "^ptentr/moving_wx/Assign"
  input: "^rconv1/norm1/beta/Assign"
  input: "^rconv1/norm1/beta/Momentum/Assign"
  input: "^rconv1/norm2/beta/Assign"
  input: "^rconv1/norm2/beta/Momentum/Assign"
  input: "^rconv1/norm2/gamma/Assign"
  input: "^rconv1/norm2/gamma/Momentum/Assign"
  input: "^rconv1/w1/Assign"
  input: "^rconv1/w1/Momentum/Assign"
  input: "^rconv1/w2/Assign"
  input: "^rconv1/w2/Momentum/Assign"
  input: "^rconv2/norm1/beta/Assign"
  input: "^rconv2/norm1/beta/Momentum/Assign"
  input: "^rconv2/norm2/beta/Assign"
  input: "^rconv2/norm2/beta/Momentum/Assign"
  input: "^rconv2/norm2/gamma/Assign"
  input: "^rconv2/norm2/gamma/Momentum/Assign"
  input: "^rconv2/w1/Assign"
  input: "^rconv2/w1/Momentum/Assign"
  input: "^rconv2/w2/Assign"
  input: "^rconv2/w2/Momentum/Assign"
  input: "^rconv3/norm1/beta/Assign"
  input: "^rconv3/norm1/beta/Momentum/Assign"
  input: "^rconv3/norm1b/beta/Assign"
  input: "^rconv3/norm1b/beta/Momentum/Assign"
  input: "^rconv3/norm2/beta/Assign"
  input: "^rconv3/norm2/beta/Momentum/Assign"
  input: "^rconv3/norm2/gamma/Assign"
  input: "^rconv3/norm2/gamma/Momentum/Assign"
  input: "^rconv3/w1a/Assign"
  input: "^rconv3/w1a/Momentum/Assign"
  input: "^rconv3/w1b/Assign"
  input: "^rconv3/w1b/Momentum/Assign"
  input: "^rconv3/w1r/Assign"
  input: "^rconv3/w1r/Momentum/Assign"
  input: "^rconv3/w2/Assign"
  input: "^rconv3/w2/Momentum/Assign"
  input: "^rconv4/norm1/beta/Assign"
  input: "^rconv4/norm1/beta/Momentum/Assign"
  input: "^rconv4/norm2/beta/Assign"
  input: "^rconv4/norm2/beta/Momentum/Assign"
  input: "^rconv4/norm2/gamma/Assign"
  input: "^rconv4/norm2/gamma/Momentum/Assign"
  input: "^rconv4/w1/Assign"
  input: "^rconv4/w1/Momentum/Assign"
  input: "^rconv4/w2/Assign"
  input: "^rconv4/w2/Momentum/Assign"
  input: "^rconv5/norm1/beta/Assign"
  input: "^rconv5/norm1/beta/Momentum/Assign"
  input: "^rconv5/norm1b/beta/Assign"
  input: "^rconv5/norm1b/beta/Momentum/Assign"
  input: "^rconv5/norm2/beta/Assign"
  input: "^rconv5/norm2/beta/Momentum/Assign"
  input: "^rconv5/norm2/gamma/Assign"
  input: "^rconv5/norm2/gamma/Momentum/Assign"
  input: "^rconv5/w1a/Assign"
  input: "^rconv5/w1a/Momentum/Assign"
  input: "^rconv5/w1b/Assign"
  input: "^rconv5/w1b/Momentum/Assign"
  input: "^rconv5/w1r/Assign"
  input: "^rconv5/w1r/Momentum/Assign"
  input: "^rconv5/w2/Assign"
  input: "^rconv5/w2/Momentum/Assign"
  input: "^rconv6/norm1/beta/Assign"
  input: "^rconv6/norm1/beta/Momentum/Assign"
  input: "^rconv6/norm2/beta/Assign"
  input: "^rconv6/norm2/beta/Momentum/Assign"
  input: "^rconv6/norm2/gamma/Assign"
  input: "^rconv6/norm2/gamma/Momentum/Assign"
  input: "^rconv6/w1/Assign"
  input: "^rconv6/w1/Momentum/Assign"
  input: "^rconv6/w2/Assign"
  input: "^rconv6/w2/Momentum/Assign"
  input: "^rloss/moving_w/Assign"
  input: "^rloss/moving_wx/Assign"
  input: "^rscloss/moving_w/Assign"
  input: "^rscloss/moving_wx/Assign"
  input: "^rsdloss/moving_w/Assign"
  input: "^rsdloss/moving_wx/Assign"
  input: "^sb2/b/Assign"
  input: "^sb2/b/Momentum/Assign"
  input: "^sb2/w/Assign"
  input: "^sb2/w/Momentum/Assign"
  input: "^sb2_offset/w/Assign"
  input: "^sb2_offset/w/Momentum/Assign"
  input: "^sb2_parity/w/Assign"
  input: "^sb2_parity/w/Momentum/Assign"
  input: "^sb3/w/Assign"
  input: "^sb3/w/Momentum/Assign"
  input: "^sbcdfloss/moving_w/Assign"
  input: "^sbcdfloss/moving_wx/Assign"
  input: "^sbpdfloss/moving_w/Assign"
  input: "^sbpdfloss/moving_wx/Assign"
  input: "^sbscale2/b/Assign"
  input: "^sbscale2/b/Momentum/Assign"
  input: "^sbscale2/w/Assign"
  input: "^sbscale2/w/Momentum/Assign"
  input: "^sbscale3/w/Assign"
  input: "^sbscale3/w/Momentum/Assign"
  input: "^seki/w/Assign"
  input: "^seki/w/Momentum/Assign"
  input: "^skloss/moving_w/Assign"
  input: "^skloss/moving_wx/Assign"
  input: "^sloss/moving_w/Assign"
  input: "^sloss/moving_wx/Assign"
  input: "^smloss/moving_w/Assign"
  input: "^smloss/moving_wx/Assign"
  input: "^tdsloss/moving_w/Assign"
  input: "^tdsloss/moving_wx/Assign"
  input: "^tdvloss/moving_w/Assign"
  input: "^tdvloss/moving_wx/Assign"
  input: "^trunk/norm/beta/Assign"
  input: "^trunk/norm/beta/Momentum/Assign"
  input: "^v1/norm/beta/Assign"
  input: "^v1/norm/beta/Momentum/Assign"
  input: "^v1/w/Assign"
  input: "^v1/w/Momentum/Assign"
  input: "^v2/b/Assign"
  input: "^v2/b/Momentum/Assign"
  input: "^v2/w/Assign"
  input: "^v2/w/Momentum/Assign"
  input: "^v3/b/Assign"
  input: "^v3/b/Momentum/Assign"
  input: "^v3/w/Assign"
  input: "^v3/w/Momentum/Assign"
  input: "^vloss/moving_w/Assign"
  input: "^vloss/moving_wx/Assign"
  input: "^vownership/w/Assign"
  input: "^vownership/w/Momentum/Assign"
  input: "^vscoring/w/Assign"
  input: "^vscoring/w/Momentum/Assign"
  input: "^vtimeloss/moving_w/Assign"
  input: "^vtimeloss/moving_wx/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "conv1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "ginputw"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "rconv1/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "rconv1/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "rconv1/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "rconv2/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "rconv2/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "rconv2/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "rconv3/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "rconv3/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "rconv3/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "rconv3/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "rconv4/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "rconv4/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "rconv4/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "rconv5/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "rconv5/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "rconv5/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "rconv5/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "rconv6/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "rconv6/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "rconv6/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "trunk/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "p1/intermediate_conv/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "g1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "g1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "matmulg2w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "p1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "p2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "matmulpass"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "v1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "v1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "v2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "v2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "v3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "v3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "mv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "mv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "mmv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "mmv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "sb2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "sb2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "sb2_offset/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "sb2_parity/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "sbscale2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "sbscale2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "sb3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "sbscale3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "vownership/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "vscoring/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "futurepos/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "seki/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "moving_unowned_proportion"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "conv1/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "ginputw/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "rconv1/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "rconv1/w1/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "rconv1/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "rconv2/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "rconv2/w1/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "rconv2/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "rconv3/w1a/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "rconv3/w1b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1b/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "rconv3/w1r/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "rconv3/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "rconv4/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "rconv4/w1/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "rconv4/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "rconv5/w1a/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "rconv5/w1b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1b/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "rconv5/w1r/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "rconv5/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "rconv6/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "rconv6/w1/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "rconv6/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "trunk/norm/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "p1/intermediate_conv/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "g1/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "g1/norm/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "matmulg2w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "p1/norm/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "p2/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "matmulpass/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "v1/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "v1/norm/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "v2/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "v2/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "v3/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "v3/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "mv3/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "mv3/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "mmv3/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "mmv3/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "sb2/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "sb2/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "sb2_offset/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "sb2_parity/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "sbscale2/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "sbscale2/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "sb3/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_133"
  op: "VarIsInitializedOp"
  input: "sbscale3/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_134"
  op: "VarIsInitializedOp"
  input: "vownership/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_135"
  op: "VarIsInitializedOp"
  input: "vscoring/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_136"
  op: "VarIsInitializedOp"
  input: "futurepos/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_137"
  op: "VarIsInitializedOp"
  input: "seki/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_138"
  op: "VarIsInitializedOp"
  input: "p0loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_139"
  op: "VarIsInitializedOp"
  input: "p0loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_140"
  op: "VarIsInitializedOp"
  input: "p1loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_141"
  op: "VarIsInitializedOp"
  input: "p1loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_142"
  op: "VarIsInitializedOp"
  input: "vloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_143"
  op: "VarIsInitializedOp"
  input: "vloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_144"
  op: "VarIsInitializedOp"
  input: "tdvloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_145"
  op: "VarIsInitializedOp"
  input: "tdvloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_146"
  op: "VarIsInitializedOp"
  input: "smloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_147"
  op: "VarIsInitializedOp"
  input: "smloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_148"
  op: "VarIsInitializedOp"
  input: "leadloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_149"
  op: "VarIsInitializedOp"
  input: "leadloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_150"
  op: "VarIsInitializedOp"
  input: "vtimeloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_151"
  op: "VarIsInitializedOp"
  input: "vtimeloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_152"
  op: "VarIsInitializedOp"
  input: "sbpdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_153"
  op: "VarIsInitializedOp"
  input: "sbpdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_154"
  op: "VarIsInitializedOp"
  input: "sbcdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_155"
  op: "VarIsInitializedOp"
  input: "sbcdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_156"
  op: "VarIsInitializedOp"
  input: "oloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_157"
  op: "VarIsInitializedOp"
  input: "oloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_158"
  op: "VarIsInitializedOp"
  input: "sloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_159"
  op: "VarIsInitializedOp"
  input: "sloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_160"
  op: "VarIsInitializedOp"
  input: "fploss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_161"
  op: "VarIsInitializedOp"
  input: "fploss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_162"
  op: "VarIsInitializedOp"
  input: "skloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_163"
  op: "VarIsInitializedOp"
  input: "skloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_164"
  op: "VarIsInitializedOp"
  input: "rsdloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_165"
  op: "VarIsInitializedOp"
  input: "rsdloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_166"
  op: "VarIsInitializedOp"
  input: "rloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_167"
  op: "VarIsInitializedOp"
  input: "rloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_168"
  op: "VarIsInitializedOp"
  input: "rscloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_169"
  op: "VarIsInitializedOp"
  input: "rscloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_170"
  op: "VarIsInitializedOp"
  input: "evstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_171"
  op: "VarIsInitializedOp"
  input: "evstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_172"
  op: "VarIsInitializedOp"
  input: "esstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_173"
  op: "VarIsInitializedOp"
  input: "esstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_174"
  op: "VarIsInitializedOp"
  input: "tdsloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_175"
  op: "VarIsInitializedOp"
  input: "tdsloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_176"
  op: "VarIsInitializedOp"
  input: "pacc1/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_177"
  op: "VarIsInitializedOp"
  input: "pacc1/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_178"
  op: "VarIsInitializedOp"
  input: "ptentr/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_179"
  op: "VarIsInitializedOp"
  input: "ptentr/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_180"
  op: "VarIsInitializedOp"
  input: "gnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_181"
  op: "VarIsInitializedOp"
  input: "gnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_182"
  op: "VarIsInitializedOp"
  input: "excessgnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_183"
  op: "VarIsInitializedOp"
  input: "excessgnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_184"
  op: "VarIsInitializedOp"
  input: "mean_1/total"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_185"
  op: "VarIsInitializedOp"
  input: "mean_1/count"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  input: "report_uninitialized_variables/VarIsInitializedOp_38"
  input: "report_uninitialized_variables/VarIsInitializedOp_39"
  input: "report_uninitialized_variables/VarIsInitializedOp_40"
  input: "report_uninitialized_variables/VarIsInitializedOp_41"
  input: "report_uninitialized_variables/VarIsInitializedOp_42"
  input: "report_uninitialized_variables/VarIsInitializedOp_43"
  input: "report_uninitialized_variables/VarIsInitializedOp_44"
  input: "report_uninitialized_variables/VarIsInitializedOp_45"
  input: "report_uninitialized_variables/VarIsInitializedOp_46"
  input: "report_uninitialized_variables/VarIsInitializedOp_47"
  input: "report_uninitialized_variables/VarIsInitializedOp_48"
  input: "report_uninitialized_variables/VarIsInitializedOp_49"
  input: "report_uninitialized_variables/VarIsInitializedOp_50"
  input: "report_uninitialized_variables/VarIsInitializedOp_51"
  input: "report_uninitialized_variables/VarIsInitializedOp_52"
  input: "report_uninitialized_variables/VarIsInitializedOp_53"
  input: "report_uninitialized_variables/VarIsInitializedOp_54"
  input: "report_uninitialized_variables/VarIsInitializedOp_55"
  input: "report_uninitialized_variables/VarIsInitializedOp_56"
  input: "report_uninitialized_variables/VarIsInitializedOp_57"
  input: "report_uninitialized_variables/VarIsInitializedOp_58"
  input: "report_uninitialized_variables/VarIsInitializedOp_59"
  input: "report_uninitialized_variables/VarIsInitializedOp_60"
  input: "report_uninitialized_variables/VarIsInitializedOp_61"
  input: "report_uninitialized_variables/VarIsInitializedOp_62"
  input: "report_uninitialized_variables/VarIsInitializedOp_63"
  input: "report_uninitialized_variables/VarIsInitializedOp_64"
  input: "report_uninitialized_variables/VarIsInitializedOp_65"
  input: "report_uninitialized_variables/VarIsInitializedOp_66"
  input: "report_uninitialized_variables/VarIsInitializedOp_67"
  input: "report_uninitialized_variables/VarIsInitializedOp_68"
  input: "report_uninitialized_variables/VarIsInitializedOp_69"
  input: "report_uninitialized_variables/VarIsInitializedOp_70"
  input: "report_uninitialized_variables/VarIsInitializedOp_71"
  input: "report_uninitialized_variables/VarIsInitializedOp_72"
  input: "report_uninitialized_variables/VarIsInitializedOp_73"
  input: "report_uninitialized_variables/VarIsInitializedOp_74"
  input: "report_uninitialized_variables/VarIsInitializedOp_75"
  input: "report_uninitialized_variables/VarIsInitializedOp_76"
  input: "report_uninitialized_variables/VarIsInitializedOp_77"
  input: "report_uninitialized_variables/VarIsInitializedOp_78"
  input: "report_uninitialized_variables/VarIsInitializedOp_79"
  input: "report_uninitialized_variables/VarIsInitializedOp_80"
  input: "report_uninitialized_variables/VarIsInitializedOp_81"
  input: "report_uninitialized_variables/VarIsInitializedOp_82"
  input: "report_uninitialized_variables/VarIsInitializedOp_83"
  input: "report_uninitialized_variables/VarIsInitializedOp_84"
  input: "report_uninitialized_variables/VarIsInitializedOp_85"
  input: "report_uninitialized_variables/VarIsInitializedOp_86"
  input: "report_uninitialized_variables/VarIsInitializedOp_87"
  input: "report_uninitialized_variables/VarIsInitializedOp_88"
  input: "report_uninitialized_variables/VarIsInitializedOp_89"
  input: "report_uninitialized_variables/VarIsInitializedOp_90"
  input: "report_uninitialized_variables/VarIsInitializedOp_91"
  input: "report_uninitialized_variables/VarIsInitializedOp_92"
  input: "report_uninitialized_variables/VarIsInitializedOp_93"
  input: "report_uninitialized_variables/VarIsInitializedOp_94"
  input: "report_uninitialized_variables/VarIsInitializedOp_95"
  input: "report_uninitialized_variables/VarIsInitializedOp_96"
  input: "report_uninitialized_variables/VarIsInitializedOp_97"
  input: "report_uninitialized_variables/VarIsInitializedOp_98"
  input: "report_uninitialized_variables/VarIsInitializedOp_99"
  input: "report_uninitialized_variables/VarIsInitializedOp_100"
  input: "report_uninitialized_variables/VarIsInitializedOp_101"
  input: "report_uninitialized_variables/VarIsInitializedOp_102"
  input: "report_uninitialized_variables/VarIsInitializedOp_103"
  input: "report_uninitialized_variables/VarIsInitializedOp_104"
  input: "report_uninitialized_variables/VarIsInitializedOp_105"
  input: "report_uninitialized_variables/VarIsInitializedOp_106"
  input: "report_uninitialized_variables/VarIsInitializedOp_107"
  input: "report_uninitialized_variables/VarIsInitializedOp_108"
  input: "report_uninitialized_variables/VarIsInitializedOp_109"
  input: "report_uninitialized_variables/VarIsInitializedOp_110"
  input: "report_uninitialized_variables/VarIsInitializedOp_111"
  input: "report_uninitialized_variables/VarIsInitializedOp_112"
  input: "report_uninitialized_variables/VarIsInitializedOp_113"
  input: "report_uninitialized_variables/VarIsInitializedOp_114"
  input: "report_uninitialized_variables/VarIsInitializedOp_115"
  input: "report_uninitialized_variables/VarIsInitializedOp_116"
  input: "report_uninitialized_variables/VarIsInitializedOp_117"
  input: "report_uninitialized_variables/VarIsInitializedOp_118"
  input: "report_uninitialized_variables/VarIsInitializedOp_119"
  input: "report_uninitialized_variables/VarIsInitializedOp_120"
  input: "report_uninitialized_variables/VarIsInitializedOp_121"
  input: "report_uninitialized_variables/VarIsInitializedOp_122"
  input: "report_uninitialized_variables/VarIsInitializedOp_123"
  input: "report_uninitialized_variables/VarIsInitializedOp_124"
  input: "report_uninitialized_variables/VarIsInitializedOp_125"
  input: "report_uninitialized_variables/VarIsInitializedOp_126"
  input: "report_uninitialized_variables/VarIsInitializedOp_127"
  input: "report_uninitialized_variables/VarIsInitializedOp_128"
  input: "report_uninitialized_variables/VarIsInitializedOp_129"
  input: "report_uninitialized_variables/VarIsInitializedOp_130"
  input: "report_uninitialized_variables/VarIsInitializedOp_131"
  input: "report_uninitialized_variables/VarIsInitializedOp_132"
  input: "report_uninitialized_variables/VarIsInitializedOp_133"
  input: "report_uninitialized_variables/VarIsInitializedOp_134"
  input: "report_uninitialized_variables/VarIsInitializedOp_135"
  input: "report_uninitialized_variables/VarIsInitializedOp_136"
  input: "report_uninitialized_variables/VarIsInitializedOp_137"
  input: "report_uninitialized_variables/VarIsInitializedOp_138"
  input: "report_uninitialized_variables/VarIsInitializedOp_139"
  input: "report_uninitialized_variables/VarIsInitializedOp_140"
  input: "report_uninitialized_variables/VarIsInitializedOp_141"
  input: "report_uninitialized_variables/VarIsInitializedOp_142"
  input: "report_uninitialized_variables/VarIsInitializedOp_143"
  input: "report_uninitialized_variables/VarIsInitializedOp_144"
  input: "report_uninitialized_variables/VarIsInitializedOp_145"
  input: "report_uninitialized_variables/VarIsInitializedOp_146"
  input: "report_uninitialized_variables/VarIsInitializedOp_147"
  input: "report_uninitialized_variables/VarIsInitializedOp_148"
  input: "report_uninitialized_variables/VarIsInitializedOp_149"
  input: "report_uninitialized_variables/VarIsInitializedOp_150"
  input: "report_uninitialized_variables/VarIsInitializedOp_151"
  input: "report_uninitialized_variables/VarIsInitializedOp_152"
  input: "report_uninitialized_variables/VarIsInitializedOp_153"
  input: "report_uninitialized_variables/VarIsInitializedOp_154"
  input: "report_uninitialized_variables/VarIsInitializedOp_155"
  input: "report_uninitialized_variables/VarIsInitializedOp_156"
  input: "report_uninitialized_variables/VarIsInitializedOp_157"
  input: "report_uninitialized_variables/VarIsInitializedOp_158"
  input: "report_uninitialized_variables/VarIsInitializedOp_159"
  input: "report_uninitialized_variables/VarIsInitializedOp_160"
  input: "report_uninitialized_variables/VarIsInitializedOp_161"
  input: "report_uninitialized_variables/VarIsInitializedOp_162"
  input: "report_uninitialized_variables/VarIsInitializedOp_163"
  input: "report_uninitialized_variables/VarIsInitializedOp_164"
  input: "report_uninitialized_variables/VarIsInitializedOp_165"
  input: "report_uninitialized_variables/VarIsInitializedOp_166"
  input: "report_uninitialized_variables/VarIsInitializedOp_167"
  input: "report_uninitialized_variables/VarIsInitializedOp_168"
  input: "report_uninitialized_variables/VarIsInitializedOp_169"
  input: "report_uninitialized_variables/VarIsInitializedOp_170"
  input: "report_uninitialized_variables/VarIsInitializedOp_171"
  input: "report_uninitialized_variables/VarIsInitializedOp_172"
  input: "report_uninitialized_variables/VarIsInitializedOp_173"
  input: "report_uninitialized_variables/VarIsInitializedOp_174"
  input: "report_uninitialized_variables/VarIsInitializedOp_175"
  input: "report_uninitialized_variables/VarIsInitializedOp_176"
  input: "report_uninitialized_variables/VarIsInitializedOp_177"
  input: "report_uninitialized_variables/VarIsInitializedOp_178"
  input: "report_uninitialized_variables/VarIsInitializedOp_179"
  input: "report_uninitialized_variables/VarIsInitializedOp_180"
  input: "report_uninitialized_variables/VarIsInitializedOp_181"
  input: "report_uninitialized_variables/VarIsInitializedOp_182"
  input: "report_uninitialized_variables/VarIsInitializedOp_183"
  input: "report_uninitialized_variables/VarIsInitializedOp_184"
  input: "report_uninitialized_variables/VarIsInitializedOp_185"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 186
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 186
          }
        }
        string_val: "global_step"
        string_val: "conv1/w"
        string_val: "ginputw"
        string_val: "rconv1/norm1/beta"
        string_val: "rconv1/w1"
        string_val: "rconv1/norm2/gamma"
        string_val: "rconv1/norm2/beta"
        string_val: "rconv1/w2"
        string_val: "rconv2/norm1/beta"
        string_val: "rconv2/w1"
        string_val: "rconv2/norm2/gamma"
        string_val: "rconv2/norm2/beta"
        string_val: "rconv2/w2"
        string_val: "rconv3/norm1/beta"
        string_val: "rconv3/w1a"
        string_val: "rconv3/w1b"
        string_val: "rconv3/norm1b/beta"
        string_val: "rconv3/w1r"
        string_val: "rconv3/norm2/gamma"
        string_val: "rconv3/norm2/beta"
        string_val: "rconv3/w2"
        string_val: "rconv4/norm1/beta"
        string_val: "rconv4/w1"
        string_val: "rconv4/norm2/gamma"
        string_val: "rconv4/norm2/beta"
        string_val: "rconv4/w2"
        string_val: "rconv5/norm1/beta"
        string_val: "rconv5/w1a"
        string_val: "rconv5/w1b"
        string_val: "rconv5/norm1b/beta"
        string_val: "rconv5/w1r"
        string_val: "rconv5/norm2/gamma"
        string_val: "rconv5/norm2/beta"
        string_val: "rconv5/w2"
        string_val: "rconv6/norm1/beta"
        string_val: "rconv6/w1"
        string_val: "rconv6/norm2/gamma"
        string_val: "rconv6/norm2/beta"
        string_val: "rconv6/w2"
        string_val: "trunk/norm/beta"
        string_val: "p1/intermediate_conv/w"
        string_val: "g1/w"
        string_val: "g1/norm/beta"
        string_val: "matmulg2w"
        string_val: "p1/norm/beta"
        string_val: "p2/w"
        string_val: "matmulpass"
        string_val: "v1/w"
        string_val: "v1/norm/beta"
        string_val: "v2/w"
        string_val: "v2/b"
        string_val: "v3/w"
        string_val: "v3/b"
        string_val: "mv3/w"
        string_val: "mv3/b"
        string_val: "mmv3/w"
        string_val: "mmv3/b"
        string_val: "sb2/w"
        string_val: "sb2/b"
        string_val: "sb2_offset/w"
        string_val: "sb2_parity/w"
        string_val: "sbscale2/w"
        string_val: "sbscale2/b"
        string_val: "sb3/w"
        string_val: "sbscale3/w"
        string_val: "vownership/w"
        string_val: "vscoring/w"
        string_val: "futurepos/w"
        string_val: "seki/w"
        string_val: "moving_unowned_proportion"
        string_val: "conv1/w/Momentum"
        string_val: "ginputw/Momentum"
        string_val: "rconv1/norm1/beta/Momentum"
        string_val: "rconv1/w1/Momentum"
        string_val: "rconv1/norm2/gamma/Momentum"
        string_val: "rconv1/norm2/beta/Momentum"
        string_val: "rconv1/w2/Momentum"
        string_val: "rconv2/norm1/beta/Momentum"
        string_val: "rconv2/w1/Momentum"
        string_val: "rconv2/norm2/gamma/Momentum"
        string_val: "rconv2/norm2/beta/Momentum"
        string_val: "rconv2/w2/Momentum"
        string_val: "rconv3/norm1/beta/Momentum"
        string_val: "rconv3/w1a/Momentum"
        string_val: "rconv3/w1b/Momentum"
        string_val: "rconv3/norm1b/beta/Momentum"
        string_val: "rconv3/w1r/Momentum"
        string_val: "rconv3/norm2/gamma/Momentum"
        string_val: "rconv3/norm2/beta/Momentum"
        string_val: "rconv3/w2/Momentum"
        string_val: "rconv4/norm1/beta/Momentum"
        string_val: "rconv4/w1/Momentum"
        string_val: "rconv4/norm2/gamma/Momentum"
        string_val: "rconv4/norm2/beta/Momentum"
        string_val: "rconv4/w2/Momentum"
        string_val: "rconv5/norm1/beta/Momentum"
        string_val: "rconv5/w1a/Momentum"
        string_val: "rconv5/w1b/Momentum"
        string_val: "rconv5/norm1b/beta/Momentum"
        string_val: "rconv5/w1r/Momentum"
        string_val: "rconv5/norm2/gamma/Momentum"
        string_val: "rconv5/norm2/beta/Momentum"
        string_val: "rconv5/w2/Momentum"
        string_val: "rconv6/norm1/beta/Momentum"
        string_val: "rconv6/w1/Momentum"
        string_val: "rconv6/norm2/gamma/Momentum"
        string_val: "rconv6/norm2/beta/Momentum"
        string_val: "rconv6/w2/Momentum"
        string_val: "trunk/norm/beta/Momentum"
        string_val: "p1/intermediate_conv/w/Momentum"
        string_val: "g1/w/Momentum"
        string_val: "g1/norm/beta/Momentum"
        string_val: "matmulg2w/Momentum"
        string_val: "p1/norm/beta/Momentum"
        string_val: "p2/w/Momentum"
        string_val: "matmulpass/Momentum"
        string_val: "v1/w/Momentum"
        string_val: "v1/norm/beta/Momentum"
        string_val: "v2/w/Momentum"
        string_val: "v2/b/Momentum"
        string_val: "v3/w/Momentum"
        string_val: "v3/b/Momentum"
        string_val: "mv3/w/Momentum"
        string_val: "mv3/b/Momentum"
        string_val: "mmv3/w/Momentum"
        string_val: "mmv3/b/Momentum"
        string_val: "sb2/w/Momentum"
        string_val: "sb2/b/Momentum"
        string_val: "sb2_offset/w/Momentum"
        string_val: "sb2_parity/w/Momentum"
        string_val: "sbscale2/w/Momentum"
        string_val: "sbscale2/b/Momentum"
        string_val: "sb3/w/Momentum"
        string_val: "sbscale3/w/Momentum"
        string_val: "vownership/w/Momentum"
        string_val: "vscoring/w/Momentum"
        string_val: "futurepos/w/Momentum"
        string_val: "seki/w/Momentum"
        string_val: "p0loss/moving_wx"
        string_val: "p0loss/moving_w"
        string_val: "p1loss/moving_wx"
        string_val: "p1loss/moving_w"
        string_val: "vloss/moving_wx"
        string_val: "vloss/moving_w"
        string_val: "tdvloss/moving_wx"
        string_val: "tdvloss/moving_w"
        string_val: "smloss/moving_wx"
        string_val: "smloss/moving_w"
        string_val: "leadloss/moving_wx"
        string_val: "leadloss/moving_w"
        string_val: "vtimeloss/moving_wx"
        string_val: "vtimeloss/moving_w"
        string_val: "sbpdfloss/moving_wx"
        string_val: "sbpdfloss/moving_w"
        string_val: "sbcdfloss/moving_wx"
        string_val: "sbcdfloss/moving_w"
        string_val: "oloss/moving_wx"
        string_val: "oloss/moving_w"
        string_val: "sloss/moving_wx"
        string_val: "sloss/moving_w"
        string_val: "fploss/moving_wx"
        string_val: "fploss/moving_w"
        string_val: "skloss/moving_wx"
        string_val: "skloss/moving_w"
        string_val: "rsdloss/moving_wx"
        string_val: "rsdloss/moving_w"
        string_val: "rloss/moving_wx"
        string_val: "rloss/moving_w"
        string_val: "rscloss/moving_wx"
        string_val: "rscloss/moving_w"
        string_val: "evstloss/moving_wx"
        string_val: "evstloss/moving_w"
        string_val: "esstloss/moving_wx"
        string_val: "esstloss/moving_w"
        string_val: "tdsloss/moving_wx"
        string_val: "tdsloss/moving_w"
        string_val: "pacc1/moving_wx"
        string_val: "pacc1/moving_w"
        string_val: "ptentr/moving_wx"
        string_val: "ptentr/moving_w"
        string_val: "gnorm/moving_wx"
        string_val: "gnorm/moving_w"
        string_val: "excessgnorm/moving_wx"
        string_val: "excessgnorm/moving_w"
        string_val: "mean_1/total"
        string_val: "mean_1/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 186
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 186
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 186
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 186
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_4"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "conv1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "ginputw"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "rconv1/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "rconv1/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "rconv1/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "rconv2/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "rconv2/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "rconv2/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "rconv3/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "rconv3/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "rconv3/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "rconv3/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "rconv4/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "rconv4/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "rconv4/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "rconv5/w1a"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "rconv5/w1b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1b/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "rconv5/w1r"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "rconv5/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "rconv6/norm1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "rconv6/w1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "rconv6/w2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "trunk/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "p1/intermediate_conv/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "g1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "g1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "matmulg2w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "p1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "p2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "matmulpass"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "v1/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "v1/norm/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "v2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "v2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "v3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "v3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "mv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "mv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "mmv3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "mmv3/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "sb2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "sb2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "sb2_offset/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "sb2_parity/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "sbscale2/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "sbscale2/b"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "sb3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "sbscale3/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "vownership/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "vscoring/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "futurepos/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "seki/w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "moving_unowned_proportion"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "conv1/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "ginputw/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "rconv1/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "rconv1/w1/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "rconv1/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "rconv1/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "rconv2/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "rconv2/w1/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "rconv2/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "rconv2/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "rconv3/w1a/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "rconv3/w1b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "rconv3/norm1b/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "rconv3/w1r/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "rconv3/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "rconv3/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "rconv4/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "rconv4/w1/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "rconv4/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "rconv4/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "rconv5/w1a/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "rconv5/w1b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "rconv5/norm1b/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "rconv5/w1r/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "rconv5/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "rconv5/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "rconv6/norm1/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "rconv6/w1/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/gamma/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "rconv6/norm2/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "rconv6/w2/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "trunk/norm/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "p1/intermediate_conv/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "g1/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "g1/norm/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "matmulg2w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "p1/norm/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "p2/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "matmulpass/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "v1/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "v1/norm/beta/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "v2/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "v2/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "v3/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "v3/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "mv3/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "mv3/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "mmv3/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "mmv3/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "sb2/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "sb2/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "sb2_offset/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "sb2_parity/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "sbscale2/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "sbscale2/b/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "sb3/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_133"
  op: "VarIsInitializedOp"
  input: "sbscale3/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_134"
  op: "VarIsInitializedOp"
  input: "vownership/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_135"
  op: "VarIsInitializedOp"
  input: "vscoring/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_136"
  op: "VarIsInitializedOp"
  input: "futurepos/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_137"
  op: "VarIsInitializedOp"
  input: "seki/w/Momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_138"
  op: "VarIsInitializedOp"
  input: "p0loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_139"
  op: "VarIsInitializedOp"
  input: "p0loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_140"
  op: "VarIsInitializedOp"
  input: "p1loss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_141"
  op: "VarIsInitializedOp"
  input: "p1loss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_142"
  op: "VarIsInitializedOp"
  input: "vloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_143"
  op: "VarIsInitializedOp"
  input: "vloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_144"
  op: "VarIsInitializedOp"
  input: "tdvloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_145"
  op: "VarIsInitializedOp"
  input: "tdvloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_146"
  op: "VarIsInitializedOp"
  input: "smloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_147"
  op: "VarIsInitializedOp"
  input: "smloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_148"
  op: "VarIsInitializedOp"
  input: "leadloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_149"
  op: "VarIsInitializedOp"
  input: "leadloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_150"
  op: "VarIsInitializedOp"
  input: "vtimeloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_151"
  op: "VarIsInitializedOp"
  input: "vtimeloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_152"
  op: "VarIsInitializedOp"
  input: "sbpdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_153"
  op: "VarIsInitializedOp"
  input: "sbpdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_154"
  op: "VarIsInitializedOp"
  input: "sbcdfloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_155"
  op: "VarIsInitializedOp"
  input: "sbcdfloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_156"
  op: "VarIsInitializedOp"
  input: "oloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_157"
  op: "VarIsInitializedOp"
  input: "oloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_158"
  op: "VarIsInitializedOp"
  input: "sloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_159"
  op: "VarIsInitializedOp"
  input: "sloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_160"
  op: "VarIsInitializedOp"
  input: "fploss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_161"
  op: "VarIsInitializedOp"
  input: "fploss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_162"
  op: "VarIsInitializedOp"
  input: "skloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_163"
  op: "VarIsInitializedOp"
  input: "skloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_164"
  op: "VarIsInitializedOp"
  input: "rsdloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_165"
  op: "VarIsInitializedOp"
  input: "rsdloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_166"
  op: "VarIsInitializedOp"
  input: "rloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_167"
  op: "VarIsInitializedOp"
  input: "rloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_168"
  op: "VarIsInitializedOp"
  input: "rscloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_169"
  op: "VarIsInitializedOp"
  input: "rscloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_170"
  op: "VarIsInitializedOp"
  input: "evstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_171"
  op: "VarIsInitializedOp"
  input: "evstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_172"
  op: "VarIsInitializedOp"
  input: "esstloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_173"
  op: "VarIsInitializedOp"
  input: "esstloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_174"
  op: "VarIsInitializedOp"
  input: "tdsloss/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_175"
  op: "VarIsInitializedOp"
  input: "tdsloss/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_176"
  op: "VarIsInitializedOp"
  input: "pacc1/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_177"
  op: "VarIsInitializedOp"
  input: "pacc1/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_178"
  op: "VarIsInitializedOp"
  input: "ptentr/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_179"
  op: "VarIsInitializedOp"
  input: "ptentr/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_180"
  op: "VarIsInitializedOp"
  input: "gnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_181"
  op: "VarIsInitializedOp"
  input: "gnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_182"
  op: "VarIsInitializedOp"
  input: "excessgnorm/moving_wx"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_183"
  op: "VarIsInitializedOp"
  input: "excessgnorm/moving_w"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_77"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_78"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_79"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_80"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_81"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_82"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_83"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_84"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_85"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_86"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_87"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_88"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_89"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_90"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_91"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_92"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_93"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_94"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_95"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_96"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_97"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_98"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_99"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_100"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_101"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_102"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_103"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_104"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_105"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_106"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_107"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_108"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_109"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_110"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_111"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_112"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_113"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_114"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_115"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_116"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_117"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_118"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_119"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_120"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_121"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_122"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_123"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_124"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_125"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_126"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_127"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_128"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_129"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_130"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_131"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_132"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_133"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_134"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_135"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_136"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_137"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_138"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_139"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_140"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_141"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_142"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_143"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_144"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_145"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_146"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_147"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_148"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_149"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_150"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_151"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_152"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_153"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_154"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_155"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_156"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_157"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_158"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_159"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_160"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_161"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_162"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_163"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_164"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_165"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_166"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_167"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_168"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_169"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_170"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_171"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_172"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_173"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_174"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_175"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_176"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_177"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_178"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_179"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_180"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_181"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_182"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_183"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 184
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 184
          }
        }
        string_val: "global_step"
        string_val: "conv1/w"
        string_val: "ginputw"
        string_val: "rconv1/norm1/beta"
        string_val: "rconv1/w1"
        string_val: "rconv1/norm2/gamma"
        string_val: "rconv1/norm2/beta"
        string_val: "rconv1/w2"
        string_val: "rconv2/norm1/beta"
        string_val: "rconv2/w1"
        string_val: "rconv2/norm2/gamma"
        string_val: "rconv2/norm2/beta"
        string_val: "rconv2/w2"
        string_val: "rconv3/norm1/beta"
        string_val: "rconv3/w1a"
        string_val: "rconv3/w1b"
        string_val: "rconv3/norm1b/beta"
        string_val: "rconv3/w1r"
        string_val: "rconv3/norm2/gamma"
        string_val: "rconv3/norm2/beta"
        string_val: "rconv3/w2"
        string_val: "rconv4/norm1/beta"
        string_val: "rconv4/w1"
        string_val: "rconv4/norm2/gamma"
        string_val: "rconv4/norm2/beta"
        string_val: "rconv4/w2"
        string_val: "rconv5/norm1/beta"
        string_val: "rconv5/w1a"
        string_val: "rconv5/w1b"
        string_val: "rconv5/norm1b/beta"
        string_val: "rconv5/w1r"
        string_val: "rconv5/norm2/gamma"
        string_val: "rconv5/norm2/beta"
        string_val: "rconv5/w2"
        string_val: "rconv6/norm1/beta"
        string_val: "rconv6/w1"
        string_val: "rconv6/norm2/gamma"
        string_val: "rconv6/norm2/beta"
        string_val: "rconv6/w2"
        string_val: "trunk/norm/beta"
        string_val: "p1/intermediate_conv/w"
        string_val: "g1/w"
        string_val: "g1/norm/beta"
        string_val: "matmulg2w"
        string_val: "p1/norm/beta"
        string_val: "p2/w"
        string_val: "matmulpass"
        string_val: "v1/w"
        string_val: "v1/norm/beta"
        string_val: "v2/w"
        string_val: "v2/b"
        string_val: "v3/w"
        string_val: "v3/b"
        string_val: "mv3/w"
        string_val: "mv3/b"
        string_val: "mmv3/w"
        string_val: "mmv3/b"
        string_val: "sb2/w"
        string_val: "sb2/b"
        string_val: "sb2_offset/w"
        string_val: "sb2_parity/w"
        string_val: "sbscale2/w"
        string_val: "sbscale2/b"
        string_val: "sb3/w"
        string_val: "sbscale3/w"
        string_val: "vownership/w"
        string_val: "vscoring/w"
        string_val: "futurepos/w"
        string_val: "seki/w"
        string_val: "moving_unowned_proportion"
        string_val: "conv1/w/Momentum"
        string_val: "ginputw/Momentum"
        string_val: "rconv1/norm1/beta/Momentum"
        string_val: "rconv1/w1/Momentum"
        string_val: "rconv1/norm2/gamma/Momentum"
        string_val: "rconv1/norm2/beta/Momentum"
        string_val: "rconv1/w2/Momentum"
        string_val: "rconv2/norm1/beta/Momentum"
        string_val: "rconv2/w1/Momentum"
        string_val: "rconv2/norm2/gamma/Momentum"
        string_val: "rconv2/norm2/beta/Momentum"
        string_val: "rconv2/w2/Momentum"
        string_val: "rconv3/norm1/beta/Momentum"
        string_val: "rconv3/w1a/Momentum"
        string_val: "rconv3/w1b/Momentum"
        string_val: "rconv3/norm1b/beta/Momentum"
        string_val: "rconv3/w1r/Momentum"
        string_val: "rconv3/norm2/gamma/Momentum"
        string_val: "rconv3/norm2/beta/Momentum"
        string_val: "rconv3/w2/Momentum"
        string_val: "rconv4/norm1/beta/Momentum"
        string_val: "rconv4/w1/Momentum"
        string_val: "rconv4/norm2/gamma/Momentum"
        string_val: "rconv4/norm2/beta/Momentum"
        string_val: "rconv4/w2/Momentum"
        string_val: "rconv5/norm1/beta/Momentum"
        string_val: "rconv5/w1a/Momentum"
        string_val: "rconv5/w1b/Momentum"
        string_val: "rconv5/norm1b/beta/Momentum"
        string_val: "rconv5/w1r/Momentum"
        string_val: "rconv5/norm2/gamma/Momentum"
        string_val: "rconv5/norm2/beta/Momentum"
        string_val: "rconv5/w2/Momentum"
        string_val: "rconv6/norm1/beta/Momentum"
        string_val: "rconv6/w1/Momentum"
        string_val: "rconv6/norm2/gamma/Momentum"
        string_val: "rconv6/norm2/beta/Momentum"
        string_val: "rconv6/w2/Momentum"
        string_val: "trunk/norm/beta/Momentum"
        string_val: "p1/intermediate_conv/w/Momentum"
        string_val: "g1/w/Momentum"
        string_val: "g1/norm/beta/Momentum"
        string_val: "matmulg2w/Momentum"
        string_val: "p1/norm/beta/Momentum"
        string_val: "p2/w/Momentum"
        string_val: "matmulpass/Momentum"
        string_val: "v1/w/Momentum"
        string_val: "v1/norm/beta/Momentum"
        string_val: "v2/w/Momentum"
        string_val: "v2/b/Momentum"
        string_val: "v3/w/Momentum"
        string_val: "v3/b/Momentum"
        string_val: "mv3/w/Momentum"
        string_val: "mv3/b/Momentum"
        string_val: "mmv3/w/Momentum"
        string_val: "mmv3/b/Momentum"
        string_val: "sb2/w/Momentum"
        string_val: "sb2/b/Momentum"
        string_val: "sb2_offset/w/Momentum"
        string_val: "sb2_parity/w/Momentum"
        string_val: "sbscale2/w/Momentum"
        string_val: "sbscale2/b/Momentum"
        string_val: "sb3/w/Momentum"
        string_val: "sbscale3/w/Momentum"
        string_val: "vownership/w/Momentum"
        string_val: "vscoring/w/Momentum"
        string_val: "futurepos/w/Momentum"
        string_val: "seki/w/Momentum"
        string_val: "p0loss/moving_wx"
        string_val: "p0loss/moving_w"
        string_val: "p1loss/moving_wx"
        string_val: "p1loss/moving_w"
        string_val: "vloss/moving_wx"
        string_val: "vloss/moving_w"
        string_val: "tdvloss/moving_wx"
        string_val: "tdvloss/moving_w"
        string_val: "smloss/moving_wx"
        string_val: "smloss/moving_w"
        string_val: "leadloss/moving_wx"
        string_val: "leadloss/moving_w"
        string_val: "vtimeloss/moving_wx"
        string_val: "vtimeloss/moving_w"
        string_val: "sbpdfloss/moving_wx"
        string_val: "sbpdfloss/moving_w"
        string_val: "sbcdfloss/moving_wx"
        string_val: "sbcdfloss/moving_w"
        string_val: "oloss/moving_wx"
        string_val: "oloss/moving_w"
        string_val: "sloss/moving_wx"
        string_val: "sloss/moving_w"
        string_val: "fploss/moving_wx"
        string_val: "fploss/moving_w"
        string_val: "skloss/moving_wx"
        string_val: "skloss/moving_w"
        string_val: "rsdloss/moving_wx"
        string_val: "rsdloss/moving_w"
        string_val: "rloss/moving_wx"
        string_val: "rloss/moving_w"
        string_val: "rscloss/moving_wx"
        string_val: "rscloss/moving_w"
        string_val: "evstloss/moving_wx"
        string_val: "evstloss/moving_w"
        string_val: "esstloss/moving_wx"
        string_val: "esstloss/moving_w"
        string_val: "tdsloss/moving_wx"
        string_val: "tdsloss/moving_w"
        string_val: "pacc1/moving_wx"
        string_val: "pacc1/moving_w"
        string_val: "ptentr/moving_wx"
        string_val: "ptentr/moving_w"
        string_val: "gnorm/moving_wx"
        string_val: "gnorm/moving_w"
        string_val: "excessgnorm/moving_wx"
        string_val: "excessgnorm/moving_w"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 184
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 184
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 184
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_5"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^mean_1/count/Assign"
  input: "^mean_1/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StaticRegexFullMatch"
  op: "StaticRegexFullMatch"
  input: "save/Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "pattern"
    value {
      s: "^s3://.*"
    }
  }
}
node {
  name: "save/Const_1"
  op: "Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ".part"
      }
    }
  }
}
node {
  name: "save/Const_2"
  op: "Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp/part"
      }
    }
  }
}
node {
  name: "save/Select"
  op: "Select"
  input: "save/StaticRegexFullMatch"
  input: "save/Const_1"
  input: "save/Const_2"
  device: "/device:CPU:*"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/Select"
  device: "/device:CPU:*"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 184
          }
        }
        string_val: "conv1/w"
        string_val: "conv1/w/Momentum"
        string_val: "esstloss/moving_w"
        string_val: "esstloss/moving_wx"
        string_val: "evstloss/moving_w"
        string_val: "evstloss/moving_wx"
        string_val: "excessgnorm/moving_w"
        string_val: "excessgnorm/moving_wx"
        string_val: "fploss/moving_w"
        string_val: "fploss/moving_wx"
        string_val: "futurepos/w"
        string_val: "futurepos/w/Momentum"
        string_val: "g1/norm/beta"
        string_val: "g1/norm/beta/Momentum"
        string_val: "g1/w"
        string_val: "g1/w/Momentum"
        string_val: "ginputw"
        string_val: "ginputw/Momentum"
        string_val: "global_step"
        string_val: "gnorm/moving_w"
        string_val: "gnorm/moving_wx"
        string_val: "leadloss/moving_w"
        string_val: "leadloss/moving_wx"
        string_val: "matmulg2w"
        string_val: "matmulg2w/Momentum"
        string_val: "matmulpass"
        string_val: "matmulpass/Momentum"
        string_val: "mmv3/b"
        string_val: "mmv3/b/Momentum"
        string_val: "mmv3/w"
        string_val: "mmv3/w/Momentum"
        string_val: "moving_unowned_proportion"
        string_val: "mv3/b"
        string_val: "mv3/b/Momentum"
        string_val: "mv3/w"
        string_val: "mv3/w/Momentum"
        string_val: "oloss/moving_w"
        string_val: "oloss/moving_wx"
        string_val: "p0loss/moving_w"
        string_val: "p0loss/moving_wx"
        string_val: "p1/intermediate_conv/w"
        string_val: "p1/intermediate_conv/w/Momentum"
        string_val: "p1/norm/beta"
        string_val: "p1/norm/beta/Momentum"
        string_val: "p1loss/moving_w"
        string_val: "p1loss/moving_wx"
        string_val: "p2/w"
        string_val: "p2/w/Momentum"
        string_val: "pacc1/moving_w"
        string_val: "pacc1/moving_wx"
        string_val: "ptentr/moving_w"
        string_val: "ptentr/moving_wx"
        string_val: "rconv1/norm1/beta"
        string_val: "rconv1/norm1/beta/Momentum"
        string_val: "rconv1/norm2/beta"
        string_val: "rconv1/norm2/beta/Momentum"
        string_val: "rconv1/norm2/gamma"
        string_val: "rconv1/norm2/gamma/Momentum"
        string_val: "rconv1/w1"
        string_val: "rconv1/w1/Momentum"
        string_val: "rconv1/w2"
        string_val: "rconv1/w2/Momentum"
        string_val: "rconv2/norm1/beta"
        string_val: "rconv2/norm1/beta/Momentum"
        string_val: "rconv2/norm2/beta"
        string_val: "rconv2/norm2/beta/Momentum"
        string_val: "rconv2/norm2/gamma"
        string_val: "rconv2/norm2/gamma/Momentum"
        string_val: "rconv2/w1"
        string_val: "rconv2/w1/Momentum"
        string_val: "rconv2/w2"
        string_val: "rconv2/w2/Momentum"
        string_val: "rconv3/norm1/beta"
        string_val: "rconv3/norm1/beta/Momentum"
        string_val: "rconv3/norm1b/beta"
        string_val: "rconv3/norm1b/beta/Momentum"
        string_val: "rconv3/norm2/beta"
        string_val: "rconv3/norm2/beta/Momentum"
        string_val: "rconv3/norm2/gamma"
        string_val: "rconv3/norm2/gamma/Momentum"
        string_val: "rconv3/w1a"
        string_val: "rconv3/w1a/Momentum"
        string_val: "rconv3/w1b"
        string_val: "rconv3/w1b/Momentum"
        string_val: "rconv3/w1r"
        string_val: "rconv3/w1r/Momentum"
        string_val: "rconv3/w2"
        string_val: "rconv3/w2/Momentum"
        string_val: "rconv4/norm1/beta"
        string_val: "rconv4/norm1/beta/Momentum"
        string_val: "rconv4/norm2/beta"
        string_val: "rconv4/norm2/beta/Momentum"
        string_val: "rconv4/norm2/gamma"
        string_val: "rconv4/norm2/gamma/Momentum"
        string_val: "rconv4/w1"
        string_val: "rconv4/w1/Momentum"
        string_val: "rconv4/w2"
        string_val: "rconv4/w2/Momentum"
        string_val: "rconv5/norm1/beta"
        string_val: "rconv5/norm1/beta/Momentum"
        string_val: "rconv5/norm1b/beta"
        string_val: "rconv5/norm1b/beta/Momentum"
        string_val: "rconv5/norm2/beta"
        string_val: "rconv5/norm2/beta/Momentum"
        string_val: "rconv5/norm2/gamma"
        string_val: "rconv5/norm2/gamma/Momentum"
        string_val: "rconv5/w1a"
        string_val: "rconv5/w1a/Momentum"
        string_val: "rconv5/w1b"
        string_val: "rconv5/w1b/Momentum"
        string_val: "rconv5/w1r"
        string_val: "rconv5/w1r/Momentum"
        string_val: "rconv5/w2"
        string_val: "rconv5/w2/Momentum"
        string_val: "rconv6/norm1/beta"
        string_val: "rconv6/norm1/beta/Momentum"
        string_val: "rconv6/norm2/beta"
        string_val: "rconv6/norm2/beta/Momentum"
        string_val: "rconv6/norm2/gamma"
        string_val: "rconv6/norm2/gamma/Momentum"
        string_val: "rconv6/w1"
        string_val: "rconv6/w1/Momentum"
        string_val: "rconv6/w2"
        string_val: "rconv6/w2/Momentum"
        string_val: "rloss/moving_w"
        string_val: "rloss/moving_wx"
        string_val: "rscloss/moving_w"
        string_val: "rscloss/moving_wx"
        string_val: "rsdloss/moving_w"
        string_val: "rsdloss/moving_wx"
        string_val: "sb2/b"
        string_val: "sb2/b/Momentum"
        string_val: "sb2/w"
        string_val: "sb2/w/Momentum"
        string_val: "sb2_offset/w"
        string_val: "sb2_offset/w/Momentum"
        string_val: "sb2_parity/w"
        string_val: "sb2_parity/w/Momentum"
        string_val: "sb3/w"
        string_val: "sb3/w/Momentum"
        string_val: "sbcdfloss/moving_w"
        string_val: "sbcdfloss/moving_wx"
        string_val: "sbpdfloss/moving_w"
        string_val: "sbpdfloss/moving_wx"
        string_val: "sbscale2/b"
        string_val: "sbscale2/b/Momentum"
        string_val: "sbscale2/w"
        string_val: "sbscale2/w/Momentum"
        string_val: "sbscale3/w"
        string_val: "sbscale3/w/Momentum"
        string_val: "seki/w"
        string_val: "seki/w/Momentum"
        string_val: "skloss/moving_w"
        string_val: "skloss/moving_wx"
        string_val: "sloss/moving_w"
        string_val: "sloss/moving_wx"
        string_val: "smloss/moving_w"
        string_val: "smloss/moving_wx"
        string_val: "tdsloss/moving_w"
        string_val: "tdsloss/moving_wx"
        string_val: "tdvloss/moving_w"
        string_val: "tdvloss/moving_wx"
        string_val: "trunk/norm/beta"
        string_val: "trunk/norm/beta/Momentum"
        string_val: "v1/norm/beta"
        string_val: "v1/norm/beta/Momentum"
        string_val: "v1/w"
        string_val: "v1/w/Momentum"
        string_val: "v2/b"
        string_val: "v2/b/Momentum"
        string_val: "v2/w"
        string_val: "v2/w/Momentum"
        string_val: "v3/b"
        string_val: "v3/b/Momentum"
        string_val: "v3/w"
        string_val: "v3/w/Momentum"
        string_val: "vloss/moving_w"
        string_val: "vloss/moving_wx"
        string_val: "vownership/w"
        string_val: "vownership/w/Momentum"
        string_val: "vscoring/w"
        string_val: "vscoring/w/Momentum"
        string_val: "vtimeloss/moving_w"
        string_val: "vtimeloss/moving_wx"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 184
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "conv1/w/Read/ReadVariableOp"
  input: "conv1/w/Momentum/Read/ReadVariableOp"
  input: "esstloss/moving_w/Read/ReadVariableOp"
  input: "esstloss/moving_wx/Read/ReadVariableOp"
  input: "evstloss/moving_w/Read/ReadVariableOp"
  input: "evstloss/moving_wx/Read/ReadVariableOp"
  input: "excessgnorm/moving_w/Read/ReadVariableOp"
  input: "excessgnorm/moving_wx/Read/ReadVariableOp"
  input: "fploss/moving_w/Read/ReadVariableOp"
  input: "fploss/moving_wx/Read/ReadVariableOp"
  input: "futurepos/w/Read/ReadVariableOp"
  input: "futurepos/w/Momentum/Read/ReadVariableOp"
  input: "g1/norm/beta/Read/ReadVariableOp"
  input: "g1/norm/beta/Momentum/Read/ReadVariableOp"
  input: "g1/w/Read/ReadVariableOp"
  input: "g1/w/Momentum/Read/ReadVariableOp"
  input: "ginputw/Read/ReadVariableOp"
  input: "ginputw/Momentum/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "gnorm/moving_w/Read/ReadVariableOp"
  input: "gnorm/moving_wx/Read/ReadVariableOp"
  input: "leadloss/moving_w/Read/ReadVariableOp"
  input: "leadloss/moving_wx/Read/ReadVariableOp"
  input: "matmulg2w/Read/ReadVariableOp"
  input: "matmulg2w/Momentum/Read/ReadVariableOp"
  input: "matmulpass/Read/ReadVariableOp"
  input: "matmulpass/Momentum/Read/ReadVariableOp"
  input: "mmv3/b/Read/ReadVariableOp"
  input: "mmv3/b/Momentum/Read/ReadVariableOp"
  input: "mmv3/w/Read/ReadVariableOp"
  input: "mmv3/w/Momentum/Read/ReadVariableOp"
  input: "moving_unowned_proportion/Read/ReadVariableOp"
  input: "mv3/b/Read/ReadVariableOp"
  input: "mv3/b/Momentum/Read/ReadVariableOp"
  input: "mv3/w/Read/ReadVariableOp"
  input: "mv3/w/Momentum/Read/ReadVariableOp"
  input: "oloss/moving_w/Read/ReadVariableOp"
  input: "oloss/moving_wx/Read/ReadVariableOp"
  input: "p0loss/moving_w/Read/ReadVariableOp"
  input: "p0loss/moving_wx/Read/ReadVariableOp"
  input: "p1/intermediate_conv/w/Read/ReadVariableOp"
  input: "p1/intermediate_conv/w/Momentum/Read/ReadVariableOp"
  input: "p1/norm/beta/Read/ReadVariableOp"
  input: "p1/norm/beta/Momentum/Read/ReadVariableOp"
  input: "p1loss/moving_w/Read/ReadVariableOp"
  input: "p1loss/moving_wx/Read/ReadVariableOp"
  input: "p2/w/Read/ReadVariableOp"
  input: "p2/w/Momentum/Read/ReadVariableOp"
  input: "pacc1/moving_w/Read/ReadVariableOp"
  input: "pacc1/moving_wx/Read/ReadVariableOp"
  input: "ptentr/moving_w/Read/ReadVariableOp"
  input: "ptentr/moving_wx/Read/ReadVariableOp"
  input: "rconv1/norm1/beta/Read/ReadVariableOp"
  input: "rconv1/norm1/beta/Momentum/Read/ReadVariableOp"
  input: "rconv1/norm2/beta/Read/ReadVariableOp"
  input: "rconv1/norm2/beta/Momentum/Read/ReadVariableOp"
  input: "rconv1/norm2/gamma/Read/ReadVariableOp"
  input: "rconv1/norm2/gamma/Momentum/Read/ReadVariableOp"
  input: "rconv1/w1/Read/ReadVariableOp"
  input: "rconv1/w1/Momentum/Read/ReadVariableOp"
  input: "rconv1/w2/Read/ReadVariableOp"
  input: "rconv1/w2/Momentum/Read/ReadVariableOp"
  input: "rconv2/norm1/beta/Read/ReadVariableOp"
  input: "rconv2/norm1/beta/Momentum/Read/ReadVariableOp"
  input: "rconv2/norm2/beta/Read/ReadVariableOp"
  input: "rconv2/norm2/beta/Momentum/Read/ReadVariableOp"
  input: "rconv2/norm2/gamma/Read/ReadVariableOp"
  input: "rconv2/norm2/gamma/Momentum/Read/ReadVariableOp"
  input: "rconv2/w1/Read/ReadVariableOp"
  input: "rconv2/w1/Momentum/Read/ReadVariableOp"
  input: "rconv2/w2/Read/ReadVariableOp"
  input: "rconv2/w2/Momentum/Read/ReadVariableOp"
  input: "rconv3/norm1/beta/Read/ReadVariableOp"
  input: "rconv3/norm1/beta/Momentum/Read/ReadVariableOp"
  input: "rconv3/norm1b/beta/Read/ReadVariableOp"
  input: "rconv3/norm1b/beta/Momentum/Read/ReadVariableOp"
  input: "rconv3/norm2/beta/Read/ReadVariableOp"
  input: "rconv3/norm2/beta/Momentum/Read/ReadVariableOp"
  input: "rconv3/norm2/gamma/Read/ReadVariableOp"
  input: "rconv3/norm2/gamma/Momentum/Read/ReadVariableOp"
  input: "rconv3/w1a/Read/ReadVariableOp"
  input: "rconv3/w1a/Momentum/Read/ReadVariableOp"
  input: "rconv3/w1b/Read/ReadVariableOp"
  input: "rconv3/w1b/Momentum/Read/ReadVariableOp"
  input: "rconv3/w1r/Read/ReadVariableOp"
  input: "rconv3/w1r/Momentum/Read/ReadVariableOp"
  input: "rconv3/w2/Read/ReadVariableOp"
  input: "rconv3/w2/Momentum/Read/ReadVariableOp"
  input: "rconv4/norm1/beta/Read/ReadVariableOp"
  input: "rconv4/norm1/beta/Momentum/Read/ReadVariableOp"
  input: "rconv4/norm2/beta/Read/ReadVariableOp"
  input: "rconv4/norm2/beta/Momentum/Read/ReadVariableOp"
  input: "rconv4/norm2/gamma/Read/ReadVariableOp"
  input: "rconv4/norm2/gamma/Momentum/Read/ReadVariableOp"
  input: "rconv4/w1/Read/ReadVariableOp"
  input: "rconv4/w1/Momentum/Read/ReadVariableOp"
  input: "rconv4/w2/Read/ReadVariableOp"
  input: "rconv4/w2/Momentum/Read/ReadVariableOp"
  input: "rconv5/norm1/beta/Read/ReadVariableOp"
  input: "rconv5/norm1/beta/Momentum/Read/ReadVariableOp"
  input: "rconv5/norm1b/beta/Read/ReadVariableOp"
  input: "rconv5/norm1b/beta/Momentum/Read/ReadVariableOp"
  input: "rconv5/norm2/beta/Read/ReadVariableOp"
  input: "rconv5/norm2/beta/Momentum/Read/ReadVariableOp"
  input: "rconv5/norm2/gamma/Read/ReadVariableOp"
  input: "rconv5/norm2/gamma/Momentum/Read/ReadVariableOp"
  input: "rconv5/w1a/Read/ReadVariableOp"
  input: "rconv5/w1a/Momentum/Read/ReadVariableOp"
  input: "rconv5/w1b/Read/ReadVariableOp"
  input: "rconv5/w1b/Momentum/Read/ReadVariableOp"
  input: "rconv5/w1r/Read/ReadVariableOp"
  input: "rconv5/w1r/Momentum/Read/ReadVariableOp"
  input: "rconv5/w2/Read/ReadVariableOp"
  input: "rconv5/w2/Momentum/Read/ReadVariableOp"
  input: "rconv6/norm1/beta/Read/ReadVariableOp"
  input: "rconv6/norm1/beta/Momentum/Read/ReadVariableOp"
  input: "rconv6/norm2/beta/Read/ReadVariableOp"
  input: "rconv6/norm2/beta/Momentum/Read/ReadVariableOp"
  input: "rconv6/norm2/gamma/Read/ReadVariableOp"
  input: "rconv6/norm2/gamma/Momentum/Read/ReadVariableOp"
  input: "rconv6/w1/Read/ReadVariableOp"
  input: "rconv6/w1/Momentum/Read/ReadVariableOp"
  input: "rconv6/w2/Read/ReadVariableOp"
  input: "rconv6/w2/Momentum/Read/ReadVariableOp"
  input: "rloss/moving_w/Read/ReadVariableOp"
  input: "rloss/moving_wx/Read/ReadVariableOp"
  input: "rscloss/moving_w/Read/ReadVariableOp"
  input: "rscloss/moving_wx/Read/ReadVariableOp"
  input: "rsdloss/moving_w/Read/ReadVariableOp"
  input: "rsdloss/moving_wx/Read/ReadVariableOp"
  input: "sb2/b/Read/ReadVariableOp"
  input: "sb2/b/Momentum/Read/ReadVariableOp"
  input: "sb2/w/Read/ReadVariableOp"
  input: "sb2/w/Momentum/Read/ReadVariableOp"
  input: "sb2_offset/w/Read/ReadVariableOp"
  input: "sb2_offset/w/Momentum/Read/ReadVariableOp"
  input: "sb2_parity/w/Read/ReadVariableOp"
  input: "sb2_parity/w/Momentum/Read/ReadVariableOp"
  input: "sb3/w/Read/ReadVariableOp"
  input: "sb3/w/Momentum/Read/ReadVariableOp"
  input: "sbcdfloss/moving_w/Read/ReadVariableOp"
  input: "sbcdfloss/moving_wx/Read/ReadVariableOp"
  input: "sbpdfloss/moving_w/Read/ReadVariableOp"
  input: "sbpdfloss/moving_wx/Read/ReadVariableOp"
  input: "sbscale2/b/Read/ReadVariableOp"
  input: "sbscale2/b/Momentum/Read/ReadVariableOp"
  input: "sbscale2/w/Read/ReadVariableOp"
  input: "sbscale2/w/Momentum/Read/ReadVariableOp"
  input: "sbscale3/w/Read/ReadVariableOp"
  input: "sbscale3/w/Momentum/Read/ReadVariableOp"
  input: "seki/w/Read/ReadVariableOp"
  input: "seki/w/Momentum/Read/ReadVariableOp"
  input: "skloss/moving_w/Read/ReadVariableOp"
  input: "skloss/moving_wx/Read/ReadVariableOp"
  input: "sloss/moving_w/Read/ReadVariableOp"
  input: "sloss/moving_wx/Read/ReadVariableOp"
  input: "smloss/moving_w/Read/ReadVariableOp"
  input: "smloss/moving_wx/Read/ReadVariableOp"
  input: "tdsloss/moving_w/Read/ReadVariableOp"
  input: "tdsloss/moving_wx/Read/ReadVariableOp"
  input: "tdvloss/moving_w/Read/ReadVariableOp"
  input: "tdvloss/moving_wx/Read/ReadVariableOp"
  input: "trunk/norm/beta/Read/ReadVariableOp"
  input: "trunk/norm/beta/Momentum/Read/ReadVariableOp"
  input: "v1/norm/beta/Read/ReadVariableOp"
  input: "v1/norm/beta/Momentum/Read/ReadVariableOp"
  input: "v1/w/Read/ReadVariableOp"
  input: "v1/w/Momentum/Read/ReadVariableOp"
  input: "v2/b/Read/ReadVariableOp"
  input: "v2/b/Momentum/Read/ReadVariableOp"
  input: "v2/w/Read/ReadVariableOp"
  input: "v2/w/Momentum/Read/ReadVariableOp"
  input: "v3/b/Read/ReadVariableOp"
  input: "v3/b/Momentum/Read/ReadVariableOp"
  input: "v3/w/Read/ReadVariableOp"
  input: "v3/w/Momentum/Read/ReadVariableOp"
  input: "vloss/moving_w/Read/ReadVariableOp"
  input: "vloss/moving_wx/Read/ReadVariableOp"
  input: "vownership/w/Read/ReadVariableOp"
  input: "vownership/w/Momentum/Read/ReadVariableOp"
  input: "vscoring/w/Read/ReadVariableOp"
  input: "vscoring/w/Momentum/Read/ReadVariableOp"
  input: "vtimeloss/moving_w/Read/ReadVariableOp"
  input: "vtimeloss/moving_wx/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 184
          }
        }
        string_val: "conv1/w"
        string_val: "conv1/w/Momentum"
        string_val: "esstloss/moving_w"
        string_val: "esstloss/moving_wx"
        string_val: "evstloss/moving_w"
        string_val: "evstloss/moving_wx"
        string_val: "excessgnorm/moving_w"
        string_val: "excessgnorm/moving_wx"
        string_val: "fploss/moving_w"
        string_val: "fploss/moving_wx"
        string_val: "futurepos/w"
        string_val: "futurepos/w/Momentum"
        string_val: "g1/norm/beta"
        string_val: "g1/norm/beta/Momentum"
        string_val: "g1/w"
        string_val: "g1/w/Momentum"
        string_val: "ginputw"
        string_val: "ginputw/Momentum"
        string_val: "global_step"
        string_val: "gnorm/moving_w"
        string_val: "gnorm/moving_wx"
        string_val: "leadloss/moving_w"
        string_val: "leadloss/moving_wx"
        string_val: "matmulg2w"
        string_val: "matmulg2w/Momentum"
        string_val: "matmulpass"
        string_val: "matmulpass/Momentum"
        string_val: "mmv3/b"
        string_val: "mmv3/b/Momentum"
        string_val: "mmv3/w"
        string_val: "mmv3/w/Momentum"
        string_val: "moving_unowned_proportion"
        string_val: "mv3/b"
        string_val: "mv3/b/Momentum"
        string_val: "mv3/w"
        string_val: "mv3/w/Momentum"
        string_val: "oloss/moving_w"
        string_val: "oloss/moving_wx"
        string_val: "p0loss/moving_w"
        string_val: "p0loss/moving_wx"
        string_val: "p1/intermediate_conv/w"
        string_val: "p1/intermediate_conv/w/Momentum"
        string_val: "p1/norm/beta"
        string_val: "p1/norm/beta/Momentum"
        string_val: "p1loss/moving_w"
        string_val: "p1loss/moving_wx"
        string_val: "p2/w"
        string_val: "p2/w/Momentum"
        string_val: "pacc1/moving_w"
        string_val: "pacc1/moving_wx"
        string_val: "ptentr/moving_w"
        string_val: "ptentr/moving_wx"
        string_val: "rconv1/norm1/beta"
        string_val: "rconv1/norm1/beta/Momentum"
        string_val: "rconv1/norm2/beta"
        string_val: "rconv1/norm2/beta/Momentum"
        string_val: "rconv1/norm2/gamma"
        string_val: "rconv1/norm2/gamma/Momentum"
        string_val: "rconv1/w1"
        string_val: "rconv1/w1/Momentum"
        string_val: "rconv1/w2"
        string_val: "rconv1/w2/Momentum"
        string_val: "rconv2/norm1/beta"
        string_val: "rconv2/norm1/beta/Momentum"
        string_val: "rconv2/norm2/beta"
        string_val: "rconv2/norm2/beta/Momentum"
        string_val: "rconv2/norm2/gamma"
        string_val: "rconv2/norm2/gamma/Momentum"
        string_val: "rconv2/w1"
        string_val: "rconv2/w1/Momentum"
        string_val: "rconv2/w2"
        string_val: "rconv2/w2/Momentum"
        string_val: "rconv3/norm1/beta"
        string_val: "rconv3/norm1/beta/Momentum"
        string_val: "rconv3/norm1b/beta"
        string_val: "rconv3/norm1b/beta/Momentum"
        string_val: "rconv3/norm2/beta"
        string_val: "rconv3/norm2/beta/Momentum"
        string_val: "rconv3/norm2/gamma"
        string_val: "rconv3/norm2/gamma/Momentum"
        string_val: "rconv3/w1a"
        string_val: "rconv3/w1a/Momentum"
        string_val: "rconv3/w1b"
        string_val: "rconv3/w1b/Momentum"
        string_val: "rconv3/w1r"
        string_val: "rconv3/w1r/Momentum"
        string_val: "rconv3/w2"
        string_val: "rconv3/w2/Momentum"
        string_val: "rconv4/norm1/beta"
        string_val: "rconv4/norm1/beta/Momentum"
        string_val: "rconv4/norm2/beta"
        string_val: "rconv4/norm2/beta/Momentum"
        string_val: "rconv4/norm2/gamma"
        string_val: "rconv4/norm2/gamma/Momentum"
        string_val: "rconv4/w1"
        string_val: "rconv4/w1/Momentum"
        string_val: "rconv4/w2"
        string_val: "rconv4/w2/Momentum"
        string_val: "rconv5/norm1/beta"
        string_val: "rconv5/norm1/beta/Momentum"
        string_val: "rconv5/norm1b/beta"
        string_val: "rconv5/norm1b/beta/Momentum"
        string_val: "rconv5/norm2/beta"
        string_val: "rconv5/norm2/beta/Momentum"
        string_val: "rconv5/norm2/gamma"
        string_val: "rconv5/norm2/gamma/Momentum"
        string_val: "rconv5/w1a"
        string_val: "rconv5/w1a/Momentum"
        string_val: "rconv5/w1b"
        string_val: "rconv5/w1b/Momentum"
        string_val: "rconv5/w1r"
        string_val: "rconv5/w1r/Momentum"
        string_val: "rconv5/w2"
        string_val: "rconv5/w2/Momentum"
        string_val: "rconv6/norm1/beta"
        string_val: "rconv6/norm1/beta/Momentum"
        string_val: "rconv6/norm2/beta"
        string_val: "rconv6/norm2/beta/Momentum"
        string_val: "rconv6/norm2/gamma"
        string_val: "rconv6/norm2/gamma/Momentum"
        string_val: "rconv6/w1"
        string_val: "rconv6/w1/Momentum"
        string_val: "rconv6/w2"
        string_val: "rconv6/w2/Momentum"
        string_val: "rloss/moving_w"
        string_val: "rloss/moving_wx"
        string_val: "rscloss/moving_w"
        string_val: "rscloss/moving_wx"
        string_val: "rsdloss/moving_w"
        string_val: "rsdloss/moving_wx"
        string_val: "sb2/b"
        string_val: "sb2/b/Momentum"
        string_val: "sb2/w"
        string_val: "sb2/w/Momentum"
        string_val: "sb2_offset/w"
        string_val: "sb2_offset/w/Momentum"
        string_val: "sb2_parity/w"
        string_val: "sb2_parity/w/Momentum"
        string_val: "sb3/w"
        string_val: "sb3/w/Momentum"
        string_val: "sbcdfloss/moving_w"
        string_val: "sbcdfloss/moving_wx"
        string_val: "sbpdfloss/moving_w"
        string_val: "sbpdfloss/moving_wx"
        string_val: "sbscale2/b"
        string_val: "sbscale2/b/Momentum"
        string_val: "sbscale2/w"
        string_val: "sbscale2/w/Momentum"
        string_val: "sbscale3/w"
        string_val: "sbscale3/w/Momentum"
        string_val: "seki/w"
        string_val: "seki/w/Momentum"
        string_val: "skloss/moving_w"
        string_val: "skloss/moving_wx"
        string_val: "sloss/moving_w"
        string_val: "sloss/moving_wx"
        string_val: "smloss/moving_w"
        string_val: "smloss/moving_wx"
        string_val: "tdsloss/moving_w"
        string_val: "tdsloss/moving_wx"
        string_val: "tdvloss/moving_w"
        string_val: "tdvloss/moving_wx"
        string_val: "trunk/norm/beta"
        string_val: "trunk/norm/beta/Momentum"
        string_val: "v1/norm/beta"
        string_val: "v1/norm/beta/Momentum"
        string_val: "v1/w"
        string_val: "v1/w/Momentum"
        string_val: "v2/b"
        string_val: "v2/b/Momentum"
        string_val: "v2/w"
        string_val: "v2/w/Momentum"
        string_val: "v3/b"
        string_val: "v3/b/Momentum"
        string_val: "v3/w"
        string_val: "v3/w/Momentum"
        string_val: "vloss/moving_w"
        string_val: "vloss/moving_wx"
        string_val: "vownership/w"
        string_val: "vownership/w/Momentum"
        string_val: "vscoring/w"
        string_val: "vscoring/w/Momentum"
        string_val: "vtimeloss/moving_w"
        string_val: "vtimeloss/moving_wx"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 184
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "conv1/w"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv1/w/Momentum"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "esstloss/moving_w"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "esstloss/moving_wx"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "evstloss/moving_w"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "evstloss/moving_wx"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "excessgnorm/moving_w"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "excessgnorm/moving_wx"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "fploss/moving_w"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "fploss/moving_wx"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "futurepos/w"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "futurepos/w/Momentum"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "g1/norm/beta"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "g1/norm/beta/Momentum"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "g1/w"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "g1/w/Momentum"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "ginputw"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "ginputw/Momentum"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "gnorm/moving_w"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "gnorm/moving_wx"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "leadloss/moving_w"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "leadloss/moving_wx"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "matmulg2w"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "matmulg2w/Momentum"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "matmulpass"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "matmulpass/Momentum"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "mmv3/b"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "mmv3/b/Momentum"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "mmv3/w"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "mmv3/w/Momentum"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "moving_unowned_proportion"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "mv3/b"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "mv3/b/Momentum"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "mv3/w"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "mv3/w/Momentum"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "oloss/moving_w"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "oloss/moving_wx"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "p0loss/moving_w"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "p0loss/moving_wx"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "p1/intermediate_conv/w"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "p1/intermediate_conv/w/Momentum"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "p1/norm/beta"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "p1/norm/beta/Momentum"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "p1loss/moving_w"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "p1loss/moving_wx"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "p2/w"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "p2/w/Momentum"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "pacc1/moving_w"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "pacc1/moving_wx"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "ptentr/moving_w"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "ptentr/moving_wx"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "rconv1/norm1/beta"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "rconv1/norm1/beta/Momentum"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "rconv1/norm2/beta"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "rconv1/norm2/beta/Momentum"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "rconv1/norm2/gamma"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "rconv1/norm2/gamma/Momentum"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "rconv1/w1"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "rconv1/w1/Momentum"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "rconv1/w2"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "rconv1/w2/Momentum"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "rconv2/norm1/beta"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "rconv2/norm1/beta/Momentum"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "rconv2/norm2/beta"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "rconv2/norm2/beta/Momentum"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "rconv2/norm2/gamma"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "rconv2/norm2/gamma/Momentum"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "rconv2/w1"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "rconv2/w1/Momentum"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "rconv2/w2"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "rconv2/w2/Momentum"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "rconv3/norm1/beta"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "rconv3/norm1/beta/Momentum"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "rconv3/norm1b/beta"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "rconv3/norm1b/beta/Momentum"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "rconv3/norm2/beta"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "rconv3/norm2/beta/Momentum"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "rconv3/norm2/gamma"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "rconv3/norm2/gamma/Momentum"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "rconv3/w1a"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "rconv3/w1a/Momentum"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "rconv3/w1b"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "rconv3/w1b/Momentum"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "rconv3/w1r"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "rconv3/w1r/Momentum"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "rconv3/w2"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "rconv3/w2/Momentum"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "rconv4/norm1/beta"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "rconv4/norm1/beta/Momentum"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "rconv4/norm2/beta"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "rconv4/norm2/beta/Momentum"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "rconv4/norm2/gamma"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "rconv4/norm2/gamma/Momentum"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "rconv4/w1"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "rconv4/w1/Momentum"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "rconv4/w2"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "rconv4/w2/Momentum"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "rconv5/norm1/beta"
  input: "save/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "rconv5/norm1/beta/Momentum"
  input: "save/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "rconv5/norm1b/beta"
  input: "save/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "rconv5/norm1b/beta/Momentum"
  input: "save/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "rconv5/norm2/beta"
  input: "save/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "rconv5/norm2/beta/Momentum"
  input: "save/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "rconv5/norm2/gamma"
  input: "save/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "rconv5/norm2/gamma/Momentum"
  input: "save/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "rconv5/w1a"
  input: "save/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "rconv5/w1a/Momentum"
  input: "save/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "rconv5/w1b"
  input: "save/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "rconv5/w1b/Momentum"
  input: "save/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "rconv5/w1r"
  input: "save/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "rconv5/w1r/Momentum"
  input: "save/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "rconv5/w2"
  input: "save/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "rconv5/w2/Momentum"
  input: "save/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "rconv6/norm1/beta"
  input: "save/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "rconv6/norm1/beta/Momentum"
  input: "save/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "rconv6/norm2/beta"
  input: "save/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "rconv6/norm2/beta/Momentum"
  input: "save/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "rconv6/norm2/gamma"
  input: "save/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "rconv6/norm2/gamma/Momentum"
  input: "save/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "rconv6/w1"
  input: "save/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "rconv6/w1/Momentum"
  input: "save/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "rconv6/w2"
  input: "save/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "rconv6/w2/Momentum"
  input: "save/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "rloss/moving_w"
  input: "save/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "rloss/moving_wx"
  input: "save/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "rscloss/moving_w"
  input: "save/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "rscloss/moving_wx"
  input: "save/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "rsdloss/moving_w"
  input: "save/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "rsdloss/moving_wx"
  input: "save/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "sb2/b"
  input: "save/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "sb2/b/Momentum"
  input: "save/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "sb2/w"
  input: "save/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "sb2/w/Momentum"
  input: "save/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "sb2_offset/w"
  input: "save/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "sb2_offset/w/Momentum"
  input: "save/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "sb2_parity/w"
  input: "save/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "sb2_parity/w/Momentum"
  input: "save/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "sb3/w"
  input: "save/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "sb3/w/Momentum"
  input: "save/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "sbcdfloss/moving_w"
  input: "save/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "sbcdfloss/moving_wx"
  input: "save/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "sbpdfloss/moving_w"
  input: "save/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "sbpdfloss/moving_wx"
  input: "save/Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "sbscale2/b"
  input: "save/Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "sbscale2/b/Momentum"
  input: "save/Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "sbscale2/w"
  input: "save/Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "sbscale2/w/Momentum"
  input: "save/Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "sbscale3/w"
  input: "save/Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "sbscale3/w/Momentum"
  input: "save/Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "seki/w"
  input: "save/Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_152"
  op: "Identity"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "seki/w/Momentum"
  input: "save/Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_153"
  op: "Identity"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "skloss/moving_w"
  input: "save/Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_154"
  op: "Identity"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "skloss/moving_wx"
  input: "save/Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_155"
  op: "Identity"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "sloss/moving_w"
  input: "save/Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_156"
  op: "Identity"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "sloss/moving_wx"
  input: "save/Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_157"
  op: "Identity"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "smloss/moving_w"
  input: "save/Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_158"
  op: "Identity"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "smloss/moving_wx"
  input: "save/Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_159"
  op: "Identity"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "tdsloss/moving_w"
  input: "save/Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_160"
  op: "Identity"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "tdsloss/moving_wx"
  input: "save/Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_161"
  op: "Identity"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "tdvloss/moving_w"
  input: "save/Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_162"
  op: "Identity"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "tdvloss/moving_wx"
  input: "save/Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_163"
  op: "Identity"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "trunk/norm/beta"
  input: "save/Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_164"
  op: "Identity"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "trunk/norm/beta/Momentum"
  input: "save/Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_165"
  op: "Identity"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "v1/norm/beta"
  input: "save/Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_166"
  op: "Identity"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "v1/norm/beta/Momentum"
  input: "save/Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_167"
  op: "Identity"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "v1/w"
  input: "save/Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_168"
  op: "Identity"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "v1/w/Momentum"
  input: "save/Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_169"
  op: "Identity"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "v2/b"
  input: "save/Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_170"
  op: "Identity"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "v2/b/Momentum"
  input: "save/Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_171"
  op: "Identity"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "v2/w"
  input: "save/Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_172"
  op: "Identity"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "v2/w/Momentum"
  input: "save/Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_173"
  op: "Identity"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "v3/b"
  input: "save/Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_174"
  op: "Identity"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "v3/b/Momentum"
  input: "save/Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_175"
  op: "Identity"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "v3/w"
  input: "save/Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_176"
  op: "Identity"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "v3/w/Momentum"
  input: "save/Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_177"
  op: "Identity"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "vloss/moving_w"
  input: "save/Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_178"
  op: "Identity"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "vloss/moving_wx"
  input: "save/Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_179"
  op: "Identity"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "vownership/w"
  input: "save/Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_180"
  op: "Identity"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "vownership/w/Momentum"
  input: "save/Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_181"
  op: "Identity"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "vscoring/w"
  input: "save/Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_182"
  op: "Identity"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "vscoring/w/Momentum"
  input: "save/Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_183"
  op: "Identity"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "vtimeloss/moving_w"
  input: "save/Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_184"
  op: "Identity"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "vtimeloss/moving_wx"
  input: "save/Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_100"
  input: "^save/AssignVariableOp_101"
  input: "^save/AssignVariableOp_102"
  input: "^save/AssignVariableOp_103"
  input: "^save/AssignVariableOp_104"
  input: "^save/AssignVariableOp_105"
  input: "^save/AssignVariableOp_106"
  input: "^save/AssignVariableOp_107"
  input: "^save/AssignVariableOp_108"
  input: "^save/AssignVariableOp_109"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_110"
  input: "^save/AssignVariableOp_111"
  input: "^save/AssignVariableOp_112"
  input: "^save/AssignVariableOp_113"
  input: "^save/AssignVariableOp_114"
  input: "^save/AssignVariableOp_115"
  input: "^save/AssignVariableOp_116"
  input: "^save/AssignVariableOp_117"
  input: "^save/AssignVariableOp_118"
  input: "^save/AssignVariableOp_119"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_120"
  input: "^save/AssignVariableOp_121"
  input: "^save/AssignVariableOp_122"
  input: "^save/AssignVariableOp_123"
  input: "^save/AssignVariableOp_124"
  input: "^save/AssignVariableOp_125"
  input: "^save/AssignVariableOp_126"
  input: "^save/AssignVariableOp_127"
  input: "^save/AssignVariableOp_128"
  input: "^save/AssignVariableOp_129"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_130"
  input: "^save/AssignVariableOp_131"
  input: "^save/AssignVariableOp_132"
  input: "^save/AssignVariableOp_133"
  input: "^save/AssignVariableOp_134"
  input: "^save/AssignVariableOp_135"
  input: "^save/AssignVariableOp_136"
  input: "^save/AssignVariableOp_137"
  input: "^save/AssignVariableOp_138"
  input: "^save/AssignVariableOp_139"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_140"
  input: "^save/AssignVariableOp_141"
  input: "^save/AssignVariableOp_142"
  input: "^save/AssignVariableOp_143"
  input: "^save/AssignVariableOp_144"
  input: "^save/AssignVariableOp_145"
  input: "^save/AssignVariableOp_146"
  input: "^save/AssignVariableOp_147"
  input: "^save/AssignVariableOp_148"
  input: "^save/AssignVariableOp_149"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_150"
  input: "^save/AssignVariableOp_151"
  input: "^save/AssignVariableOp_152"
  input: "^save/AssignVariableOp_153"
  input: "^save/AssignVariableOp_154"
  input: "^save/AssignVariableOp_155"
  input: "^save/AssignVariableOp_156"
  input: "^save/AssignVariableOp_157"
  input: "^save/AssignVariableOp_158"
  input: "^save/AssignVariableOp_159"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_160"
  input: "^save/AssignVariableOp_161"
  input: "^save/AssignVariableOp_162"
  input: "^save/AssignVariableOp_163"
  input: "^save/AssignVariableOp_164"
  input: "^save/AssignVariableOp_165"
  input: "^save/AssignVariableOp_166"
  input: "^save/AssignVariableOp_167"
  input: "^save/AssignVariableOp_168"
  input: "^save/AssignVariableOp_169"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_170"
  input: "^save/AssignVariableOp_171"
  input: "^save/AssignVariableOp_172"
  input: "^save/AssignVariableOp_173"
  input: "^save/AssignVariableOp_174"
  input: "^save/AssignVariableOp_175"
  input: "^save/AssignVariableOp_176"
  input: "^save/AssignVariableOp_177"
  input: "^save/AssignVariableOp_178"
  input: "^save/AssignVariableOp_179"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_180"
  input: "^save/AssignVariableOp_181"
  input: "^save/AssignVariableOp_182"
  input: "^save/AssignVariableOp_183"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
  input: "^save/AssignVariableOp_99"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "cond_7_true_2905"
      input_arg {
        name: "reversev2_cond_6_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_6_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_6_true_2895"
      input_arg {
        name: "transpose_mul_74"
        type: DT_FLOAT
      }
      output_arg {
        name: "transpose"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "transpose/perm"
      }
    }
    node_def {
      name: "transpose_0"
      op: "Transpose"
      input: "transpose_mul_74"
      input: "transpose/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "transpose"
      }
    }
    ret {
      key: "transpose"
      value: "transpose_0:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_flat_map_lambda_1676"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TensorSliceDataset"
    }
    node_def {
      name: "flat_filenames/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "flat_filenames/shape"
      }
    }
    node_def {
      name: "flat_filenames"
      op: "Reshape"
      input: "args_0"
      input: "flat_filenames/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "flat_filenames"
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "flat_filenames:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "TensorSliceDataset"
      }
    }
    node_def {
      name: "FlatMapDataset"
      op: "FlatMapDataset"
      input: "TensorSliceDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_flat_map_read_one_file_1673"
            attr {
              key: "_tf_data_function"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      experimental_debug_info {
        original_node_names: "FlatMapDataset"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "FlatMapDataset:handle:0"
      input: "^TensorSliceDataset"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "TensorSliceDataset"
      value: "TensorSliceDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_3_true_2510"
      input_arg {
        name: "transpose_sub_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "transpose"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "transpose/perm"
      }
    }
    node_def {
      name: "transpose_0"
      op: "Transpose"
      input: "transpose_sub_4"
      input: "transpose/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "transpose"
      }
    }
    ret {
      key: "transpose"
      value: "transpose_0:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_14_true_3031_grad_5259"
      input_arg {
        name: "gradients_grad_ys_0_gradients_futurepos_output_grad_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_futurepos_output_grad_reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2/Const"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2"
      op: "ReverseV2"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/ReverseV2_grad/ReverseV2/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/ReverseV2_grad/ReverseV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_7_false_2906_grad_5638"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_8_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_8_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_3_true_2510_grad_6002"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_4_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_4_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/transpose_grad/InvertPermutation/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/InvertPermutation/Const"
      }
    }
    node_def {
      name: "gradients/transpose_grad/InvertPermutation"
      op: "InvertPermutation"
      input: "gradients/transpose_grad/InvertPermutation/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/InvertPermutation"
      }
    }
    node_def {
      name: "gradients/transpose_grad/transpose"
      op: "Transpose"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/transpose_grad/InvertPermutation:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/transpose"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/transpose_grad/transpose:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_11_false_2974"
      input_arg {
        name: "cond_10_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_10_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_10_identity"
      value: "cond_10_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_13_false_3022"
      input_arg {
        name: "cond_12_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_12_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_12_identity"
      value: "cond_12_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_false_4134"
      input_arg {
        name: "placeholder"
        type: DT_FLOAT
      }
      input_arg {
        name: "const_38_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "const_38"
        type: DT_FLOAT
      }
    }
    ret {
      key: "const_38"
      value: "const_38_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_13_true_3021_grad_5394"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_14_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_14_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2/Const"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2"
      op: "ReverseV2"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/ReverseV2_grad/ReverseV2/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/ReverseV2_grad/ReverseV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_15_false_3070_grad_5726"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_16_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_16_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_7_true_2905_grad_5631"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_8_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_8_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2/Const"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2"
      op: "ReverseV2"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/ReverseV2_grad/ReverseV2/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/ReverseV2_grad/ReverseV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_13_false_3022_grad_5401"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_14_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_14_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_map_parse_input_1719"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_UINT8
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_5"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/Const"
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/Const_1"
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/Const_2"
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/Const_3"
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/Const_4"
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/Const_5"
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/ParseExampleV2/names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/ParseExampleV2/names"
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/ParseExampleV2/sparse_keys"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/ParseExampleV2/sparse_keys"
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/ParseExampleV2/dense_keys"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 6
              }
            }
            string_val: "binchwp"
            string_val: "ginc"
            string_val: "gtnc"
            string_val: "ptncm"
            string_val: "sdn"
            string_val: "vtnchw"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/ParseExampleV2/dense_keys"
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/ParseExampleV2/ragged_keys"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/ParseExampleV2/ragged_keys"
      }
    }
    node_def {
      name: "ParseSingleExample/ParseExample/ParseExampleV2"
      op: "ParseExampleV2"
      input: "args_0"
      input: "ParseSingleExample/ParseExample/ParseExampleV2/names:output:0"
      input: "ParseSingleExample/ParseExample/ParseExampleV2/sparse_keys:output:0"
      input: "ParseSingleExample/ParseExample/ParseExampleV2/dense_keys:output:0"
      input: "ParseSingleExample/ParseExample/ParseExampleV2/ragged_keys:output:0"
      input: "ParseSingleExample/ParseExample/Const:output:0"
      input: "ParseSingleExample/ParseExample/Const_1:output:0"
      input: "ParseSingleExample/ParseExample/Const_2:output:0"
      input: "ParseSingleExample/ParseExample/Const_3:output:0"
      input: "ParseSingleExample/ParseExample/Const_4:output:0"
      input: "ParseSingleExample/ParseExample/Const_5:output:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_STRING
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 2432
              }
            }
            shape {
              dim {
                size: 8192
              }
            }
            shape {
              dim {
                size: 92672
              }
            }
            shape {
              dim {
                size: 107776
              }
            }
            shape {
              dim {
                size: 231040
              }
            }
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 2432
              }
            }
            shape {
              dim {
                size: 8192
              }
            }
            shape {
              dim {
                size: 92672
              }
            }
            shape {
              dim {
                size: 107776
              }
            }
            shape {
              dim {
                size: 231040
              }
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "ragged_split_types"
        value {
          list {
          }
        }
      }
      attr {
        key: "ragged_value_types"
        value {
          list {
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleExample/ParseExample/ParseExampleV2"
      }
    }
    node_def {
      name: "DecodeRaw"
      op: "DecodeRaw"
      input: "ParseSingleExample/ParseExample/ParseExampleV2:dense_values:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "little_endian"
        value {
          b: true
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_UINT8
        }
      }
      experimental_debug_info {
        original_node_names: "DecodeRaw"
      }
    }
    node_def {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\200\000\000\000\026\000\000\000.\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape/shape"
      }
    }
    node_def {
      name: "Reshape"
      op: "Reshape"
      input: "DecodeRaw:output:0"
      input: "Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 22
              }
              dim {
                size: 46
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape"
      }
    }
    node_def {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\023\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape_1/shape"
      }
    }
    node_def {
      name: "Reshape_1"
      op: "Reshape"
      input: "ParseSingleExample/ParseExample/ParseExampleV2:dense_values:1"
      input: "Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape_1"
      }
    }
    node_def {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\200\000\000\000\002\000\000\000j\001\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape_2/shape"
      }
    }
    node_def {
      name: "Reshape_2"
      op: "Reshape"
      input: "ParseSingleExample/ParseExample/ParseExampleV2:dense_values:3"
      input: "Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 2
              }
              dim {
                size: 362
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape_2"
      }
    }
    node_def {
      name: "Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000@\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape_3/shape"
      }
    }
    node_def {
      name: "Reshape_3"
      op: "Reshape"
      input: "ParseSingleExample/ParseExample/ParseExampleV2:dense_values:2"
      input: "Reshape_3/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape_3"
      }
    }
    node_def {
      name: "Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000J\003\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape_4/shape"
      }
    }
    node_def {
      name: "Reshape_4"
      op: "Reshape"
      input: "ParseSingleExample/ParseExample/ParseExampleV2:dense_values:4"
      input: "Reshape_4/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 842
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape_4"
      }
    }
    node_def {
      name: "Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\200\000\000\000\005\000\000\000\023\000\000\000\023\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape_5/shape"
      }
    }
    node_def {
      name: "Reshape_5"
      op: "Reshape"
      input: "ParseSingleExample/ParseExample/ParseExampleV2:dense_values:5"
      input: "Reshape_5/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 5
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Reshape_5"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 22
              }
              dim {
                size: 46
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "Reshape_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 2
              }
              dim {
                size: 362
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "Reshape_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 842
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "Reshape_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 5
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_5"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_5_true_2530"
      input_arg {
        name: "reversev2_cond_4_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_4_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_9_true_2953_grad_5810"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_10_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_10_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/transpose_grad/InvertPermutation/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/InvertPermutation/Const"
      }
    }
    node_def {
      name: "gradients/transpose_grad/InvertPermutation"
      op: "InvertPermutation"
      input: "gradients/transpose_grad/InvertPermutation/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/InvertPermutation"
      }
    }
    node_def {
      name: "gradients/transpose_grad/transpose"
      op: "Transpose"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/transpose_grad/InvertPermutation:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/transpose"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/transpose_grad/transpose:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_15_true_3069"
      input_arg {
        name: "transpose_mul_80"
        type: DT_FLOAT
      }
      output_arg {
        name: "transpose"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "transpose/perm"
      }
    }
    node_def {
      name: "transpose_0"
      op: "Transpose"
      input: "transpose_mul_80"
      input: "transpose/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "transpose"
      }
    }
    ret {
      key: "transpose"
      value: "transpose_0:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_5_false_2531"
      input_arg {
        name: "cond_4_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_4_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_4_identity"
      value: "cond_4_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_false_1643"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "global_step_initializer_zeros_0"
        type: DT_INT64
      }
      output_arg {
        name: "global_step_initializer_zeros"
        type: DT_INT64
      }
    }
    ret {
      key: "global_step_initializer_zeros"
      value: "global_step_initializer_zeros_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_10_true_2963"
      input_arg {
        name: "reversev2_cond_9_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_9_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "PiecewiseConstant_case_cond_true_4128"
      input_arg {
        name: "const_38_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder"
        type: DT_BOOL
      }
      input_arg {
        name: "placeholder_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "const_38"
        type: DT_FLOAT
      }
    }
    ret {
      key: "const_38"
      value: "const_38_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_1_true_1903"
      input_arg {
        name: "reversev2_cond_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 22
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 22
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 22
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_4_false_2521"
      input_arg {
        name: "cond_3_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_3_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_3_identity"
      value: "cond_3_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_14_false_3032_grad_5266"
      input_arg {
        name: "gradients_grad_ys_0_gradients_futurepos_output_grad_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_futurepos_output_grad_reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_true_1893"
      input_arg {
        name: "reversev2_reshape_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_reshape_2"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 22
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 22
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 22
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_12_false_3012_grad_5567"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_13_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_13_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_14_true_3031"
      input_arg {
        name: "reversev2_cond_13_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_13_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "PiecewiseConstant_case_Assert_AssertGuard_false_4116"
      input_arg {
        name: "assert_piecewiseconstant_case_lessequal"
        type: DT_BOOL
      }
      input_arg {
        name: "assert_piecewiseconstant_case_preds_c"
        type: DT_BOOL
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      is_stateful: true
    }
    node_def {
      name: "Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Input error: exclusive=True: more than 1 conditions (PiecewiseConstant/LessEqual:0, PiecewiseConstant/Greater:0) evaluated as True:"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_0"
      }
    }
    node_def {
      name: "Assert"
      op: "Assert"
      input: "assert_piecewiseconstant_case_lessequal"
      input: "Assert/data_0:output:0"
      input: "assert_piecewiseconstant_case_preds_c"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_BOOL
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 2
        }
      }
      experimental_debug_info {
        original_node_names: "Assert"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "assert_piecewiseconstant_case_lessequal"
      input: "^Assert"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_6_false_2896_grad_5767"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_7_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_7_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "PiecewiseConstant_case_cond_false_4129"
      input_arg {
        name: "cond_const_38"
        type: DT_FLOAT
      }
      input_arg {
        name: "cond_piecewiseconstant_greater"
        type: DT_BOOL
      }
      input_arg {
        name: "cond_const_39"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "cond"
      op: "StatelessIf"
      input: "cond_piecewiseconstant_greater"
      input: "cond_const_39"
      input: "cond_const_38"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "_read_only_resource_inputs"
        value {
          list {
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "cond_false_4134"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "cond_true_4133"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "cond"
      }
    }
    node_def {
      name: "cond/Identity"
      op: "Identity"
      input: "cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "cond/Identity"
      }
    }
    ret {
      key: "cond_identity"
      value: "cond/Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_12_true_3011"
      input_arg {
        name: "transpose_mul_78"
        type: DT_FLOAT
      }
      output_arg {
        name: "transpose"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "transpose/perm"
      }
    }
    node_def {
      name: "transpose_0"
      op: "Transpose"
      input: "transpose_mul_78"
      input: "transpose/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "transpose"
      }
    }
    ret {
      key: "transpose"
      value: "transpose_0:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_8_true_2915"
      input_arg {
        name: "reversev2_cond_7_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_7_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_8_false_2916"
      input_arg {
        name: "cond_7_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_7_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_7_identity"
      value: "cond_7_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_14_false_3032"
      input_arg {
        name: "cond_13_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_13_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_13_identity"
      value: "cond_13_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_10_true_2963_grad_5698"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_11_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_11_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2/Const"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2"
      op: "ReverseV2"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/ReverseV2_grad/ReverseV2/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/ReverseV2_grad/ReverseV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_1_false_1904"
      input_arg {
        name: "cond_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_identity"
      value: "cond_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 22
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 22
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_17_true_3089_grad_5408"
      input_arg {
        name: "gradients_grad_ys_0_gradients_seki_output_grad_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_seki_output_grad_reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2/Const"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2"
      op: "ReverseV2"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/ReverseV2_grad/ReverseV2/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/ReverseV2_grad/ReverseV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_12_true_3011_grad_5559"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_13_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_13_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/transpose_grad/InvertPermutation/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/InvertPermutation/Const"
      }
    }
    node_def {
      name: "gradients/transpose_grad/InvertPermutation"
      op: "InvertPermutation"
      input: "gradients/transpose_grad/InvertPermutation/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/InvertPermutation"
      }
    }
    node_def {
      name: "gradients/transpose_grad/transpose"
      op: "Transpose"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/transpose_grad/InvertPermutation:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/transpose"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/transpose_grad/transpose:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_flat_map_read_one_file_1673"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TFRecordDataset"
    }
    node_def {
      name: "compression_type"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "ZLIB"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "compression_type"
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
      experimental_debug_info {
        original_node_names: "buffer_size"
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "args_0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "TFRecordDataset"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "TFRecordDataset:handle:0"
      input: "^TFRecordDataset"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "TFRecordDataset"
      value: "TFRecordDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_10_false_2964"
      input_arg {
        name: "cond_9_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_9_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_9_identity"
      value: "cond_9_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_8_true_2915_grad_5487"
      input_arg {
        name: "gradients_grad_ys_0_gradients_ownership_output_grad_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_ownership_output_grad_reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2/Const"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2"
      op: "ReverseV2"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/ReverseV2_grad/ReverseV2/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/ReverseV2_grad/ReverseV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_9_true_2953"
      input_arg {
        name: "transpose_mul_76"
        type: DT_FLOAT
      }
      output_arg {
        name: "transpose"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "transpose/perm"
      }
    }
    node_def {
      name: "transpose_0"
      op: "Transpose"
      input: "transpose_mul_76"
      input: "transpose/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "transpose"
      }
    }
    ret {
      key: "transpose"
      value: "transpose_0:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_11_true_2973"
      input_arg {
        name: "reversev2_cond_10_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_10_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_11_false_2974_grad_5552"
      input_arg {
        name: "gradients_grad_ys_0_gradients_scoring_output_grad_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_scoring_output_grad_reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_3_false_2511"
      input_arg {
        name: "sub_4_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "sub_4"
        type: DT_FLOAT
      }
    }
    ret {
      key: "sub_4"
      value: "sub_4_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_5_true_2530_grad_5841"
      input_arg {
        name: "gradients_grad_ys_0_gradients_reshape_13_grad_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_reshape_13_grad_reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2/Const"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2"
      op: "ReverseV2"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/ReverseV2_grad/ReverseV2/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/ReverseV2_grad/ReverseV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_5_false_2531_grad_5848"
      input_arg {
        name: "gradients_grad_ys_0_gradients_reshape_13_grad_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_reshape_13_grad_reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_8_false_2916_grad_5494"
      input_arg {
        name: "gradients_grad_ys_0_gradients_ownership_output_grad_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_ownership_output_grad_reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_2_true_1913"
      input_arg {
        name: "transpose_cond_1_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "transpose"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "transpose/perm"
      }
    }
    node_def {
      name: "transpose_0"
      op: "Transpose"
      input: "transpose_cond_1_identity"
      input: "transpose/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "transpose"
      }
    }
    ret {
      key: "transpose"
      value: "transpose_0:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 22
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 22
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "PiecewiseConstant_case_Assert_AssertGuard_true_4115"
      input_arg {
        name: "identity_piecewiseconstant_case_lessequal"
        type: DT_BOOL
      }
      input_arg {
        name: "placeholder"
        type: DT_BOOL
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      experimental_debug_info {
        original_node_names: "NoOp"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "identity_piecewiseconstant_case_lessequal"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_6_false_2896"
      input_arg {
        name: "mul_74_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "mul_74"
        type: DT_FLOAT
      }
    }
    ret {
      key: "mul_74"
      value: "mul_74_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_16_false_3080_grad_5581"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_17_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_17_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_7_false_2906"
      input_arg {
        name: "cond_6_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_6_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_6_identity"
      value: "cond_6_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_true_1642"
      input_arg {
        name: "read_readvariableop_global_step"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
    }
    node_def {
      name: "Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "read_readvariableop_global_step"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      experimental_debug_info {
        original_node_names: "Read/ReadVariableOp"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Read/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_9_false_2954_grad_5818"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_10_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_10_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_16_false_3080"
      input_arg {
        name: "cond_15_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_15_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_15_identity"
      value: "cond_15_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_4_true_2520"
      input_arg {
        name: "reversev2_cond_3_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_3_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_11_true_2973_grad_5545"
      input_arg {
        name: "gradients_grad_ys_0_gradients_scoring_output_grad_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_scoring_output_grad_reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2/Const"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2"
      op: "ReverseV2"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/ReverseV2_grad/ReverseV2/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/ReverseV2_grad/ReverseV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_15_true_3069_grad_5718"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_16_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_16_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/transpose_grad/InvertPermutation/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/InvertPermutation/Const"
      }
    }
    node_def {
      name: "gradients/transpose_grad/InvertPermutation"
      op: "InvertPermutation"
      input: "gradients/transpose_grad/InvertPermutation/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/InvertPermutation"
      }
    }
    node_def {
      name: "gradients/transpose_grad/transpose"
      op: "Transpose"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/transpose_grad/InvertPermutation:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/transpose"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/transpose_grad/transpose:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_12_false_3012"
      input_arg {
        name: "mul_78_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "mul_78"
        type: DT_FLOAT
      }
    }
    ret {
      key: "mul_78"
      value: "mul_78_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_6_true_2895_grad_5759"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_7_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_7_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/transpose_grad/InvertPermutation/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/InvertPermutation/Const"
      }
    }
    node_def {
      name: "gradients/transpose_grad/InvertPermutation"
      op: "InvertPermutation"
      input: "gradients/transpose_grad/InvertPermutation/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/InvertPermutation"
      }
    }
    node_def {
      name: "gradients/transpose_grad/transpose"
      op: "Transpose"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/transpose_grad/InvertPermutation:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/transpose_grad/transpose"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/transpose_grad/transpose:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_3_false_2511_grad_6010"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_4_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_4_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_9_false_2954"
      input_arg {
        name: "mul_76_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "mul_76"
        type: DT_FLOAT
      }
    }
    ret {
      key: "mul_76"
      value: "mul_76_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_13_true_3021"
      input_arg {
        name: "reversev2_cond_12_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_12_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_2_false_1914"
      input_arg {
        name: "cond_1_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_1_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_1_identity"
      value: "cond_1_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 22
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 22
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_false_1894"
      input_arg {
        name: "reshape_2_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "reshape_2"
        type: DT_FLOAT
      }
    }
    ret {
      key: "reshape_2"
      value: "reshape_2_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 22
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 22
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_true_4133"
      input_arg {
        name: "const_39_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder"
        type: DT_FLOAT
      }
      output_arg {
        name: "const_39"
        type: DT_FLOAT
      }
    }
    ret {
      key: "const_39"
      value: "const_39_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_17_false_3090"
      input_arg {
        name: "cond_16_identity_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cond_16_identity"
        type: DT_FLOAT
      }
    }
    ret {
      key: "cond_16_identity"
      value: "cond_16_identity_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_10_false_2964_grad_5705"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_11_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_11_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_4_false_2521_grad_5939"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_5_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_5_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_16_true_3079"
      input_arg {
        name: "reversev2_cond_15_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_15_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_17_true_3089"
      input_arg {
        name: "reversev2_cond_16_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "reversev2"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ReverseV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2/axis"
      }
    }
    node_def {
      name: "ReverseV2"
      op: "ReverseV2"
      input: "reversev2_cond_16_identity"
      input: "ReverseV2/axis:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ReverseV2"
      }
    }
    ret {
      key: "reversev2"
      value: "ReverseV2:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_17_false_3090_grad_5415"
      input_arg {
        name: "gradients_grad_ys_0_gradients_seki_output_grad_reshape"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_seki_output_grad_reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/grad_ys_0:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_15_false_3070"
      input_arg {
        name: "mul_80_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "mul_80"
        type: DT_FLOAT
      }
    }
    ret {
      key: "mul_80"
      value: "mul_80_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_16_true_3079_grad_5574"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_17_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_17_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2/Const"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2"
      op: "ReverseV2"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/ReverseV2_grad/ReverseV2/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/ReverseV2_grad/ReverseV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 4
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 4
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "cond_4_true_2520_grad_5932"
      input_arg {
        name: "gradients_grad_ys_0_gradients_cond_5_grad_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "gradients_grad_ys_0_gradients_cond_5_grad_identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2/Const"
      }
    }
    node_def {
      name: "gradients/ReverseV2_grad/ReverseV2"
      op: "ReverseV2"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/ReverseV2_grad/ReverseV2/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/ReverseV2_grad/ReverseV2"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "gradients/ReverseV2_grad/ReverseV2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 19
            }
            dim {
              size: 19
            }
            dim {
              size: 2
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
                dim {
                  size: 19
                }
                dim {
                  size: 19
                }
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
  }
}
versions {
  producer: 561
  min_consumer: 12
}
